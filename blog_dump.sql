PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "posts" (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        slug TEXT UNIQUE NOT NULL,
        title TEXT NOT NULL,
        content TEXT,
        content_html TEXT,
        excerpt TEXT,
      description TEXT,
      is_published BOOLEAN NOT NULL DEFAULT 0,
      is_featured BOOLEAN NOT NULL DEFAULT 0,
      is_yaml_valid BOOLEAN NOT NULL DEFAULT 1,
      is_manually_edited BOOLEAN NOT NULL DEFAULT 0,
      reading_time INTEGER DEFAULT 0,
      source_path TEXT CHECK(length(source_path) <= 512),
      image_url TEXT CHECK(length(image_url) <= 512),
      yuque_url TEXT CHECK(length(yuque_url) <= 512),
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      published_at DATETIME
    );
INSERT INTO posts VALUES(8,'notion-plus-cursor-shi-yong-zhi-nan-5673uwrh','Notion + Cursor 使用指南',replace('\n# Notion + Cursor 使用指南\n\n## 简介\n\nNotion 和 Cursor 是两个强大的生产力工具，本文将介绍如何将它们结合使用，以提高工作效率。\n\n## Notion 的优势\n\n- 强大的文档管理功能\n- 灵活的数据库功能\n- 优秀的协作体验\n\n## Cursor 的优势\n\n- 智能代码补全\n- 强大的代码导航\n- 集成的 AI 助手\n\n## 如何结合使用\n\n1. 在 Notion 中创建项目文档\n2. 使用 Cursor 编写代码\n3. 将代码片段复制到 Notion\n4. 使用 Notion 的评论功能进行代码审查\n\n## 总结\n\n通过结合使用 Notion 和 Cursor，可以显著提高开发效率。','\n',char(10)),NULL,NULL,NULL,1,0,0,0,1,'tech-tools/2025-01-24-notion+cursor.md',NULL,NULL,'2025-05-07T13:38:08.166Z','2025-05-07T13:38:08.166Z',NULL);
INSERT INTO posts VALUES(28,'vscode-drawio-usage-5676juqi','vscode-drawio-usage',replace('# VS Code中使用Draw.io完全指南\n\n## 1. 基础设置\n### 1.1 安装配置\n1. **安装Draw.io Integration插件**\n   - 打开VS Code扩展市场（Ctrl+Shift+X）\n   - 搜索"Draw.io Integration"\n   - 点击安装，由hediet.vscode-drawio提供\n   - 重启VS Code\n\n### 1.2 工作区设置\n- 在settings.json中添加以下配置：\n```json\n{\n    "hediet.vscode-drawio.theme": "Kennedy", // 设置主题\n    "hediet.vscode-drawio.autoSave": true,   // 启用自动保存\n}\n```\n\n## 2. 高级功能\n### 2.1 版本控制\n- 支持Git版本控制\n- `.drawio.svg`格式便于在Git中追踪变更\n- 推荐使用`.drawio.png`格式在GitHub上直接预览\n\n### 2.2 团队协作\n- 使用Live Share进行实时协作\n- 支持多人同时编辑\n- 可以通过注释功能进行讨论\n\n## 3. 图表类型\n- 流程图\n- UML图\n- 架构图\n- 思维导图\n- 网络拓扑图\n\n## 4. 常用快捷键\n- `Ctrl+D`: 复制选中元素\n- `Delete`: 删除选中元素\n- `Ctrl+S`: 保存图表\n- `Ctrl+F`: 搜索图形\n- `Ctrl+G`: 组合选中元素\n- `Ctrl+Shift+U`: 取消组合\n\n## 5. 常见问题解决\n### 5.1 SVG导出问题\n- 确保安装了最新版本\n- 使用"Export"而非"另存为"\n- 检查文件权限\n\n### 5.2 性能优化\n- 大型图表建议拆分\n- 定期清理未使用元素\n- 使用分层管理复杂图表\n\n## 6. Markdown集成\n### Markdown中嵌入Draw.io图表的方法\n\n#### 方法一：使用fenced code block\n在Markdown文件中，您可以使用以下语法直接嵌入Draw.io图表：\n\n```drawio\nflowchart TD\n    A[开始] --> B{判断}\n    B -->|是| C[处理1]\n    B -->|否| D[处理2]\n```\n\n#### 方法二：引用外部图表文件\n1. 创建一个`.drawio.svg`文件\n2. 在Markdown中使用图片语法引用：\n```markdown\n![流程图](./your-diagram.drawio.svg)\n```\n\n#### 方法三：混合文档\n可以创建`.drawio.md`后缀的文件，这种文件既支持Markdown编写也支持Draw.io绘图。\n\n### 6.1 高级整合技巧\n- 支持Dark/Light主题自适应\n- 可添加交互式链接\n- 支持实时渲染\n\n## 7. 最佳实践\n- 使用模板提高效率\n- 建立统一的图表样式指南\n- 定期备份重要图表\n- 使用图层管理复杂图表\n\n## 8. 扩展功能\n- 支持脚本自动化\n- 集成其他VS Code插件\n- 自定义图形库','\n',char(10)),NULL,'','',1,0,0,0,7,'tech-tools/vscode-drawio-usage.md',NULL,NULL,'2025-04-03T00:00:00.000Z','2025-05-07T15:19:47.006Z',NULL);
INSERT INTO posts VALUES(53,'notioncursor-2','2025-01-24-notion+cursor','',NULL,NULL,'',1,0,0,0,1,NULL,NULL,'','2025-05-08T05:23:34.763Z','2025-05-08T05:23:34.763Z',NULL);
INSERT INTO posts VALUES(56,'how-to-get-notion-database-fields-summary-5676nw9c','how-to-get-notion-database-fields-summary',replace('# 文章摘要\n\n本文详细介绍了如何获取Notion数据库字段信息的完整流程，包括：\n\n- 准备工作：获取必要的Notion账户和权限\n- 使用命令行工具获取字段信息\n- 使用Postman工具获取字段信息\n- 如何解析和提取关键字段信息\n- 注意事项和最佳实践\n\n# 参考资料\n\n1. [Notion API 官方文档](https://developers.notion.com/)\n2. [Postman 官方网站](https://www.postman.com/)\n3. [Notion API 使用指南](https://developers.notion.com/docs)','\n',char(10)),NULL,'','',1,0,0,0,2,'tech-tools/how-to-get-notion-database-fields-summary.md',NULL,'','2025-04-03T00:00:00.000Z','2025-05-07T15:19:47.003Z',NULL);
INSERT INTO posts VALUES(68,'asset','asset',replace('前端设计\n    \n    \n    🏠 My Financial Home\n    \n    [欢迎区]\n    ┌─────────────────────────────────────────┐\n    │ 早安，[用户名]                          │\n    │ 今日财务健康度：92分 ｜ 较上月：↑3分     │\n    └─────────────────────────────────────────┘\n    \n    [核心指标区 - 三卡片]\n    ┌─────────────┐ ┌─────────────┐ ┌─────────────┐\n    │💎 净资产    │ │📈 投资理财   │ │🎯 月度储蓄  │\n    │2,234,712   │ │1,505,474    │ │31,900      │\n    │较上月+4.8% │ │收益率+8.3%   │ │目标完成106% │\n    └─────────────┘ └─────────────┘ └─────────────┘\n    \n    [月度变化分析区 - 双栏]\n    ┌─────────────────────────────┐ ┌─────────────────────────────┐\n    │ 📊 资产负债月度趋势          │ │ 💰 现金流月度分析            │\n    │                             │ │                             │\n    │ [折线图]                    │ │ [堆叠柱状图]                │\n    │ 蓝线 - 净资产               │ │ 绿色 - 收入                 │\n    │ 绿线 - 总资产               │ │ 红色 - 支出                 │\n    │ 红线 - 总负债               │ │ 蓝色 - 储蓄                 │\n    │                             │ │                             │\n    │ 2023.10 - 2024.03          │ │ 2023.10 - 2024.03          │\n    │                             │ │                             │\n    │ 本月变化：                   │ │ 本月概况：                  │\n    │ • 净资产 +93,689           │ │ • 收入 82,500              │\n    │ • 总资产 +56,800           │ │ • 支出 50,600              │\n    │ • 总负债 -36,889           │ │ • 储蓄 31,900              │\n    └─────────────────────────────┘ └─────────────────────────────┘\n    \n    [生活目标区]\n    ┌─────────────────────┐ ┌─────────────────────┐\n    │   🏠 房产计划        │ │   👶 教育基金        │\n    │   首付累计进度      │ │   积累进度          │\n    │   目标：100万       │ │   目标：50万        │\n    │   当前：68万        │ │   当前：17.5万      │\n    │   [进度条 68%]      │ │   [进度条 35%]      │\n    └─────────────────────┘ └─────────────────────┘\n    \n    [理财诊断区]\n    ┌─────────────────────────────────────────┐\n    │ 📋 本月理财体检                         │\n    │ • 收入稳定增长，较去年同期增长15%       │\n    │ • 支出控制良好，较预算节省8%            │\n    │ • 储蓄率31.2%，达到建议水平             │\n    │ • 投资组合需要再平衡                    │\n    │ • 保险保障存在缺口                      │\n    └─────────────────────────────────────────┘\n    \n    [行动建议区]\n    ┌─────────────────────────────────────────┐\n    │ ✨ 智能建议                             │\n    │ 1. 当前储蓄率良好，建议：               │\n    │    • 将超额储蓄用于投资组合再平衡       │\n    │    • 考虑增加定投金额                   │\n    │                                        │\n    │ 2. 支出优化空间：                       │\n    │    • 本月餐饮支出偏高                   │\n    │    • 考虑开源节流计划                   │\n    │                                        │\n    │ 3. 资产配置建议：                       │\n    │    • 适当降低现金持有                   │\n    │    • 增加权益类资产配置                 │\n    └─────────────────────────────────────────┘\n\n分类\n    \n    \n    CREATE TABLE 资产数据库 (\n        -- 基础信息\n        id VARCHAR(36) PRIMARY KEY COMMENT ''唯一标识符'',\n        创建时间 DATETIME COMMENT ''记录创建时间'',\n        上次编辑时间 DATETIME COMMENT ''最后修改时间'',\n        \n        -- 核心分类体系（包含三级联动关系）\n        类型 ENUM(''资产'', ''负债'') COMMENT ''资产/负债类型'',\n        大类 ENUM(\n            ''流动资产'', ''固定资产'', ''投资理财'', ''应收款'',\n            ''流动负债'', ''固定负债''\n        ) COMMENT ''资产分类大类'',\n        子类型 VARCHAR(50) COMMENT ''资产具体子类型'',\n        \n        -- 分类关联约束（实现三级联动）\n        FOREIGN KEY (类型, 大类) REFERENCES 分类体系(类型, 大类),\n        FOREIGN KEY (大类, 子类型) REFERENCES 子分类体系(大类, 子类型),\n    \n        -- 财务数据\n        期初金额 DECIMAL(18,4) COMMENT ''Opening Balance'',\n        期末金额 DECIMAL(18,4) COMMENT ''Closing Balance'',\n        投入本金 DECIMAL(18,4) COMMENT ''Initial Investment'',\n        \n        -- 计算字段\n        净值变动 VARCHAR(255) COMMENT ''期末金额 - 期初金额'',\n        收益率 VARCHAR(255) COMMENT ''(期末金额-投入本金)/投入本金'',\n        月度变化率 VARCHAR(255) COMMENT ''(期末金额-期初金额)/期初金额'',\n        \n        -- 其他属性\n        货币类型 ENUM(''CNY'', ''USD'', ''HKD'', ''USDT'') COMMENT ''货币种类'',\n        账户 TEXT COMMENT ''关联账户信息'',\n        归属人 ENUM(''dada'', ''panpan'') COMMENT ''资产所有权人'',\n        记账月份 VARCHAR(7) COMMENT ''YYYY-MM格式月份'',\n        备注 TEXT COMMENT ''自由格式备注'',\n        \n        -- 系统字段\n        is_inline BOOLEAN COMMENT ''是否内联数据库'',\n        url VARCHAR(255) COMMENT ''Notion链接''\n    ) COMMENT ''资产负债管理系统'';\n    \n    -- 分类体系关联表\n    CREATE TABLE 分类体系 (\n        类型 ENUM(''资产'', ''负债'') PRIMARY KEY,\n        大类 ENUM(\n            ''流动资产'', ''固定资产'', ''投资理财'', ''应收款'',\n            ''流动负债'', ''固定负债''\n        ),\n        允许组合 ENUM(''Y'',''N'') DEFAULT ''Y''\n    );\n    \n    -- 子分类体系表\n    CREATE TABLE 子分类体系 (\n        大类 ENUM(\n            ''流动资产'', ''固定资产'', ''投资理财'', ''应收款'',\n            ''流动负债'', ''固定负债''\n        ),\n        子类型 VARCHAR(50),\n        类型约束 ENUM(''资产'', ''负债''),\n        PRIMARY KEY (大类, 子类型),\n        FOREIGN KEY (类型约束) REFERENCES 分类体系(类型)\n    );\n    \n    -- 插入分类体系数据示例\n    INSERT INTO 分类体系 (类型, 大类) VALUES\n    (''资产'', ''流动资产''),\n    (''资产'', ''固定资产''),\n    (''资产'', ''投资理财''),\n    (''资产'', ''应收款''),\n    (''负债'', ''流动负债''),\n    (''负债'', ''固定负债'');\n    \n    -- 插入子分类数据示例\n    INSERT INTO 子分类体系 (大类, 子类型, 类型约束) VALUES\n    (''流动资产'', ''现金'', ''资产''),\n    (''流动资产'', ''银行活期'', ''资产''),\n    (''流动资产'', ''货币基金'', ''资产''),\n    (''流动资产'', ''其他流动资产'', ''资产''),\n    (''固定资产'', ''自用房产'', ''资产''),\n    (''固定资产'', ''自用汽车'', ''资产''),\n    (''固定资产'', ''投资房产'', ''资产''),\n    (''固定资产'', ''金银珠宝'', ''资产''),\n    (''固定资产'', ''收藏品'', ''资产''),\n    (''固定资产'', ''数码电子'', ''资产''),\n    (''固定资产'', ''其他固定资产'', ''资产''),\n    (''投资理财'', ''基金'', ''资产''),\n    (''投资理财'', ''股票'', ''资产''),\n    (''投资理财'', ''银行理财'', ''资产''),\n    (''投资理财'', ''投资保险'', ''资产''),\n    (''投资理财'', ''加密货币'', ''资产''),\n    (''投资理财'', ''其他投资理财'', ''资产''),\n    (''应收款'', ''借给他人的钱'', ''资产''),\n    (''应收款'', ''其他应收款'', ''资产''),\n    (''流动负债'', ''信用卡'', ''负债''),\n    (''流动负债'', ''消费贷'', ''负债''),\n    (''流动负债'', ''其他短期消费性负债'', ''负债''),\n    (''固定负债'', ''房贷'', ''负债''),\n    (''固定负债'', ''车贷'', ''负债''),\n    (''固定负债'', ''其他固定负债'', ''负债'');\n    \n\n  \n\n# 设计方案\n\n## 设计前提\n\n  ***notion的Integration Token：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*****NOTION_PAGE_ID=18dca1806c5b8058a1eac5390ebeb973*****NOTION_DATABASE_ID=191ca1806c5b812fb4f3e3f3e5135cfe*** * *\n\n##  我的需求内容\n\n  1. 制作一个资产负债工具，用于更新家庭资产/负债情况。\n  2. 生成相关统计报表，包括家庭总资产。\n\n* * *\n\n## 设计方案步骤\n\n  1.**设计数据库**：完成数据库表的设计。\n  2.**前端开发**：进行Notion页面的前端设计。\n  3.**后端开发**：实现后端逻辑和自动化任务。\n  4.**每次开发前**：需要征求我的同意。\n\n* * *\n\n## 开发注意事项\n\n### 1\. 数据库开发\n\n#### 开发范围\n\n  ***设计数据库结构**：\n\n    * 在Notion中创建数据库，定义字段（如文本、数字、日期、选择、关系等）。\n    * 设计分类、标签、状态等字段，确保数据结构清晰。\n\n  ***数据关联**：\n\n    * 使用Relation字段关联不同的数据库（如“交易记录”关联“分类”）。\n    * 使用Rollup字段汇总关联数据（如计算某个分类的总支出）。\n\n  ***数据导入/导出**：\n\n    * 通过Notion API实现数据的批量导入或导出。\n    * 将外部数据（如Excel、CSV）导入Notion数据库。\n\n#### 注意事项\n\n  1.**提前规划数据结构**：\n\n    * 明确每个字段的用途和数据类型，避免后期修改字段类型导致数据丢失。\n\n  2.**避免过度嵌套**：\n\n    * 保持数据结构扁平化，避免性能问题。\n\n  3.**备份数据**：\n\n    * 定期备份Notion数据库，避免数据丢失。\n\n* * *\n\n### 2\. 前端开发\n\n#### 开发范围\n\n  ***Notion页面设计**：\n\n    * 使用Notion的块（Blocks）功能设计页面布局。\n    * 创建模板页面，提高创建效率。\n\n  ***自定义UI**：\n\n    * 使用Notion API或第三方工具嵌入自定义UI组件（如图表、表单）。\n    * 使用Web Clipper功能嵌入外部内容。\n\n  ***交互功能**：\n\n    * 实现简单的交互逻辑（如按钮、公式字段）。\n\n#### 注意事项\n\n  1.**保持页面简洁**：\n\n    * 避免过多嵌入内容，确保加载速度。\n\n  2.**测试跨设备兼容性**：\n\n    * 确保页面在不同设备上正常显示。\n\n  3.**优化嵌入内容**：\n\n    * 确保嵌入内容加载速度快，不影响页面性能。\n\n* * *\n\n### 3\. 后端代码实现\n\n#### 开发范围\n\n  ***Notion API集成**：\n\n    * 实现数据的增删改查（CRUD）操作。\n    * 实现自动化任务（如定时同步数据、发送提醒）。\n\n  ***业务逻辑开发**：\n\n    * 实现预算计算、支出分类、报告生成等逻辑。\n    * 使用Python、JavaScript等语言编写代码。\n\n#### 注意事项\n\n  1.**合理使用API限额**：\n\n    * 避免频繁调用API导致请求失败。\n\n  2.**错误处理**：\n\n    * 增加错误处理逻辑，避免程序崩溃。\n\n  3.**数据安全**：\n\n    * 保护敏感信息，如集成Token和数据库ID。\n\n* * *\n\n### 4\. 开发流程优化\n\n#### 注意事项\n\n  1.**版本控制**：\n\n    * 使用Git管理代码，定期提交和备份。\n\n  2.**模块化开发**：\n\n    * 将代码拆分为多个模块，提高可维护性。\n\n  3.**测试驱动开发**：\n\n    * 编写单元测试和集成测试，确保代码质量。\n\n  4.**文档记录**：\n\n    * 记录数据库设计、API接口、代码逻辑等。\n\n* * *\n\n### 5\. 避免返工的关键点\n\n  1.**明确需求**：\n\n    * 开发前明确需求，避免需求变更导致返工。\n\n  2.**原型设计**：\n\n    * 设计原型，确保设计方案可行。\n\n  3.**逐步迭代**：\n\n    * 逐步实现功能，避免一次性开发过多功能。\n\n  4.**代码复用**：\n\n    * 封装常用功能，减少重复代码。\n\n  5.**定期沟通**：\n\n    * 定期沟通进度和问题，避免沟通不畅导致返工。\n\n* * *\n\n### 6\. 工具推荐\n\n  1.**Notion API文档**：\n\n    * [Notion API官方文档](https://developers.notion.com/)（如果无法访问，请检查链接或稍后重试）\n\n  2.**Notion客户端库**：\n\n    * [notion-client（Python）](https://github.com/ramnes/notion-sdk-py) 或 [notion-sdk-js（JavaScript）](https://github.com/makenotion/notion-sdk-js)（如果无法访问，请检查链接或稍后重试）\n\n  3.**调试工具**：\n\n    * 使用Postman测试Notion API请求。\n    * 使用Cursor调试代码。\n\n  4.**自动化工具**：\n\n    * 使用Zapier或Make实现无代码自动化任务。\n\n  \n\n## notion 数据库整理\n\n### Asset_record\n\n数据库：195ed4b7aaea809cb0a1ea76f34fed89\n\n字段| 类型| 选项  \n---\n月度绝对收益| formula| -  \n月度绝对收益率| formula| -  \n期末金额| number| -  \n投入本金| number| -  \n货币类型| select| CNY, USD, HKD, USDT  \n类型| select| 资产, 负债  \n备注| rich_text| -  \n上次编辑时间| last_edited_time| -  \n归属人| select| dada, panpan  \n账户| rich_text| -  \n期初金额| number| -  \n是否计算投资理财收益| select| 是, 否  \n创建时间| created_time| -  \n大类| select| 流动资产, 固定资产, 投资理财, 应收款, 流动负债, 固定负债  \n子类型| select| 现金, 银行活期, 货币基金, 自用房产, 自用汽车, 投资房产, 金银珠宝, 其他固定资产, 基金, 股票, 银行理财, 投资保险, 加密货币, 借给他人的钱, 信用卡, 教育贷款, 借出款项, 报销待收, 投资待收, 消费贷, 房贷, 车贷  \n记账年月| title| -  \n  \n### Liability_record\n\n数据库：196ed4b7aaea80e1a3b5c447aa315e60\n\n字段| 类型| 选项  \n---\n净值变动| formula| -  \n期末金额| number| -  \n投入本金| number| -  \n货币类型| select| CNY, USD, HKD, USDT  \n月度变化率| formula| -  \n类型| select| 资产, 负债  \n备注| rich_text| -  \n收益率| formula| -  \n上次编辑时间| last_edited_time| -  \n归属人| select| dada, panpan  \n账户| rich_text| -  \n期初金额| number| -  \n创建时间| created_time| -  \n大类| select| 流动资产, 固定资产, 投资理财, 应收款, 流动负债, 固定负债  \n子类型| select| 现金, 银行活期, 货币基金, 自用房产, 自用汽车, 投资房产, 金银珠宝, 其他固定资产, 基金, 股票, 银行理财, 投资保险, 加密货币, 借给他人的钱, 信用卡, 教育贷款, 借出款项, 报销待收, 投资待收, 消费贷, 房贷, 车贷  \n记账年月| title| -  \n  \n## 录入资产负债数据\n\n录入信息如下\n    \n    \n    字段	类型	选项\n    类型	select	资产, 负债\n    大类	select	流动资产, 固定资产, 投资理财, 应收款, 流动负债, 固定负债\n    子类型	select	现金, 银行活期, 货币基金, 自用房产, 自用汽车, 投资房产, 金银珠宝, 其他固定资产, 基金, 股票, 银行理财, 投资保险, 加密货币, 借给他人的钱, 信用卡, 教育贷款, 借出款项, 报销待收, 投资待收, 消费贷, 房贷, 车贷\n    账户	rich_text	-\n    投入本金	number	-\n    期初金额	number	-\n    期末金额	number	-\n    货币类型	select	CNY, USD, HKD, USDT >>默认是CNY\n    备注	rich_text	-\n    归属人	select	dada, panpan\n    是否计算投资理财收益	select	是, 否>>当大类是投资理财才出现该选项\n    创建时间	created_time>>系统时间\n    记账年月	title >>默认是记账年月的上个月\n\n录入完成后\n\n1.当录入的类型是资产时，更新Asset_record 数据；当录入的类型是负债时，更新Asset_record 数据；\n\n2.当录入资产负债数据时\n\n大类=投资理财\n\n是否计算投资理财收益=是\n\n需要同时更新Asset_record和Investment_record表\n\n  \n\n    \n    \n    -- 核心分类体系（包含三级联动关系）\n        类型 ENUM(''资产'', ''负债'') COMMENT ''资产/负债类型'',\n        大类 ENUM(\n            ''流动资产'', ''固定资产'', ''投资理财'', ''应收款'',\n            ''流动负债'', ''固定负债''\n        ) COMMENT ''资产分类大类'',\n        子类型 VARCHAR(50) COMMENT ''资产具体子类型'',\n        \n        -- 分类关联约束（实现三级联动）\n        FOREIGN KEY (类型, 大类) REFERENCES 分类体系(类型, 大类),\n        FOREIGN KEY (大类, 子类型) REFERENCES 子分类体系(大类, 子类型),\n    \n    -- 插入分类体系数据示例\n    INSERT INTO 分类体系 (类型, 大类) VALUES\n    (''资产'', ''流动资产''),\n    (''资产'', ''固定资产''),\n    (''资产'', ''投资理财''),\n    (''资产'', ''应收款''),\n    (''负债'', ''流动负债''),\n    (''负债'', ''固定负债'');\n    \n    -- 插入子分类数据示例\n    INSERT INTO 子分类体系 (大类, 子类型, 类型约束) VALUES\n    \n    (''流动资产'', ''现金'', ''资产''),\n    (''流动资产'', ''银行活期'', ''资产''),\n    (''流动资产'', ''货币基金'', ''资产''),\n    (''流动资产'', ''其他流动资产'', ''资产''),\n    (''固定资产'', ''自用房产'', ''资产''),\n    (''固定资产'', ''自用汽车'', ''资产''),\n    (''固定资产'', ''投资房产'', ''资产''),\n    (''固定资产'', ''金银珠宝'', ''资产''),\n    (''固定资产'', ''收藏品'', ''资产''),\n    (''固定资产'', ''数码电子'', ''资产''),\n    (''固定资产'', ''其他固定资产'', ''资产''),\n    (''投资理财'', ''基金'', ''资产''),\n    (''投资理财'', ''股票'', ''资产''),\n    (''投资理财'', ''银行理财'', ''资产''),\n    (''投资理财'', ''投资保险'', ''资产''),\n    (''投资理财'', ''加密货币'', ''资产''),\n    (''投资理财'', ''其他投资理财'', ''资产''),\n    (''应收款'', ''借给他人的钱'', ''资产''),\n    (''应收款'', ''其他应收款'', ''资产''),\n    (''流动负债'', ''信用卡'', ''负债''),\n    (''流动负债'', ''消费贷'', ''负债''),\n    (''流动负债'', ''其他短期消费性负债'', ''负债''),\n    (''固定负债'', ''房贷'', ''负债''),\n    (''固定负债'', ''车贷'', ''负债''),\n    (''固定负债'', ''其他固定负债'', ''负债'');\n\n### Investment_record \n\n数据库：197ed4b7aaea8066a6c8f629704cc268\n\n字段| 类型| 选项  \n---\n月度绝对收率| formula| -  \n账户| select| 基金-中信, 基金-理财通, 基金-雪球稳钱账户, 保单-增额寿（外借）, 股票投资-中信, 保单-增额寿, 保单-万能账户, 基金-招行, 定存（大连银行）, 基金-雪球长钱账户, 基金-雪球海外账户  \n子类型| select| 基金, 投资保险, 股票, 银行理财  \n变动额| formula| -  \n投入本金| number| -  \n大类| select| 投资理财  \n是否计算投资理财收益| select| 是, 否  \n记账年份| select| 2024年, 2025年  \n类型| select| 资产  \n创建时间| date| -  \n备注| rich_text| -  \n期初金额| number| -  \n货币类型| select| CNY  \n上次编辑时间| date| -  \n归属人| select| panpan, dada  \n期末金额| number| -  \n记账年月| title| -  \n      \n    \n    Investment_Analysis 197ed4b7aaea807a82f4ee47f375d603\n    Balance_Analysis 196ed4b7aaea800eaf44ef77e719dda0','\n',char(10)),NULL,'','前端设计🏠 My Financial Home  [欢迎区] ┌─────────────────────────────────────────┐ │ 早安，[用户名]                          │ │ 今日财务健康度：92分 ｜ 较上月：↑3分     │ └──...',1,0,0,0,60,'tech-tools/asset.md',NULL,'','2025-02-05T00:00:00.000Z','2025-05-07T15:19:47.002Z',NULL);
INSERT INTO posts VALUES(70,'R1  vs Claude 3.5 Sonnet','R1  vs Claude 3.5 Sonnet',replace('根据现有信息，**DeepSeek-R1**在代码能力上的综合表现优于**Claude 3.5 Sonnet**，尤其是在复杂编程和数学推理任务中，但两者的技术路径和应用场景存在显著差异。以下从技术能力、训练方法、成本与生态支持等方面对比分析：\n\n* * *\n\n### 1\.**代码能力对比*****DeepSeek-R1**： \n\n    ***高难度任务优势**：在研究生级别数学题、复杂代码生成等任务中，R1的表现显著优于Claude 3.5 Sonnet，例如在生成阶为147的群结构等高阶数学问题中，R1能快速给出正确答案，且速度远超OpenAI的o1模型。 \n    ***开源适配性**：R1系列模型（包括671B大模型和蒸馏小模型）已适配华为昇腾910B等国产算力，推理性能媲美高端GPU，且提供免费API和云镜像服务，便于开发者快速集成到Cursor等工具。 \n    ***编程测试成绩**：虽然未直接提及R1在编程测试中的表现，但DeepSeek的早期版本（如V3）已在Aider多语言编程测试中超越Claude 3.5 Sonnet，完成率从17.8%提升至48.4%，推测R1继承并强化了这一优势。\n\n  ***Claude 3.5 Sonnet**： \n\n    ***稳定但局限**：在简单逻辑推理任务中表现稳定，但在高难度问题（如物理原理判断、复杂数学推导）中易出错。 \n    ***多模态与联网支持**：部分版本支持联网查询辅助推理（如Kimi模型），但未明确Claude 3.5 Sonnet是否具备此功能。\n\n* * *\n\n### 2\.**技术路径差异*****DeepSeek-R1**： \n\n    ***纯强化学习（RL）路线**：通过无监督的强化学习技术，仅依赖极少标注数据，显著提升推理能力。例如，R1-Zero模型在数学和代码数据集上通过纯RL训练，摆脱了对人类反馈（RLHF）的依赖，可能避免因人类偏好限制模型潜力的问题。 \n    ***成本优势**：训练成本极低（仅550万美元），且开源策略降低了开发者的接入门槛，适合需要高性价比的企业场景。\n\n  ***Claude 3.5 Sonnet**： \n\n    ***依赖人类反馈（RLHF）**：与ChatGPT类似，需通过人工标注数据优化输出，可能限制模型在超越人类认知领域的探索。 \n    ***闭源生态**：模型细节和训练数据未公开，开发者依赖Anthropic提供的接口，灵活性和定制性较低。\n\n* * *\n\n### 3\.**适用场景建议*****选择DeepSeek-R1的场景**： \n\n    * 需要处理高复杂度数学、代码生成或物理推理任务（如学术研究、算法优化）。 \n    * 追求低成本、高可控性的开源解决方案，尤其是国产化软硬件适配需求。\n\n  ***选择Claude 3.5 Sonnet的场景**： \n\n    * 简单逻辑任务或需快速部署的通用型代码生成（如基础脚本编写）。 \n    * 依赖Anthropic生态支持的场景（如与现有闭源工具链集成）。\n\n* * *\n\n### 4\.**未来趋势*****推理能力主导**：随着预训练数据瓶颈显现，DeepSeek-R1的低成本推理优化（如昇腾910B适配）可能推动AI应用向推理侧倾斜。 \n  ***开源竞争**：中国在开源AI领域的快速迭代（如DeepSeek系列）正在缩小与闭源模型的差距，甚至在某些领域实现反超。\n\n* * ***结论**：若以代码能力为核心需求，**DeepSeek-R1**在高难度任务中的表现更优，且开源生态和低成本优势明显；而Claude 3.5 Sonnet更适合简单任务和闭源生态的稳定需求。','\n',char(10)),NULL,NULL,'根据现有信息，DeepSeek-R1 在代码能力上的综合表现优于 Claude 3.5 Sonnet，尤其是在复杂编程和数学推理任务中，但两者的技术路径和应用场景存在显著差异。以下从技术能力、训练方法、成本与生态支持等方面对比分析：1. 代码能力对比DeepSeek-R1：  高难度任务优势：...',1,0,0,0,1,NULL,NULL,'','2025-02-14T00:00:00.000Z','2025-02-14T00:00:00.000Z',NULL);
INSERT INTO posts VALUES(71,'monitor','monitor：打造企业级钉钉监控利器，让消息管理从未如此高效！',replace('钉钉群消息智能分析助手 - 让群消息管理更轻松，问题处理更高效。\n\n## 为什么需要它？\n\n在日常工作中，我们经常遇到这些问题：\n\n  * 📈**信息过载**：群里每天大量消息，重要信息容易被淹没\n  * 🔍**问题追踪难**：用户反馈散落在各个群里，难以统一管理和追踪\n  * 📊**数据孤岛**：缺乏对问题类型、优先级的系统化分析\n  * ⏰**响应延迟**：重要问题可能被延误，影响用户体验\n  * 📝**总结耗时**：人工整理群消息费时费力，效率低下\n\n## 它是如何解决这些问题的？\n\nDingTalk Monitor 通过智能化手段解决这些痛点：\n\n### 1\. 智能消息分类\n\n  * 自动识别消息类型（功能需求/技术问题/运营问题/用户反馈）\n  * 智能提取关键信息（优先级/影响范围/提出人）\n  * 结构化整理，便于后续分析和处理\n\n### 2\. 实时问题追踪\n\n  * 自动监控多个钉钉群的消息\n  * 根据预设规则识别重要问题\n  * 及时推送通知，确保问题不被遗漏\n\n### 3\. 数据分析和可视化\n\n  * 问题类型分布统计\n  * 优先级分析\n  * 影响范围评估\n  * 趋势分析和预警\n\n### 4\. 自动化工作流\n\n  * 定时汇总分析（默认每4小时）\n  * 智能分类推送\n  * 支持自定义处理规则\n  * 灵活的触发机制\n\n## 效果展示\n\n![](docs/images/demo.png)![](/assets/images/kai-yuan-tui-jian-dingtalk-monitor-da-zao-qi-ye-ji-ding-ding-jian-kong-li-qi-rang-xiao-xi-guan-li-cong-wei-ru-ci-gao-xiao/image_19.png)\n\n## 快速开始\n\n### 1\. 安装\n    \n    \n    git clone https://github.com/dabossgit/dingtalk-monitor.git\n    cd dingtalk-monitor\n    npm install\n\n### 2\. 配置\n    \n    \n    cp .env.example .env\n    # 编辑 .env 文件，填入你的钉钉机器人配置\n\n### 3\. 运行\n    \n    \n    # 启动定时任务\n    npm start\n    \n    # 手动触发分析\n    npm run analyze\n    \n    # 运行测试消息\n    npm run test-messages\n\n## 配置说明\n\n### 环境变量\n\n  * `DINGTALK_BOT_TOKEN`: 钉钉机器人的 access_token\n  * `DINGTALK_BOT_SECRET`: 钉钉机器人的加签密钥\n  * `MESSAGE_FETCH_INTERVAL`: 消息获取间隔（毫秒）\n  * `MAX_MESSAGES_PER_FETCH`: 每次获取消息数量\n\n## 项目结构\n    \n    \n    src/\n    ├── examiner/     # 消息监听模块\n    ├── processor/    # 消息处理模块\n    ├── storage/      # 本地存储模块\n    ├── bot/         # 钉钉机器人模块\n    └── scheduler/   # 定时任务模块\n\n## 开源许可\n\n本项目采用 [MIT 开源许可证](https://opensource.org/licenses/MIT)，这意味着你可以：\n\n  * ✅ 免费使用\n  * ✅ 自由修改\n  * ✅ 自由分发\n  * ✅ 商业使用\n\n只需要保留原始版权和许可证声明即可。','\n',char(10)),NULL,NULL,'钉钉群消息智能分析助手 - 让群消息管理更轻松，问题处理更高效。为什么需要它？在日常工作中，我们经常遇到这些问题：📈 信息过载：群里每天大量消息，重要信息容易被淹没🔍 问题追踪难：用户反馈散落在各个群里，难以统一管理和追踪📊 数据孤岛：缺乏对问题类型、优先级的系统化分析⏰ 响应延迟：重要...',1,0,0,0,1,NULL,NULL,'','2025-02-20T00:00:00.000Z','2025-02-20T00:00:00.000Z',NULL);
INSERT INTO posts VALUES(92,'2025-qing-ming-quan-zhou-san-ri-you-xiang-xi-xing-cheng-5676ewxf','2025清明泉州三日游详细行程',replace('[TOC]\n\n### **📅 泉州出行计划概览**\n\n### **🚄 交通与住宿概览**\n\n**交通信息**\n| 行程 | 日期 | 车次 | 出发站 | 到达站 | 时间 |\n|------|------|------|--------|--------|------|\n| 去程 | 2025/4/4 | D3211 | 杭州东站 (07:08) | 泉州站 (12:31) | 5h23m |\n| 返程 | 2025/4/6 | 待定 | 泉州站 | 杭州东站 | - |\n\n**住宿信息**\n- **酒店名称**：泉州古驿民宿\n- **地址**：泉州鲤城区西街旧馆驿51号\n- **入住时间**：4月4日-4月6日（2晚）\n- **价格**：920元/2晚\n- **位置优势**：位于西街核心区，步行可达开元寺、钟楼等景点\n\n\n\n```mermaid\ngantt\n    title 泉州三日游行程时间轴\n    dateFormat  MM-DD\n    axisFormat %m-%d\n    section D1\n    石狮黄金海岸    :04-04, 2h\n    洛伽寺     :2h\n    橘若灯塔咖啡    :1h\n    祥芝码头    :1h\n    section D2\n    泉州古城游    :04-05, 3h\n    蟳埔村     :2h\n    梧林村落    :2h\n    section D3\n    清净寺&关岳庙  :04-06, 1.5h\n    返程       :1h\n```\n\n```mermaid\nmindmap\n    root((泉州游玩))\n        D1海天线\n            石狮黄金海岸\n            洛伽寺\n            橘若灯塔\n            祥芝码头\n        D2古城线\n            开元寺\n            西街\n            金鱼巷\n            蟳埔村\n            梧林村\n        D3文化线\n            清净寺\n            关岳庙\n```\n\n### **📅 出行计划**\n\n#### **D1（4月4日，周五）**  \n**主题：海天一色与南洋风情**  \n- **07:08** 杭州东站出发 (D3211次列车)\n- **12:31** 抵达泉州站，打车前往石狮黄金海岸（约60分钟，车程45公里，车费约150-180元）。  \n- **13:30-15:00 石狮黄金海岸**  \n  漫步沙滩，远眺“海上佛国”洛伽寺，拍摄礁石与海的壮丽大片。  \n- **15:30-16:30 洛伽寺**  \n  参观建在海上的寺庙，感受潮涨潮落的独特意境。  \n- **17:00-18:00 橘若灯塔咖啡**  \n  海边悬崖咖啡馆小憩，打卡粉色城堡和灯塔落日。  \n- **18:30 祥芝码头（可选）**  \n  若时间充裕，可前往渔港看渔船归港（打车15分钟），晚餐品尝海鲜排档。  \n- **夜宿** 泉州古驿民宿（鲤城区西街旧馆驿51号）\n\n---\n\n#### **D2（4月5日，周六）**  \n**主题：古城漫步与南洋旧梦**  \n- **9:00-12:00 泉州古城深度游**  \n  - **开元寺**：地标双塔拍照，红墙飞檐尽显闽南美学（1小时）。  \n  - **西街**：穿行骑楼老街，吃润饼、土笋冻、面线糊（1小时）。  \n  - **金鱼巷/象峰巷**：避开人潮，探秘小众红砖古厝（1小时）。  \n- **13:00-15:00 蟳埔村簪花体验**  \n  戴满头簪花、穿娘惹服饰，在蚵壳厝前拍南洋风写真（打车15分钟）。  \n- **15:30-17:30 梧林传统村落**  \n  南洋华侨建筑群，人少景美，适合慢逛拍照（打车25分钟，可选咖啡厅休憩）。  \n- **傍晚** 返回市区，夜游中山路或领show天地酒吧街。  \n\n---\n\n#### **D3（4月6日，周日）**  \n**主题：文化拾遗与返程**  \n- **9:00-10:30** 清净寺+关岳庙  \n  感受伊斯兰教与闽南信仰的融合（两庙相邻，步行5分钟）。  \n- **11:00前** 退房（泉州古驿民宿）并打车前往泉州站（车程20分钟，预留时间避免拥堵）。  \n- **12:00** 高铁返程杭州。  \n\n---\n\n### **🗺️ 出行地图标注**  \n**D1石狮线**  \n- **泉州站→黄金海岸**：45公里，打车60分钟  \n- **黄金海岸→洛伽寺**：步行10分钟（同一景区内）  \n- **洛伽寺→橘若咖啡**：步行15分钟  \n- **橘若→祥芝码头**：8公里，打车15分钟  \n\n**D2古城线**  \n- **西街→开元寺**：步行5分钟  \n- **西街→蟳埔村**：8公里，打车15分钟  \n- **蟳埔村→梧林村落**：18公里，打车25分钟  \n\n**D3市区线**  \n- **酒店→清净寺**：建议共享电动车10分钟  \n- **清净寺→泉州站**：10公里，打车20分钟  \n\n---\n\n### **💡 注意事项**  \n1. **交通**：石狮景点分散，建议全程打车；古城内可租电动车（约30元/天）。  \n2. **穿搭**：海边风大，建议戴帽子防风；簪花拍照穿浅色旗袍更出片。  \n3. **预约**：蟳埔村簪花店（如女神佑）建议早到，避免排队。  \n4. **美食**：西街推荐“春哥铁板烧”“吴氏麻糍”；石狮海鲜可去“古浮湾大排档”。','\n',char(10)),NULL,'',NULL,1,0,0,0,12,'family-life/2025清明泉州三日游详细行程.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.974Z',NULL);
INSERT INTO posts VALUES(93,'hang-zhou-2024-nian-yuan-dan-zou-yun-ji-hua','杭州2024年元旦走运计划',replace('# 杭州2024年元旦走运计划\n\n## 路线规划\n\n- 起点：武林门码头（距离家2公里）\n- 路线来源：[官方攻略](https://mp.weixin.qq.com/s/OZM5p1OBrnsQK-jAWOb1IQ)\n- 全程距离：约8公里\n\n![](https://cdn.nlark.com/yuque/0/2024/png/40701240/1730180797878-8b1af039-c966-4897-b91c-2f0d12492e94.png)\n\n![](https://cdn.nlark.com/yuque/0/2024/png/40701240/1730180797917-44a2b5e4-281c-4527-b1e4-0eb25b606873.png)\n\n## 交通信息\n\n### 游船票务\n- 时间：2024年1月1日 09:00发班\n- 地点：武林门码头新客运中心\n- 取票地点：西湖文化广场桥东侧的新客运中心（导航：环北公园）\n- 取票方式：扫码输入购票手机号\n- 咨询电话：15397025468\n- 票价：30元（线上已售罄，需线下购买）\n- 注意：请提前20分钟到达\n\n## 出行安排\n- 前一晚：参加得到活动，预计1-2点到家\n- 出发时间：暂定早上9点到武林门码头\n- 行程调整：视体力情况决定具体行走距离\n\n## 天气状况\n- 温度：1-9度\n- 天气：晴天\n- 空气质量：无污染','\n',char(10)),NULL,'',NULL,1,0,0,0,4,'family-life/杭州2024年元旦走运计划.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.976Z',NULL);
INSERT INTO posts VALUES(94,'hang-zhou-zhou-bian-zhou-mo-chu-xing-ji-hua','杭州周边周末出行计划',replace('# 杭州周边周末出行计划\n\n## 基本信息\n- 出发地：杭州市余杭区\n- 计划周期：未来90天\n- 出行方式：公共交通\n- 已去过的地点：湖州、南浔古镇、西塘古镇、乌镇、绍兴、义乌、径山寺\n\n## 规划原则\n1. 天气优先：雨天不出杭州市\n2. 时间安排：仅周末出行，每周末最多1天，每月不超过2天\n3. 距离考虑：优先选择杭州周边城市\n4. 交通方式：以公共交通为主\n5. 季节特色：优先考虑当季特色景点\n6. 排除范围：不考虑杭州市内景点和古镇\n\n## 具体行程安排\n\n### 第一个周末（3月23日，周六）\n- **游玩地点**：宁波东钱湖\n- **出行交通方式**：从余杭区乘坐地铁到杭州东站，再乘坐高铁到宁波站，转乘公交或打车前往东钱湖。\n- **游玩安排**：上午到达东钱湖，游览陶公岛，欣赏湖光山色，感受自然风光；中午在湖边的餐厅品尝宁波特色美食，如宁波汤圆、烤菜等；下午前往福泉山，欣赏茶园风光，体验采茶乐趣。\n- **注意事项**：提前预订车票，注意天气变化，携带雨具和防晒用品。\n- **预计天气**：根据天气预报，3月23日宁波天气晴朗，适合户外游玩。\n\n### 第二个周末（4月6日，周六）\n- **游玩地点**：嘉兴海宁鹃湖\n- **出行交通方式**：从余杭区乘坐地铁到杭州东站，再乘坐高铁到海宁西站，转乘公交或打车前往鹃湖。\n- **游玩安排**：上午到达鹃湖，沿着湖边散步，欣赏湖景和周边的自然风光；中午在附近的餐厅品尝海宁特色美食，如海宁肉粽、海宁鱼圆等；下午可以去附近的皮革城逛逛，购买一些皮革制品作为纪念。\n- **注意事项**：注意皮革城的营业时间和商品质量，避免购买到假冒伪劣产品。\n- **预计天气**：根据天气预报，4月6日海宁天气晴好，适合户外活动。\n\n### 第三个周末（4月20日，周六）\n- **游玩地点**：德清莫干山\n- **出行交通方式**：从余杭区乘坐地铁到杭州东站，再乘坐高铁到德清站，转乘公交或打车前往莫干山。\n- **游玩安排**：上午到达莫干山，游览剑池，欣赏瀑布景观；中午在山上的餐厅品尝当地特色美食，如莫干山竹笋、清蒸白鱼等；下午前往芦花荡公园，欣赏自然风光，感受莫干山的清凉。\n- **注意事项**：莫干山景区较大，建议提前规划好游玩路线，注意景区内的标识和安全提示。\n- **预计天气**：根据天气预报，4月20日德清天气晴朗，适合登山游玩。\n\n### 第四个周末（5月4日，周六）\n- **游玩地点**：绍兴东湖\n- **出行交通方式**：从余杭区乘坐地铁到杭州东站，再乘坐高铁到绍兴北站，转乘公交或打车前往东湖。\n- **游玩安排**：上午到达东湖，乘坐乌篷船游览湖光山色，欣赏东湖的山水风光；中午在湖边的餐厅品尝绍兴特色美食，如绍兴醉鸡、梅干菜饼等；下午可以去附近的鲁迅故居逛逛，感受鲁迅的童年生活。\n- **注意事项**：乘坐乌篷船时要注意安全，听从船夫的安排。\n- **预计天气**：根据天气预报，5月4日绍兴天气晴好，适合户外游玩。\n\n### 第五个周末（5月18日，周六）\n- **游玩地点**：富阳黄公望村\n- **出行交通方式**：从余杭区乘坐地铁到杭州东站，再乘坐高铁到富阳站，转乘公交或打车前往黄公望村。\n- **游玩安排**：上午到达黄公望村，游览黄公望故居，了解黄公望的生平和艺术成就；中午在村里的农家乐品尝富阳特色美食，如富阳春卷、富阳鱼头等；下午前往散木山庄，欣赏自然风光，感受乡村的宁静。\n- **注意事项**：黄公望村周边的交通可能不太便利，建议提前规划好出行路线。\n- **预计天气**：根据天气预报，5月18日富阳天气晴朗，适合户外游玩。\n\n以上计划结合了天气、出行方式、游玩地点的特色以及季节特点等因素，希望对您有所帮助。在出行前，建议您再次确认天气情况和交通信息，确保行程顺利。','\n',char(10)),NULL,'',NULL,1,0,0,0,8,'family-life/杭州周边周末出行计划.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.976Z',NULL);
INSERT INTO posts VALUES(95,'ge-ren','个人',replace('# 1\. 项目背景\n\n## 1.1. 监管/政府视角\n\n  1. 根据《保险科技“十四五”发展规划》（银保监发〔2021〕31号），明确支持保险机构建设手机端服务平台，优化农险线上投保、电子保单、远程查勘等服务。\n  2. 2023年，中国保险行业协会发布《农业保险承保理赔电子化作业规范》，进一步明确了农业保险承保理赔各环节的线上化操作要求，包括政策宣讲、信息采集、投保确认、标的核验、理赔公示等，为保险机构的线上化作业提供了具体指导。\n  3. 2024年发布的《关于金融支持全面推进乡村振兴加快建设农业强国的指导意见》也明确提出，要持续推进农业保险业务线上化、数字化和智能化，改善农户投保理赔体验。这进一步凸显了数字化在农业保险领域的应用价值和发展潜力。\n\n## 1.2. 行业现状\n\n### 1.2.1. 平安——爱农宝\n\n平安产险通过自主研发的业内首个农户端服务平台，“爱农宝”，实现农户线上自助投保、自助缴费、智能验标、线上报案、智能闪赔等功能，为农户提供省时便捷的农险服务。同时，通过在“爱农宝”平台能够推送实时气象预警、病虫害预警、农资价格行情数据，为农户提供多元化农业生产服务，将地方政府惠农政策精准推送至农户，打通惠农政策“最后一公里”。\n\n截至2024年9月，“爱农宝”服务线上农户超70万，通过爱农宝缴纳保费2.9亿、自助报案13.3万笔;提供灾前有效预警7622.3万条，远程免费问答近1万人，推动农户从“靠天吃饭”向“知天而作”转变。\n\n![](/assets/images/ge-ren/image_3.png)\n\n来源：[中国平安财产保险股份有限公司 科技赋能护航乡村振兴](http://journal.crnews.net/ncpsczk/2024n/d22q/jgdx/969286_20250109103343.html)\n\n### 1.2.2. 地方政府尝试——浙农惠\n\n  \n\n![](/assets/images/ge-ren/image_2.jpeg)\n\n  \n\n## 1.3. 我司现状及痛点\n\n### 1.3.1. 用户调研\n\n时间| 调研形式| 调研分公司| 调研对象| 调研参与人| 调研文档  \n---\n02月19日| 线下| 浙江分公司| 承保负责人| 吴美玲| [浙江从共业务模式调研和痛点分析](https://cic_irc.yuque.com/mp3lqs/bw53ow/mmvdfy3z31sdi4zd)  \n02月20日| 线上| 新疆分公司| 承保处负责人| 吴美玲| [新疆分公司线上调研](https://cic_irc.yuque.com/mp3lqs/bw53ow/ebcq2hlcv7uf60yt "新疆分公司线上调研")  \n02月21日| 线上| 内蒙古分公司| 二次沟通会议| 吴美玲| [内蒙古分公司线上调研](https://cic_irc.yuque.com/mp3lqs/bw53ow/wmrvxogcaei499xm "内蒙古分公司线上调研")  \n02月21日| 线上| 广东分公司| 承保流程优化确认| 吴美玲| [广东分公司线上调研](https://cic_irc.yuque.com/mp3lqs/bw53ow/azn5243eu6azhmdz "广东分公司线上调研")  \n03月04日-03月07日| 线下| 湖南分公司| 实地调研记录| 吴美玲| [调研报告](https://cic_irc.yuque.com/mp3lqs/bw53ow/lkoq989aqugcyish#FU2LX "调研报告")  \n  \n### 1.3.2. 分公司签单压力\n\n  1. 根据和湖南业务沟通，湖南省财政厅关于印发《湖南省农业保险财政奖补管理办法》的通知（湘财金〔2023〕60号），自2024年11月起全面实施签单到户政策，进一步强调了推进农业保险承保理赔实现“线上化”，这对于业务员的展业工作带来极大的压力，因此湖南业务希望能够实现农户自主投保。\n\n![](/assets/images/ge-ren/image_4.png)\n\n来源：[《关于改革完善财政引导和绩效奖惩机制全面提升农业保险服务质效的实施意见》解读](https://czt.hunan.gov.cn/czt/xxgk/zcfg/zcjd/202304/t20230424_32482451.html)\n\n  2. 通过和新疆、内蒙古、广东的等分公司线上沟通，表示目前希望能够进一步推动建设农户端平台，提升展业效率。\n\n  \n\n### 1.3.3. 我司用户-需求-场景分析\n\n用户| 场景| 需求| 功能模块| 优先级  \n---\n农户| 农业生产前| 期望了解惠农政策，便于更好的选择农业发展方向| 惠农政策| P1  \n农户| 农业生产前| 想了解农业贷款政策，便于更好开展农业| 增信融资| P2  \n农户| 农业生产中| 购买农业保险，抵抗风险| 买保险| P0  \n农户| 农业生产中| 风险预警、提前做好防灾减损| 风险预警| P1  \n农户| 农业生产中| 小麦/水稻生病了，想了解是什么原因以及如何提高产量| AI 识图识别病虫害| P1  \n农户| 农业生产中| 产量不如意，不知道该问哪个专家| AI 农技专家| P1  \n农户| 农业生产后| 了解农业保险的保单进度| 查保单/保单消息提醒| P0  \n农户| 农业生产后| 农产品价格如何，现在是不是售卖好时机| 价格行情查询| P2  \n业务员| 政府遴选| 政府遴选通过，如何快速获客| 流量获客| P1  \n业务员| 协助投保| 农户预约投保，目前需要签单到户，目前线上化率，忙不过来| 投保线上化| P0  \n业务员| 协助投保| 验标压力太大、精准承保有压力，希望提升验标效率| 验标| P0  \n业务员| 协助投保| 线下单证过多| 投保线上化| P0  \n业务员| 协助投保| 公示需要二次前往| 投保线上化| P0  \n  \n  \n\n保险服务的延伸\n\n  1. 续保\n  2. 在线批改\n\n## 1.4. 基于痛点的解决愿景\n\n（产品 roadmap）\n\n![](/assets/images/ge-ren/image_6.jpeg)\n\n# 2\. 建设规划\n\n## 2.1. 项目可行性分析\n\n### 2.1.1. 农户是否具备移动端操作能力的可行性分析\n\n用户画像分析，农户画像的分析，规模户、年龄、性别，是否具体移动端的分析\n\n[https://cic_irc.yuque.com/mp3lqs/bw53ow/mo4ecmfwocmn9dx5](https://cic_irc.yuque.com/mp3lqs/bw53ow/mo4ecmfwocmn9dx5)\n\n[https://cic_irc.yuque.com/mp3lqs/bw53ow/lxfc5nm7ppxttv33](https://cic_irc.yuque.com/mp3lqs/bw53ow/lxfc5nm7ppxttv33)\n\n### 2.1.2. 平安爱农宝增长对标\n\n#### 2.1.2.1. 用户增长分析\n\n目前 ios 需要收费，以安卓数据为准；小程序无法获取到相关数据。\n\n根据平安官方报道，截至2024年9月，“爱农宝”服务线上农户超70万，通过爱农宝缴纳保费2.9亿、自助报案13.3万笔;提供灾前有效预警7622.3万条，远程免费问答近1万人，推动农户从“靠天吃饭”向“知天而作”转变。\n\n根据2023年7月至2025年3月的下载数据，平安爱农宝在各大应用商店的下载量呈现稳步增长趋势：\n\n![](/assets/images/ge-ren/image_5.png)\n\n##### 2.1.2.1.1. 主要应用商店下载量对比（2025年3月数据）\n\n  * 总：250 万以内\n  * 华为应用市场：80万下载\n  * 小米应用商店：71.4万下载\n  * OPPO应用商店：70.4万下载\n  * VIVO应用商店：22.5万下载\n\n##### 2.1.2.1.2. 关键增长节点分析\n\n  1.**初始增长期（2023年7月-2023年12月）*** 华为应用市场：从0增长至15万，增速稳定\n    * 小米应用商店：从11.7万增长至20.9万，增长率约78%\n    * OPPO应用商店：从17.8万增长至26.7万，增长率约50%\n\n  2.**快速增长期（2024年1月-2024年8月）*** 华为应用市场：从18万增长至49万，增长率约172%\n    * 小米应用商店：从22.6万增长至46.6万，增长率约106%\n    * VIVO应用商店：从6.5万增长至15.7万，增长率约142%\n\n  3.**稳定增长期（2024年9月-2025年3月）*** 华为应用市场：从57万增长至80万，增长率约40%\n    * 小米应用商店：从46.6万增长至71.4万，增长率约53%\n    * OPPO应用商店：从46.1万增长至70.4万，增长率约53%\n\n##### 2.1.2.1.3. 用户增长与产品迭代关系\n\n  1.**版本更新与下载量关联*** 2.0.0版本发布（2024年3月）后，下载量增速明显提升，特别是华为渠道\n    * 2.11.0版本（2024年9月）新增自助投保功能后，各渠道下载量再次出现增长高峰\n\n  2.**季节性特征*** 每年1-3月（春耕季节）和9-11月（秋收季节）下载量增速较高\n    * 与农业生产周期高度相关，表明产品用户主要为农业从业者\n\n#### 2.1.2.2. 产品生命周期与策略\n\n##### 2.1.2.2.1. 生命周期分析\n\n![](/assets/images/ge-ren/image_7.png)\n\n##### 2.1.2.2.2. 关键策略\n\n生命周期| 时间范围| 版本| 用户规模| 功能重点  \n---\n导入期| 2022.08-2023.02| 1.0 -1.14.0| 10万| 产品定位为"以保险+服务为核心的农业生产生活服务平台"，构建基础功能架构，包括自主投保、一键报案等  \n成长期| 2023.03-2024.03| 1.14.0-2.0.0| 100万| 更新频率较高，持续优化承保、理赔核心功能，首次推出营销活动  \n成熟期| 2024.03-至今| 2.0.0-至今| 250万| 2.0.0版本标志着产品进入成熟阶段，核心功能已相对稳定****平安爱农宝通过科技赋能、精准服务、多元化功能以及对乡村振兴的支持，显著提升了平安产险在农业保险市场的竞争力和遴选份额。\n\n  \n\n##  2.2. 整体解决方案\n\n### 2.2.1. 业务模式\n\n  \n\n![](/assets/images/ge-ren/image_8.jpeg)\n\n  \n\n（产品 roadmap）\n\n  \n\n  \n\n# 3\. 本次立项范围\n\n## 3.1. 本次立项功能范围\n\n业务端| 功能模块| 功能点| 优先级| 协同团队| 备注  \n---\nC 端| 查看保险产品| \n\n  1. 基于 GPS 定位获取农户地点\n  2. 基于 M 端投保规则限制，获取可投保产品列表\n\n| P0| |   \nC 端| 买保险\n\n  1. 农户在线自助投保，类似于互联网投保流程\n\n| \n\n  1. 产品详情页\n  2. 录单：\n\n    1. 投保方式：个人投保/集体投保\n    2. 投保信息录入：\n\n      1. 投被保人&分户清单录入\n      2. 标的信息录入：\n      3. 保费信息录入\n\n    3. 分户清单：一户一单是否需要？\n\n  3. 保费试算：\n\n    1. 政策性展示保费结构\n    2. 商业性自动计算\n    3. 涉及到费率调整系数的怎么办？——包括城固定方案，对客端\n\n  4. 条款阅读和告知：\n\n    1. 生成条款电子化\n    2. 条款\n    3. 责任免除\n    4. 特约声明\n\n  5. 签字/人脸识别\n  6. 提核\n  7. 验标任务\n\n    1. 种植险\n    2. 养殖险\n    3. 多标的\n\n  8. 核保\n\n    1. 自动核保\n    2. 人工核保\n\n  9. 缴费：\n\n    1. 趸交\n    2. 分期\n    3. 考虑后续续保：代扣协议\n\n  10. 出单：\n\n    1. 投保日期和保单生效日期差得远，保单生效日期是否需要自动基于规则生成？\n\n  11. 公示：\n\n    1. 个人投保是否需要公示？\n    2. 集体投保需要公示\n\n| P0| |   \nC 端| 买保险\n\n  1. 农户预约投保，作为线索入库进入线索池分发任务\n\n| \n\n  1. 线索预约页面\n  2. 线索预约成功，线索入库\n  3. 任务分发\n  4. 协保员预约回访农户\n\n| | |   \nC 端| 买保险\n\n  1. 业务员和农户协同投保，业务员发送投保链接给农户，类似于代理人投保\n\n| \n\n  1. 业务员发送投保链接\n  2. 进入自助投保流程\n\n| | |   \nC 端| 主动续保任务| | | |   \nB 端| 待续保清单| \n\n  1. 待续保清单生成\n\n| | |   \nM 端| 续保规则管理| \n\n  1. 续保规则\n\n    1. 遴选中标后，连续 3 年可续保\n    2. 续保观察期配置\n    3. 续保产品规则配置 >> 续保产品升级是否算续保？\n    4. 续保保期限制：固定保期 1 年期\n    5. 续保规则配置\n\n      1. 理赔\n\n  2. 续保消息配置\n\n| | |   \nC 端| 查保单| \n\n  1. 查保单（中华保已实现部分）\n  2. 保单消息提醒（中华保已实现部分）\n\n| P0| |   \nC 端| 查理赔| \n\n  1. 一键报案（中华保已规划）\n  2. 理赔进度查询（中华保已规划）\n\n| P0| |   \nM 端| C 端可投保列表管理| \n\n  1. 额度管控\n\n    * 中央政策性补贴有份额限额，超过限额不允许投保\n    * 地方政策性有补贴限额吗？\n    * 商业性的投保额度如何管控？\n\n  2. 是否允许存在直销，没有经办人/代理人？\n  3. 投保区域限制\n\n    * 遴选中标按照县来，需要根据县机信息限制可投保产品\n\n| P0| |   \n  \n  \n\n![](/assets/images/ge-ren/image_9.jpeg)\n\n## 3.2. 本期实施方案\n\n  \n\n  \n\n## 3.3. 风险评估及对应策略\n\n# 4\. 项目验收标准\n\n  \n\n  \n\n  \n\n    \n    \n    农户一站式平台：\n    以农业全周期服务为轴心，融合保险公司资源优势和科技能力，整合产前智能投保/政策匹配、产中AI农技（病虫识别/风险预警）、产后产销对接，多维助力乡村振兴，推动农户从"靠天吃饭"向"知天智耕"转型。		\n    \n    2025年Q1目标：完成项目完成方案调研\n    2025年Q2目标：完成项目立项\n    2025年Q3目标：搭建平台框架，实现在线投保、查保单等保险服务，提升地区遴选竞争力、提升一线展业效率\n    2025年Q4目标：持续迭代在线投保能力，提升展业效率；调研气象预警、AI识图（识别病虫害）等能力，确定后续落地方案。	\n    \n    1. 政策协同增益，提升遴选竞争力\n    深度嵌入乡村振兴战略，通过"政策匹配+保险服务"双轮驱动，构建政府-险企-农户的数字化桥梁，获取政府优先合作与财政补贴倾斜，提升遴选竞争力。\n    2. 提升展业效率\n    实现农户在线保险自助服务，提升承保、理赔流程线上化率，提升一线作业人员展业效率。\n    3. 风险防控升级，\n    依托全周期农业数据沉淀，构建作物生长模型与灾害预测体系，提升防灾减损能力，降低赔付。\n    4. 生态闭环构建\n    通过"生产服务+保险保障+产销对接"生态闭环增强客户粘性，推动农户从"靠天吃饭"向"知天智耕"转型；沉淀高价值涉农数据资产，为创新型指数保险产品研发提供战略支点。','\n',char(10)),NULL,'',NULL,1,0,0,0,34,'finance/个人.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.977Z',NULL);
INSERT INTO posts VALUES(97,'gang-bi-gou-mai-mei-zhai-xue-xi','港币购买美债学习',replace('目标：\n\n  1. 学习人民币-港币-购买美股、美债的流程\n  2. 了解美股、美债的周期波动，学习其底层逻辑、收益率、回撤率\n  3. 学习香港银行关于储蓄、稳健理财产品的介绍和规则，对比各大行的政策和利率，决定开户行\n\n步骤：\n\n  * 学习美股、美债知识\n  * 学习中国人如何购买美股、美债、美元储蓄产品\n  * 实际对比各种方式的ROI，并选择方式\n\n* * *\n\n核心结论：\n\n  1. 美国国债波动率平均在2-4年左右，大幅上涨平均需要4年，2024年美债到了新高度。\n  2. 美债从2002-2024收益率从0%上涨到5%，期间2020-2022有较长时间的下跌，但整体呈上升趋势。\n  3. 债券的高收益更多是过去利率下行所反映的结果，它是完成时，和未来无关。相反，当利率处于低位平台期甚至上升期，债券资产的表现反而会有所落后。而核心股票指数在低利率区间，由于机会成本的变化，投资者不再满足于微薄的债券收益，希望追求更高收益预期的资产，股票的表现可能会相对不错。\n  4. 直接购买美股、美债等海外资产，成本最低。且美国市场相对成熟，购买指数基金长期持有基本能保证收益。\n\n* * *\n\n中国人如何投资美国市场——1）通过购买QDII基金；2）资金已经在海外的银行或经济证券公司开户，可以通过海外的钱购买当地基金，这个方式的成本非常低。\n\n  * 底层资产\n\n    * 从QDII基金的资产组合和美元资产的说明书中可以看到其投资的资产。\n\n  * 收益来源\n\n    * 票息收益：=债券面值*票面利率*持有期限\n\n      * 票面利率是规定好的\n\n    * 骑乘收益：即剩余期限更长的债券利率高于剩余期限更短的债券利率\n    * 收益率曲线变化带来的收益：降息时，持有债券能卖出更高的价格，获得资本利得；反之加息时，债券有可能亏损——降息和加息带来的债券价格变化，利息可以理解为利率，降利率代表之前的债券利率高于当前的利率，所以能卖出更高的价。\n    * 购买债券时，可以通过「到期收益率」知道现在购买至持有到期的年化收益率——到期收益率是代表确定的收益，因为利率是规定好的。\n\n  * 风险\n\n    * 债本身的风险：\n\n      * 短期美国国债基本为无信用风险。中、长期国债会有更大波动，如不能持有到期，在交易时可能获得负的骑乘收益和资本亏损。\n\n    * 其他资产的风险：\n\n      * ODII和美元理财中通常会含有其他的资产，这些资产可能会对收益产生风险。\n\n    * 汇率风险：\n\n      * 购买流程：人民币->美元->人民币的换汇过程。\n\n  * 成本\n\n    * QDII基金：收取申购费、赎回费、管理费、托管费，约0.6%～1%/年。\n    * 美元理财：收取管理费、托管费、销售服务费，约0.3～0.8%/年。\n    * 购汇/结汇约0.4%的汇率差也是一部分成本。\n\n* * *\n\n通过在香港开户，实现直接购买美股、美债等海外资产的步骤：\n\n  * 开通香港银行账户\n  * 开通香港券商的国际账户\n  * 通过香港银行转账到香港券商账户上\n  * 在香港券商上进行海外资产购买\n  * 银行费用对比：![](/assets/images/gang-bi-gou-mai-mei-zhai-xue-xi/image_20.png)','\n',char(10)),NULL,'',NULL,1,0,0,0,8,'finance/港币购买美债学习.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.978Z',NULL);
INSERT INTO posts VALUES(98,'xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji','《“新基建”时代农业保险数智化转型》读书笔记',replace('💡 根据 [遗忘曲线](https://baike.baidu.com/item/%E9%81%97%E5%BF%98%E6%9B%B2%E7%BA%BF/7278665?fr=aladdin)：如果没有记录和回顾，6天后便会忘记75%的内容\n\n读书笔记正是帮助你记录和回顾的工具，不必拘泥于形式，其核心是：记录、翻看、思考**书名**|  《“新基建”时代农业保险数智化转型》  \n---\n  \n##  思维导图\n\n用思维导图，结构化记录本书的核心观点。\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_49.jpeg)\n\n## 读后感\n\n### 观点1\n\n读完该书后，受益的核心观点与说明...\n\n### 观点2\n\n读完该书后，受益的核心观点与说明...\n\n### 观点3\n\n读完该书后，受益的核心观点与说明...\n\n## 书摘\n\n### 1\. 我国主要农业保险政策\n\n发布时间| 名称| 发布部门| 主要内容  \n---\n2022 年 5 月| 《关于开展大豆完全成本保险和种植收入保险试点的通知》| 财政部、农业农村部、银保监会| 对面向大豆的完全成本保险和种植收入保险的试点进行了方案明确  \n2022 年 2 月| [《农业保险承保理赔管理办法》](https://www.gov.cn/zhengce/zhengceku/2022-03/30/content_5682477.htm)| 银保监会| 对业务开展过程中承保理赔环节具体要求进行明确  \n2022 年 1 月| 《中共中央 国务院关于做好 2022 年全面推进乡村振兴重点工作的意见》| 党中央、国务院| 2022 年中央一号文件，提到要积极发展农业保险和再保险  \n2022 年 1 月| 《关于银行业保险业数字化转型的指导意见》| 银保监会| 对银行保险业数字化转型进行具体指导，其中专门指出了数据能力建设的内容  \n2021 年 12 月| 《中央财政农业保险保费补贴管理办法》| 财政部| 中央财政补贴的保险标的和补贴计算办法做了说明，明确了中农再的主要职责  \n2021 年 7 月| 《再保险业务管理规定》| 银保监会| 对再保险业务的具体运作执行进行了详细规定  \n2021 年 7 月| 《关于金融支持巩固拓展脱贫攻坚成果全面推进乡村振兴的意见》| 银保监会、证监会、财政部、农业农村部| 推动金融机构完善既然产品和服务促进乡村振兴，包括提升农业保险服务能力，发挥保险保障作用  \n2021 年 6 月| 《关于扩大三大粮食作物完全成本保险和种植收入保险实施范围的通知》| 银保监会、财政部、农业农村部| 三大粮食作物完全成本保险和种植收入保险于 2022 年实现粮食主产省份粮县全覆盖，并给出了补贴方  \n2020 年 12 月| [《关于加强政策性农业保险承保机构遴选管理工作的通知》](https://www.gov.cn/zhengce/zhengceku/2021-01/14/content_5579822.htm)| 财政部、农业农村部| 对承保机构遴选的程序和要求作出进一步明确  \n2020 年 12 月| 《互联网保险业务监管办法》| 银保监会| 对于线上开展保险业务的资质条件和业务规则  \n2020 年 6 月| [《关于进一步明确农业保险业务经营条件的通知》](https://www.gov.cn/zhengce/zhengceku/2020-06/18/content_5520261.htm)| 银保监会办公厅| 对经营农业保险业务的条件提出具体要求  \n2019 年 9 月| 《关于加快农业保险高质量发展的指导意见》| 财政部、农业农村部、银保监会、林草局| 提出 2030 年发展目标并提出原则性  \n2016 年 12 月| 《国务院办公厅关于完善支持政策促进农民持续增收的若干意见》| 国务院办公厅| 把农业保险作为支持农业发展和农民增收的重要手段，建立健全农业保险保障体系，从覆盖直接物化成本逐步实现覆盖完全成本  \n2016 年 12 月| 《农业保险条例》修订版| 财政部| 对大灾风险准备金的计提、使用和管理给出了具体的办法  \n2022 年 11 月| 《关于开展新增省级地方特色农业保险（2023-2024 年）相关工作的通知》| 江西省财政厅、农业农村部、金融办、银保监局| 对江西省茶叶和家禽养殖类农业保险的试点情况进行规定，给出了实施方案  \n2022 年 11 月| 《江苏省省级财政农业保险保费补贴管理办法》| 省财政厅| 对江苏省本地农业保险保费补贴类别做出了具体规定  \n2022 年 8 月| 《山东省农业保险保费补贴管理实施细则》| 省财政厅、农业农村厅、自然局等| 对山东省农业保险补贴的管理进行详细规定  \n2022 年 7 月| 《广东省农业保险保费财政补贴资金管理办法》| 广东省财政厅、农业农村厅、林草局等| 对广东省农业保险补贴资金的管理提出规范和加强监管的办法  \n2020 年 9 月| 《江西省农业保险高质量发展的实施方案》| 江西省财政厅、农业农村厅、金融办、银保监局等| 对提升江西省农业保险服务能力，加强农业保险基础设施建设等方面提出要求，给出保障措施  \n  \n### 2\. 行业整体情况\n\n我国2021年农业保险保费收入总规模已达965.18亿元（参考链接：[https://ha.mof.gov.cn/zt/ysjg/ysgllt/202201/t20220125_3784779.htm](https://ha.mof.gov.cn/zt/ysjg/ysgllt/202201/t20220125_3784779.htm)），连续两年位列世界第一，已成为名副其实的世界最大农业保险市场。财政部数据显示，截至2022年9月我国农业保险保费规模已达1059亿元，继续保持快速增长\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_50.png)\n\n2021年，中央财政拨付农业保险保费补贴总计333.45亿元（参考链接：[https://jrs.mof.gov.cn/gongzuodongtai/202111/t20211110_3764628.htm](https://jrs.mof.gov.cn/gongzuodongtai/202111/t20211110_3764628.htm)）。2022和2023年中央财政拨付农业保险保费补贴预算分别是274.82亿元和364.26亿元。图2.2为2023年各省级单位中央财政拨付农业保险保费补贴预算分布情况。\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_51.png)\n\n根据《中央财政农业保险保费补贴管理办法》，纳入中央财政保费补贴范围的农业保险种类见表\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_53.png)\n\n### 3\. 行业竞争分析\n\n2021年度我国农险保费规模排名前十机构列表\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_52.png)\n\n在CR8大于等于70%的情况下，该行业集中度被认为处于极高状态，属于极高寡占型行业。此类行业的特点包括：不完全竞争、少数厂商控制绝大部分市场、市场进入壁垒较高、厂商之间存在相互依存关系等\n\n### 4\. 数智化转型\n\n#### a. 数字化规范\n\n专门针对农业保险领域的数据标准与规范也已经存在，具有代表性的是《农业保险数据规范》《保险基础数据模型》《农业保险业务要素专项数据规范》\n\n通过技术手段打造完善的农业保险行业反欺诈基础设施体系，采用物联网和图像识别技术进行猪、牛等的数量清点和身份认证；采用遥感和大数据技术评估农作物种植面积和长势情况；利用区块链技术体系进行身份认证和证据存证；基于图计算技术识别骗保关联方并穿透式监测资金流向；借助隐私计算技术保证投保人数据信息不被泄露等。\n\n#### b. 中国人保的数字化应用\n\n2023年1月，“中国人保财险”发布基础遥感地图数据与技术服务项目招标公告，主要为其农业保险业务开展所需要的遥感卫星地图数据提供线上线下服务，总分机构可以按需调用数据，用于承保验标、作物长势监测、理赔查勘地块绘制的位置参照、统计分析的底图。具体内容如下：(1)承保验标服务：根据分支机构具体验标需求，利用遥感数据及技术服务，支持开展地块勾画及面积统计、作物分类及面积提取等服务。年全国预估承保验标服务面积约1500万亩。(2)作物长势监测服务：根据分支机构具体作物长势监测需求，利用卫星、无人机遥感数据及技术服务，以及现场查勘服务，解译小麦、水稻、棉花、玉米等各地区主要作物，利用多期数据开展作物长势状态监测、产量评估等，提出防灾防损建议。年全国预估作物长势监测服务面积约500万亩。(3)灾害查勘定损服务：根据分支机构具体灾害（包括自然灾害、病虫害等）查勘定损需求，利用卫星、无人机遥感数据及技术服务，以及现场查勘服务，对因灾损失品种、损失面积、损失程度等进行量化评估。年全国灾害查勘定损服务面积约3000万亩。\n\n在养殖保险业务层面，“中国人保财险”启动了农险智能辅助“一拍知长／重”数据服务项目，提供生猪采购过程中一拍知长／重数据服务，预计使用头数700万。\n\n#### c. 政策法规\n\n有关农业保险的业务开展过程、具体业务内容、监管规则等都有国家层面相应的政策法规予以明确，当前主要有：《中华人民共和国保险法》《农业保险条例》《农业保险承保理赔管理办法》《中央财政农业保险保费补贴管理办法》《关于进一步明确农业保险业务经营条件的通知》《再保险业务管理规定》《关于扩大三大粮食作物完全成本保险和种植收入保险实施范围的通知》等。（详细内容可通过中国政府网国务院政策文件库网站搜索查看，参考链接：[https://www.gov.cn/zhengce/zhengcewenjianku/index.htm](https://www.gov.cn/zhengce/zhengcewenjianku/index.htm)）\n\n中国保险行业协会于2022年12月分别发布了种植险、养殖险、森林险等三个险种的[承保理赔服务规范](https://www.iachina.cn/art/2022/12/27/art_24_106578.html)：《中国保险行业协会种植业保险承保理赔服务规范》《中国保险行业协会养殖业保险承保理赔服务规范》《中国保险行业协会森林保险承保理赔服务规范》。\n\n#### d. 政策性农业保险的承保理赔操作流程可以提炼如下：\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_54.png)\n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_55.png)\n\n  \n\n  \n\n![](/assets/images/xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji/image_56.jpeg)\n\n## 相关资料\n\n可通过“⌘+K”插入引用链接，或使用“本地文件”引入源文件。','\n',char(10)),NULL,'',NULL,1,0,0,0,26,'insurance/agriculture-insurance/《“新基建”时代农业保险数智化转型》读书笔记.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.979Z',NULL);
INSERT INTO posts VALUES(99,'gong-ji-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji','《供给侧改革背景下中国多层次农业保险产品结构研究》读书笔记',replace('💡 根据 [遗忘曲线](https://baike.baidu.com/item/%E9%81%97%E5%BF%98%E6%9B%B2%E7%BA%BF/7278665?fr=aladdin)：如果没有记录和回顾，6天后便会忘记75%的内容\n\n读书笔记正是帮助你记录和回顾的工具，不必拘泥于形式，其核心是：记录、翻看、思考**书名**|  《供给侧改革背景下中国多层次农业保险产品结构研究》  \n---\n  \n##  思维导图\n\n用思维导图，结构化记录本书的核心观点。\n\n![](/assets/images/gong-gei-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji/image_59.jpeg)\n\n## 读后感\n\n### 观点1\n\n读完该书后，受益的核心观点与说明...\n\n### 观点2\n\n读完该书后，受益的核心观点与说明...\n\n### 观点3\n\n读完该书后，受益的核心观点与说明...\n\n## 书摘\n\n  1. 农险的风险类型![](/assets/images/gong-gei-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji/image_60.png)\n  2. 仅从保险经营模式上进行划分，世界范围内较具有代表性的有以下四类：美国和加拿大的政府主导参与模式、德国的政府资助的商业保险模式、日本的社会互助模式以及众多发展中国家的政府重点选择性扶植模式![](/assets/images/gong-gei-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji/image_61.png)\n  3. 中国农业保险发展历程\n\n    1. 1982 年，国务院决定恢复办理农业保险，保险业务起初由中国人民保险公司独家办理\n    2. 2004年农业保险试点在我国黑龙江、吉林、上海、新疆等9个省（自治区、直辖市）率先启动，2007年将试点区域扩大至中西部地区，并于2010年覆盖全国\n    3. 2007年中央财政开始在内蒙古、吉林、江苏、湖南、新疆和四川六省（自治区）开展农业保险保费补贴试点，首批享有补贴的农作物包括玉米、水稻、大豆、小麦和棉花五种，采用省级财政和中央财政共同负担的方式进行补贴，承担比例均为25%\n    4. 2008年我国已成为全球第二大农业保险市场，保费规模仅次于美国\n    5. 2012年国务院通过并颁布了[《农业保险条例》](https://www.gov.cn/zhengce/content/2012-11/16/content_1760.htm)（以下简称《条例》），并于2013年3月1日正式施行，农业保险经营终于有了可以参照的专门法规，是我国农业保险发展中的里程碑。\n    6. 2015年，根据保监会、财政部和农业部联合印发的[《关于进一步完善中央财政保费补贴型农业保险产品条款拟定工作的通知》](http://www.cninsurancelaw.org/html/baoxianfaguisudi/jianguandongtai/2015/0404/229.html)，对全国范围内的中央财政保费补贴性农险产品进行了一次升级改造。该项改造涉及全国30余个省（自治区、直辖市）、15类农作物和6类养殖品种，共22家保险公司的738个农业保险产品。\n\n  4. 美国农业保险产品结构及其运行机制示意图![](/assets/images/gong-gei-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji/image_57.png)\n  5. 一个正常发展的经济体随着经济的发展，会经历从“以农补工”向“以工补农”的转变，这种转变的发生的时点是以工业化的阶段为标准进行划分的。\n  6. 相关资料：[关于印发《中央财政农业保险保费补贴管理办法》的通知 财金〔2021〕130号](https://www.gov.cn/zhengce/zhengceku/2022-01/07/content_5666866.htm)\n\n## 我的收获\n\n  1. 农业保险产品创新力度不够\n  2. 农业保险的逆向选择更大，农业保险产品的赔付风险约比普通人身意外和车险产品的风险高20倍，使经营农业保险的公司始终面临高风险、低收益的经营环境。\n  3. 农业保险的特殊性\n\n    1. 一是与农业保险标的物相关的土地、农作物等具有较强的异质性，保险公司根据这种异质性逐一厘定保险费率的成本过高，只能采取均衡保费的策略，投保农户对其生产资料掌握较多的信息，可以选择其中风险较大的生产资料进行投保，而保险公司难以对其进行限制，使投保标的的平均损失率超过均衡保费率，从而增加了保险公司发生损失的可能性\n    2. 二是农业生产的对象是具有生命的动植物，其产量的好坏除了受自然灾害影响外，更重要的一个因素是农户的管理行为，而保险公司很难对这一过程进行有效监督，投保农户有在投保后降低风险管理投入，出现灾害后怠于采取减灾措施的激励，进一步扩大了保险公司的赔偿责任。\n\n  4. 农业保险的三个层级：\n\n    1. ①基本层次：传统农业保险或成本保险产品\n    2. ②中间层次：以收入保险为方向的新型农业保险产品，保险+期货\n    3. ③附加层次：附加型农业保险产品，天气指数型保险\n\n  5. 农户的自缴保费占比在 23%左右![](/assets/images/gong-gei-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji/image_58.png)\n\n## 相关资料\n\n可通过“⌘+K”插入引用链接，或使用“本地文件”引入源文件。','\n',char(10)),NULL,'',NULL,1,0,0,0,14,'insurance/agriculture-insurance/《供给侧改革背景下中国多层次农业保险产品结构研究》读书笔记.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.979Z',NULL);
INSERT INTO posts VALUES(100,'nong-ye-bao-xian-5675qgmm','农业保险',replace('# 1、农业保险的基础知识\n\n## 1.1 定义\n\n融资性信用保证保险是指保险公司为借贷、融资租赁等融资合同的履约信用风险提供保险保障的业务。\n\n## 1.2 涉及的法律主体\n\n涉及的主要法律主体包括保险人、投保人、被保险人、权利人、义务人。\n\n  * 保险人即承保的保险公司；\n  * 投保人即与保险人订立保险合同并按照保险合同负有支付保险费义务的主体；\n  * 被保险人或称受益人即其财产受保险合同保障，享有保险金请求权的主体；\n  * 权利人：借贷关系中的债权人\n  * 义务人：借贷关系中的债务人，在不同的保险类型下为投保人或者被保险人\n\n## 1.3 融资性信用保证保险分类\n\n根据法律关系主体的不同，融资性信用保证保险可被划分为融资性信用保险和融资性保证保险，融资性信用保证保  \n险主要集中在消费金融、小微金融、供应链金融三大领域。\n\n融资性信用保险是指权利人（即借贷关系中的债权人，如商业银行）作为投保人向保险人投保，如果权利人因为融资方不能按时履行约定还款义务而遭受经济损失，保险人应当按照保险合同规定赔偿权利人，在信用保险中，权利人既是投保人又是被保险人；\n\n融资性保证保险是指义务人（即借贷关系中的债务人，如信用卡持卡人）作为投保人向保险人投保，如果由于义务人不能按时履行约定还款义务导致权利人遭受经济损失，由保险人替代义务人补偿权利人的经济损失，在保证保险中，义务人是投保人，权利人为被保险人。\n\n# 2、融资性信用保险介绍\n\n## 2.1 融资信保保险分类\n\n![](/assets/images/nong-ye-bao-xian/image_11.png)\n\n## 2.2 融资信保主要参与主体及服务内容\n\n融资性信用保证保险业务主要参与主体为融资方、资金方、保险人三方，在融资性信用保险模式下，资金方既是投保人也是被保险人，而在融资性保证保险模式下， 融资方为投保人，资金方为被保险人。\n\n![](/assets/images/nong-ye-bao-xian/image_10.png)\n\n![](/assets/images/nong-ye-bao-xian/image_13.png)\n\n# 3、行业发展现状\n\n![](/assets/images/nong-ye-bao-xian/image_12.png)\n\n![](/assets/images/nong-ye-bao-xian/image_14.png)\n\n2019年，原本仅次于平安产险的人保财险在信用保证保险业务上出现亏损，承保利润为-28.84亿元，综合成本率达到121.7%；中华联合财险由于不规范开展信用贷款保证保险业务，导致投诉集中爆发。\n\n# 4、信用保证保险业务流程\n\n![](/assets/images/nong-ye-bao-xian/image_15.png)![](/assets/images/nong-ye-bao-xian/image_16.png)\n\n![](/assets/images/nong-ye-bao-xian/image_17.png)![](/assets/images/nong-ye-bao-xian/image_18.png)','\n',char(10)),NULL,'',NULL,1,0,0,0,7,'insurance/agriculture-insurance/农业保险.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.980Z',NULL);
INSERT INTO posts VALUES(102,'dingtalkmonitor-da-zao-qi-ye-ji-ding-ding-jian-kong-li-qi','dingtalk-monitor：打造企业级钉钉监控利器',replace('# DingTalk Monitor\n\n> 钉钉群消息智能分析助手 - 让群消息管理更轻松，问题处理更高效。\n\n## 为什么需要它？\n\n在日常工作中，我们经常遇到这些问题：\n\n- 📈 **信息过载**：群里每天大量消息，重要信息容易被淹没\n- 🔍 **问题追踪难**：用户反馈散落在各个群里，难以统一管理和追踪\n- 📊 **数据孤岛**：缺乏对问题类型、优先级的系统化分析\n- ⏰ **响应延迟**：重要问题可能被延误，影响用户体验\n- 📝 **总结耗时**：人工整理群消息费时费力，效率低下\n\n## 它是如何解决这些问题的？\n\nDingTalk Monitor 通过智能化手段解决这些痛点：\n\n### 1. 智能消息分类\n\n- 自动识别消息类型（功能需求/技术问题/运营问题/用户反馈）\n- 智能提取关键信息（优先级/影响范围/提出人）\n- 结构化整理，便于后续分析和处理\n\n### 2. 实时问题追踪\n\n- 自动监控多个钉钉群的消息\n- 根据预设规则识别重要问题\n- 及时推送通知，确保问题不被遗漏\n\n### 3. 数据分析和可视化\n\n- 问题类型分布统计\n- 优先级分析\n- 影响范围评估\n- 趋势分析和预警\n\n### 4. 自动化工作流\n\n- 定时汇总分析（默认每4小时）\n- 智能分类推送\n- 支持自定义处理规则\n- 灵活的触发机制\n\n## 效果展示\n\n![效果展示](https://cdn.nlark.com/yuque/0/2025/png/40701240/1740061212666-2987ed9e-f411-4c6f-821c-f0dc9feec2ec.png)\n\n## 快速开始\n\n### 环境要求\n\n- Node.js >= 14\n- npm >= 6\n\n### 安装步骤\n\n```bash\n# 克隆仓库\ngit clone https://github.com/dabossgit/dingtalk-monitor.git            \n\n# 进入项目目录\ncd dingtalk-monitor    \n\n# 安装依赖\nnpm install  \n```\n\n### 配置\n\n```bash\ncp .env.example .env      \n# 编辑 .env 文件，填入你的钉钉机器人配置\n```\n\n### 运行\n\n```bash\n# 启动定时任务\nnpm start                                          \n\n# 手动触发分析\nnpm run analyze       \n\n# 运行测试消息\nnpm run test-messages       \n```\n\n## 配置说明\n\n### 环境变量\n\n- `DINGTALK_BOT_TOKEN`: 钉钉机器人的 access_token    \n- `DINGTALK_BOT_SECRET`: 钉钉机器人的加签密钥\n- `MESSAGE_FETCH_INTERVAL`: 消息获取间隔（毫秒）\n- `MAX_MESSAGES_PER_FETCH`: 每次获取消息数量\n\n## 项目结构\n\n```\ndingtalk-monitor/\n├── src/                     # 源代码目录\n│   ├── examiner/           # 消息监听模块\n│   ├── processor/          # 消息处理模块\n│   ├── storage/           # 本地存储模块\n│   ├── bot/              # 钉钉机器人模块\n│   └── scheduler/        # 定时任务模块\n├── docs/                  # 文档\n├── test/                 # 测试文件\n└── README.md            # 项目说明\n```\n\n## 贡献指南\n\n欢迎贡献代码！请阅读我们的[贡献指南](CONTRIBUTING.md)了解如何参与项目。\n\n## 开源许可\n\n本项目采用 [MIT 开源许可证](LICENSE)。','\n',char(10)),NULL,'',NULL,1,0,0,0,9,'open-source/dingtalk-monitor：打造企业级钉钉监控利器.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.980Z',NULL);
INSERT INTO posts VALUES(105,'brd-ye-wu-xu-qiu-wen-dang-mu-ban','BRD 业务需求文档模板',replace('# 0 写在前面\n\n需求提出人：\n\n需求对接人：\n\n期望上线时间：\n\n业务需求编号（若有）：\n\n需求关联方：\n\n# 1\. 需求背景\n\n## 1.1 业务背景\n\n对本次需求的背景以及目标进行描述，需要还原当前业务流程以及明确产品/数据现状，重点在于找到问题的本质、核心需求痛点、需求价值。**5W1H 需求分析方法**六个基本问题：Who（谁）、What（什么）、When（何时）、Where（哪里）、Why（为什么）和How（如何）\n\n  1.**Who（谁）**：本需求提出人是谁，涉及到事件或问题的人是谁？包括主要参与者、受影响的人、决策者等。\n  2.**What（什么）**：发生了什么事件或问题？具体的内容和细节是什么？\n  3.**When（何时）**：事件或问题发生的时间是什么？包括开始时间、结束时间以及任何重要的时间节点。\n  4.**Where（哪里）**：事件或问题发生的地点在哪里？包括具体的地理位置、场所或环境。\n  5.**Why（为什么）**：事件发生的原因或背后的动机是什么？分析导致问题的根本原因。\n  6.**How（如何）**：事件是如何发生的？问题是如何产生的？包括过程、方法和步骤。\n\n## 1.2 产品/数据现状背景\n\n明确该需求当前的产品/数据现状，解释业务的服务场景和商业价值。\n\n  \n\n## 1.3 监管/合规/相关运营策略背景\n\n是否存在监管/合规/相关运营策略等背景。\n\n  \n\n# 2\.  需求概述\n\n## 2.1. 需求名称\n\n简洁明了地概括需求内容。****## 2.2. 需求描述\n\n详细描述需求的具体内容，包括功能、性能、用户体验等方面的要求。\n\n## 2.3. 需求价值\n\n阐述该需求能够带来的商业价值、用户价值等，例如提升用户体验、增加收入、降低成本等。****# 3. 业务流程现状\n\n可以使用业务流程图辅助说明\n\n使用流程图工具绘制清晰的业务流程图，展示需求涉及的各个环节和流程。****# 4. 运营计划\n\n## 4.1. 目标用户:\n\n明确该需求的目标用户群体，并分析用户画像、用户需求等。\n\n## 4.2. 推广策略\n\n制定详细的推广策略，包括渠道选择、推广内容、推广节奏等。****## 4.3. 数据指标 \n\n设定关键数据指标，用于衡量需求的效果，例如用户增长率、转化率、留存率等。****## 4.4. 风险控制\n\n识别潜在风险，并制定相应的风险控制措施。\n\n# 5\. 其他说明\n\n## 5.1. 参考资料\n\n列出撰写该文档时参考的资料，例如市场调研报告、竞品分析报告等。****## 5.2. 附件\n\n添加相关的附件，例如页面截图、数据报表等。******备注:**以上模板仅供参考，可根据实际需求进行调整。','\n',char(10)),NULL,'',NULL,1,0,0,0,6,'product-management/BRD 业务需求文档模板.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.982Z',NULL);
INSERT INTO posts VALUES(106,'zhu-liu-zhi-neng-ti-ping-tai-dui-bi','主流智能体平台对比','',NULL,'',NULL,1,0,0,0,1,'product-management/主流智能体平台对比.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.983Z',NULL);
INSERT INTO posts VALUES(107,'jiao-yi-chan-pin-jing-li','交易产品经理','',NULL,'',NULL,1,0,0,0,1,'product-management/交易产品经理.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.983Z',NULL);
INSERT INTO posts VALUES(108,'chan-pin-jia-gou-she-ji-zhi-chan-pin-shi-ti-she-ji-yi-er','产品架构设计之产品实体设计一，二',replace('今天我们来谈一下产品架构设计中，一个必不可少的环节——实体设计。\n\n## 01什么是实体？\n\n在产品架构中，实体可以理解为“名词”——即产品中的关键要素或对象。这些实体是产品功能的基本构件，代表了实际业务中的具体事物或概念。\n\n比如，在一个电商平台中，用户、商品、订单都是典型的实体。它们是产品中不可或缺的部分，是我们要处理和操作的对象。\n\n[什么样的人，适合做B端产品经理？要想成为优秀的B端产品经理，懂业务和懂产品是两个很重要的标准。B端赛道非常细分，产品迭代和推广的速度也很慢，这就产生了大量工作机会...查看详情 >](https://ke.qidianla.com/courses/tobpm)\n\n那我们为什么要抽象设计实体？\n\n抽象设计实体的目的是为了把复杂的业务场景和需求转化为易于理解和实现的模型。实体是产品中最基本的组成单元，通过抽象设计实体，我们能够：\n\n  * 明确产品的核心功能：将实际业务中的复杂对象抽象为实体，可以清晰地看到产品的核心功能和组成部分。\n  * 简化系统设计：实体的抽象设计能够帮助我们将复杂的逻辑拆解成可管理的部分，使系统设计更加简洁、易于维护。\n  * 提高可扩展性：通过合理的实体设计，可以使产品架构具有良好的扩展性，方便未来的功能扩展和更新。\n\n而如果用大白话来解释就是：我们将一个模糊的业务，提炼出真正要“落库”的数据表，毕竟计算机只能处理结构化的数据！\n\n那可能有朋友要问了在产品架构中为什么要先设计实体？\n\n实体设计是产品架构设计的基础。实体设计决定了产品的基本结构和逻辑，是后续流程设计、数据模型设计、界面设计等工作的基础。\n\n如果没有一个清晰的实体设计，整个产品架构将会缺乏坚实的基础，导致功能实现的复杂度增加，系统难以扩展和维护。\n\n试想下如果大家连页面上放什么字段都没有想清楚，一上来就画页面，这样的产品在大型的企业级B端产品中是不敢想象的灾难设计。\n\n所以说在产品架构设计中，实体设计是将业务需求转化为技术实现的桥梁。一个优秀的实体设计不仅能够支撑产品的现有功能，还能为未来的扩展奠定坚实的基础。\n\n## 02 实体设计的方法\n\n具体来说，我们设计实体的方法可以分为下面的4步：\n\n### 1\. 识别关键实体\n\n在产品架构设计初期，首先要识别出产品中的关键实体。在绝大多数的时候，这些实体通常对应于产品中的核心功能或流程，代表了业务中的主要对象（比如会员，订单，商品等）。\n\n步骤：\n\n  1. 分析线下用户的工作场景，提取出与用户交互最频繁的关键词对象。\n  2. 从业务流程中找出对产品功能至关重要的元素。\n\n例如：梳理用户报销场景：用户提供票据，填写金额，提交纸质表单，领导签字该表单，财务查阅该表单……..（这张表单就是我们要提炼的实体-报销单）\n\n### 2\. 定义实体属性\n\n因为每个实体都有其独特的属性，而在找到实体后就需要提炼实体的属性，这些属性描述了实体的特征和状态。\n\n步骤：\n\n  1. 列出每个实体能唯一区分的属性，如ID、名称、描述等。\n  2. 根据业务需求，增加与业务逻辑相关的属性。\n\n例如：报销单中唯一能区分的属性是单据号，单据类型，而根据A公司要求，单据中必须要有申请人ID，申请人职位，申请人职级……（这些唯一项与A公司的要求共同构成了实体属性字段）\n\n### 3\. 设计实体之间的关系\n\n实体之间的关系是产品逻辑的核心。通过设计实体间的关系，可以确定系统的逻辑结构和数据流动。\n\n步骤：\n\n  1. 确定实体之间的关联类型，如一对一、一对多、多对多等。\n  2. 使用实体关系图（ER图）来展示实体之间的关系。\n\n### 4\. 验证实体设计\n\n设计完成后，需要对实体设计进行验证，以确保其能够满足业务需求，并具备良好的扩展性和可维护性。\n\n步骤：\n\n  1. 使用实际业务场景进行测试，验证设计的合理性。\n  2. 通过模拟操作流程，检查设计的健壮性和容错性。\n\n例如我们将抽象出的报销单据实体，在整个线下流程中进行实测，检测有无缺少的字段，有无流程跑不通的情况，就像财务是不是拿到这张单据就可以不要领导签字，在实际与财务沟通后由于公司性质要求，所以必须要签字，因此报销单的实体中还需要增加标识属性，是否已打印出待签字单，用于区分是否完成了打印动作。\n\n## 03 模拟案例演示：电商平台的实体设计\n\n假设我们正在设计一个电商平台，该平台的核心功能是让用户能够浏览商品、加入购物车、下单购买商品，以及查看订单状态。为了实现这些功能，我们需要先设计好平台中的核心实体。以下是具体步骤及结果输出，展示如何一步步提炼出实体。\n\n### 步骤一：识别关键实体\n\n在设计实体之前，我们需要了解平台的主要功能和业务流程：\n\n  1. 用户浏览商品： 用户可以浏览和搜索平台上的商品。\n  2. 加入购物车： 用户可以将商品加入购物车，准备购买。\n  3. 生成订单并支付： 用户在购物车中选择商品后，可以生成订单并完成支付。\n  4. 查看订单状态： 用户可以在订单历史中查看已购买商品的状态和详情。\n\n基于这些功能需求，我们识别出以下关键实体：\n\n  * 用户（User）： 平台的使用者。\n  * 商品（Product）： 在平台上出售的商品。\n  * 购物车（Cart）： 用户选择并准备购买的商品集合。\n  * 订单（Order）： 用户生成的购买记录。\n\n### 步骤二：定义实体属性\n\n确定了关键实体后，我们需要为每个实体定义属性，这些属性将帮助我们详细描述实体的特征和状态。**1）用户（User）：*** 用户ID（userID）： 唯一标识一个用户的ID。\n  * 用户名（username）： 用户的名称。\n  * 邮箱（email）： 用户的邮箱地址，用于登录和联系。\n  * 密码（password）： 用户的账户密码。\n  * 注册日期（registrationDate）： 用户注册平台的日期。**2）商品（Product）：*** 商品ID（productID）： 唯一标识一个商品的ID。\n  * 商品名称（productName）： 商品的名称。\n  * 描述（description）： 商品的详细信息。\n  * 价格（price）： 商品的售价。\n  * 库存数量（stockQuantity）： 当前商品的库存数量。\n  * 创建日期（createdDate）： 商品上架的日期。**3）购物车（Cart）：*** 购物车ID（cartID）： 唯一标识一个购物车的ID。\n  * 用户ID（userID）： 关联到用户的购物车。\n  * 商品列表（products）： 当前购物车中所有商品的集合。**4）订单（Order）：*** 订单ID（orderID）： 唯一标识一个订单的ID。\n  * 用户ID（userID）： 生成订单的用户ID。\n  * 订单日期（orderDate）： 订单生成的日期。\n  * 订单状态（orderStatus）： 订单的当前状态（如待付款、已付款、已发货、已完成）。\n  * 商品列表（products）： 订单中包含的商品列表。\n  * 总金额（totalAmount）： 订单中所有商品的总金额。\n\n### 步骤三：设计实体之间的关系\n\n在定义了实体和它们的属性之后，接下来是设计实体之间的关系。这些关系将决定平台的逻辑结构。\n\n  * 用户与购物车（User-Cart）：一个用户只有一个购物车（1:1 关系）。\n  * 用户与订单（User-Order）：一个用户可以有多个订单（1:多 关系）。\n  * 购物车与商品（Cart-Product）：一个购物车可以包含多个商品，一个商品可以出现在多个购物车中（多:多 关系）。\n  * 订单与商品（Order-Product）：一个订单可以包含多个商品，一个商品可以出现在多个订单中（多:多 关系）。\n\n### 步骤四：验证实体设计\n\n最后，我们通过模拟一些实际场景来验证实体设计的合理性和完整性。**1）用户浏览并加入商品到购物车：*** 用户登录（User），浏览商品（Product），将商品加入购物车（Cart）。\n  * 检查购物车中是否正确记录了所选商品。**2）用户生成订单并支付：*** 用户从购物车中选择商品生成订单（Order），并进行支付。\n  * 验证订单中包含的商品列表和总金额是否正确计算。\n  * 检查订单状态是否从“待付款”变为“已付款”。**3）用户查看订单状态：**用户可以在订单历史中查看已生成的订单及其状态（OrderStatus）。\n\n以上为大家演示的就是一个完整的实体找寻与定义的流程。\n\n## 04 总结\n\n可以看到这样的设计背后，我们一步步的把抽象的业务具体化得到了标准的可产品化的设计，而这也是高阶产品所必备的技能。','\n',char(10)),NULL,'',NULL,1,0,0,0,19,'product-management/产品架构设计之产品实体设计一，二.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.983Z',NULL);
INSERT INTO posts VALUES(109,'gong-zuo-chang-yong-mo-ban','工作常用模版','',NULL,'',NULL,1,0,0,0,1,'product-management/工作常用模版.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.983Z',NULL);
INSERT INTO posts VALUES(110,'zhi-fu-bao-yi-liao-jian-kang-mo-kuai-chan-pin-ti-yan','支付宝医疗健康模块产品体验',replace('# 一、基本信息**目标产品**|  医疗健康、蚂蚁保  \n---\n  \n# 二、产品信息\n\n  * 产品类型：\n  * 产品定位：\n\n# 三、市场分析\n\n## 1\. 行业环境\n\n从政策倾向、技术发展、经济与社会环境的变化来阐述行业环境\n\n  * 技术：新技术的应用和发展，区块链隐私技术、AI应用\n  * 政策：DRG/DIP改革，会对医院、医生、患者的支付产生不同程度的影响\n  * 社会环境：人口老龄化加重、人口抚养比提升，国家医保支出压力变大\n  * 国家商业保险对比：我国的商业保险发展距离发达国家有很大差距\n\n## 2\. 市场规模\n\n  * 当前的市场规模......\n  * 未来的市场规模......\n\n# 四、用户场景需求分析\n\n什么样的场景下，我会打开支付宝的-医疗健康模块？\n\n1、去医院看病，要用到医保码的时候。\n\n刷完医保后的，支付结果可以露出相关的健康险\n\n2、和当地政府的医保/医院部门打通，获取到用户的预约挂号信息，用户即将去医院看病时，触发消息提醒，提醒可以配置医保；\n\n是否可以根据用户预约挂号信息做差异化处理，比如挂的是国际部，可以推送中高端医疗？\n\n普通部，则是百万医疗\n\n如果是自费挂号，建议补充医保，提示补充医保的流程\n\n3、和医院合作\n\n用户的体检、门诊、住院疾病信息的回传？这个是否涉及隐私？\n\n如果涉及隐私，比如做一个一键整理病例，区块链隐私保护，确保用户信息安全，但同时用户可以看到信息，然后支持导出病例以及是否基于病例信息推荐合适的健康险\n\n4、外购药的购买\n\nDRG/DIP改革下，外购药问题会在大医院变得突出\n\n用户如果有商业医疗，医生开处方的时候告知外购药，然后一键告诉用户外购药是否可以报销\n\n5、天价药的药品保险\n\n# 五、产品分析\n\n## 1\. 产品结构图\n\n![](/assets/images/zhi-fu-bao-yi-liao-jian-kang-mo-kuai-chan-pin-ti-yan/image_48.png)\n\n总结：\n\n医疗健康的固定入口为【医疗健康】\n\n## 2\. 医疗健康页面关键功能\n\n# 六、总结\n\n用户去医院看病，以杭州为例，是可以看到用户目前所处单位、工作年限、社保缴纳情况，这样大致就知道了用户的基础信息；如果用户去看病，实际上可以帮助用户一键整理信息以及分析当前体况，这样就获取到了健康险推荐的前提。\n\n购买保险的几个要求\n\n1、年龄、性别、收入\n\n2、体况\n\n3、既有保险情况\n\n4、家庭情况\n\n医疗健康场景下的健康险，核心就是用户就医场景下信息收集，然后基于用户需求去解决用户问题，合适时机推送健康险。','\n',char(10)),NULL,'',NULL,1,0,0,0,6,'product-management/支付宝医疗健康模块产品体验.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.984Z',NULL);
INSERT INTO posts VALUES(111,'you-zhi-you-xing-zi-chan-mo-kuai-diao-yan','有知有行资产模块调研',replace('# 页面布局交互\n\n![](/assets/images/you-zhi-you-xing-zi-chan-mo-kuai-diao-yan/image_27.jpeg)','\n',char(10)),NULL,'',NULL,1,0,0,0,1,'product-management/有知有行资产模块调研.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.984Z',NULL);
INSERT INTO posts VALUES(112,'ai-bang-wo-xie-sql-shi-bei-xiaolti-sheng-567732oc','AI帮我写SQL，十倍效率提升',replace('# 写在前面\n\n在产品经理的日常工作中，数据分析是必不可少的环节，而编写 SQL 查询往往是其中最耗时的部分。理解表结构、筛选数据往往需要花费大量精力，这无疑降低了工作效率。本文将为你提供一种高效解决方案，通过借助 AI 技术，快速生成所需的 SQL 查询，从而帮助产品经理节省时间，提升数据分析效率。\n\n以下是policy 表的建表语句\n    \n    \n    CREATE TABLE policy (\n        policy_id BIGINT AUTO_INCREMENT PRIMARY KEY,    -- 保单ID，主键，自增\n        policy_number VARCHAR(50) NOT NULL UNIQUE,      -- 保单编号，唯一\n        customer_id BIGINT NOT NULL,                    -- 客户ID，外键关联客户表\n        product_id BIGINT NOT NULL,                     -- 产品ID，外键关联产品表\n        policy_status ENUM(''Active'', ''Expired'', ''Cancelled'') NOT NULL DEFAULT ''Active'', -- 保单状态\n        start_date DATE NOT NULL,                       -- 保单生效日期\n        end_date DATE NOT NULL,                         -- 保单到期日期\n        premium DECIMAL(10, 2) NOT NULL,                -- 保费金额\n        payment_frequency ENUM(''Monthly'', ''Quarterly'', ''Semi-Annually'', ''Annually'') NOT NULL, -- 缴费频率\n        agent_id BIGINT,                                -- 代理人ID，可选\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 创建时间\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 更新时间\n        INDEX (customer_id),                            -- 为常用查询字段创建索引\n        INDEX (product_id),\n        INDEX (start_date),\n        INDEX (end_date),\n        FOREIGN KEY (customer_id) REFERENCES customer(customer_id) ON DELETE CASCADE, -- 外键约束\n        FOREIGN KEY (product_id) REFERENCES product(product_id) ON DELETE CASCADE,\n        FOREIGN KEY (agent_id) REFERENCES agent(agent_id) ON DELETE SET NULL\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n\n# 1\. 给 AI 提需求写 sql\n\n## 1.1. 数据筛选逻辑\n\npolicy_status = ''Active'', ''Expired''\n\npayment_frequency=''Monthly'', ''Quarterly''\n\n## 1.2. 分组条件\n\nproduct_id\n\nagent_id\n\n## 1.3. 统计维度\n\npolicy_number\n\n## 1.4. 数据表 sql\n\n直接使用查询建表语句 sql，投喂给 A\n    \n    \n    SHOW CREATE TABLE ods_midplcy_t_agr_policy;\n\n# 2\. 改写 SQL\n\n在 1 的基础上，提供需要改的 sql，比如\n    \n    \n    帮我调整一下这段sql\n    其中我需要的数据表达如下：\n    1.数据筛选逻辑\n    xxx\n    policy_version 取最新版本\n    2.分组条件\n    xxx\n    3.统计维度\n    xxx\n    \n    需要改写的sql如下\n    \n\n# 3\. 提示词（直接抄）\n    \n    \n    - Role: 数据库SQL优化专家和数据分析师\n    - Background: 用户需要对一段SQL语句进行调整，以满足特定的数据筛选、分组和统计需求。用户已经提供了详细的数据筛选逻辑、分组条件和统计维度，但原始SQL语句存在一些问题，需要进行优化和改写。\n    - Profile: 你是一位精通SQL语言的数据库专家，对数据处理和分析有着丰富的经验，能够快速理解用户的需求，并根据数据筛选逻辑、分组条件和统计维度，对SQL语句进行优化和改写。\n    - Skills: 你具备SQL语句优化、数据筛选、分组和统计的能力，能够熟练使用SQL函数和语法，确保SQL语句的准确性和高效性。\n    - Goals:\n        - 根据用户提供的数据筛选逻辑，调整SQL语句中的WHERE子句，确保数据筛选的准确性。\n        - 根据用户提供的分组条件，调整SQL语句中的GROUP BY子句，确保分组的正确性。\n        - 根据用户提供的统计维度，调整SQL语句中的SELECT子句，确保统计结果的准确性。\n        - 优化SQL语句的性能，提高查询效率。\n    - Constrains: 优化后的SQL语句应符合SQL语法规范，能够正确执行并返回用户所需的结果。\n    - OutputFormat: 优化后的SQL语句\n    - Workflow:\n        1. 分析用户提供的数据筛选逻辑，明确筛选条件。\n        2. 根据筛选逻辑，调整SQL语句中的WHERE子句，确保数据筛选的准确性。\n        3. 分析用户提供的分组条件，明确分组字段。\n        4. 根据分组条件，调整SQL语句中的GROUP BY子句，确保分组的正确性。\n        5. 分析用户提供的统计维度，明确统计字段和计算方式。\n        6. 根据统计维度，调整SQL语句中的SELECT子句，确保统计结果的准确性。\n        7. 优化SQL语句的性能，提高查询效率。\n    - Initialization: 在第一次对话中，请直接输出以下：您好，我是数据库SQL优化专家和数据分析师。请告诉我您需要优化的SQL语句以及具体的需求，我会根据您的需求对SQL语句进行优化和改写。','\n',char(10)),NULL,'',NULL,1,1,0,0,16,'tech-tools/AI帮我写SQL，十倍效率提升.md',NULL,NULL,'2025-02-17T00:00:00.000Z','2025-05-07T15:19:46.986Z',NULL);
INSERT INTO posts VALUES(113,'Asset Tracker','Asset Tracker',replace('# 1、需求目的\n\n我在做一个基于微信小程序的收支记录、家庭资产负债的财务管理工具，该小程序包括几个功能\n\n  * 注册登陆：微信免登录注册流程\n  * 记账模块\n\n    * 账本功能\n\n      * 新增账本，邀请他人一起加入账本，一个账本可以有多个成员。\n      * 账本存在默认账本分类，账本分类可以编辑\n\n    * 记账功能：\n\n      * 可以手动 添加/编辑/删除收入、支出记录\n      * 允许上传支付宝/微信支付账单，实现 ocr 识别添加收入、支出记录\n\n    * 账本统计功能：\n\n      * 按照年月、年维度统计账单收入、支出、结余、储蓄率情况\n      * 能够查看分类报表的年月、年维度数据情况\n\n  * 财务功能\n\n    * 家庭资产负债\n\n      * 录入家庭成员\n      * 录入家庭成员的资产、负债数据\n      * 生成相关数据统计\n\n    * 投资理财\n\n      * 录入家庭成员\n      * 录入家庭成员的投资理财数据\n      * 生成相关数据统计\n\n    * 家庭保单管理\n\n      * 录入家庭成员\n      * 录入家庭成员的保单管理\n      * 生成相关数据统计\n\n  * 我的\n\n    * 账号管理\n    * 家庭成员管理\n\n      * 新增家庭成员\n\n    * 账单导入/导出\n\n# 2、需求实现方案\n\n  1. 前端：微信小程序\n  2. 后端：微信云开发\n  3. 环境：dev-4glbr3q9bbe8ef48\n  4. AppID：wx54bd7f9370888355\n  5. 小程序名称：Asset Tracker\n\n# 3、需求背景\n\n## 3.1 业务背景\n\n  1. 我日常有记账的需求，会每天记录自己的收支情况，同时在月底的时候更新自己的家庭资产负债情况。\n  2. 除了更新我自己的数据以外，我还会更新家庭成员的收支情况和整体的资产负债情况。\n\n## 3.2 目前遇到的问题\n\n  1. 收支情况的更新经常不及时，依赖于手动录入到软件中。\n  2. 目前没办法查看家庭成员的收支数据情况，期望能够针对家庭成员的收支情况统一管理和查看。\n  3. 每个月更新资产负债情况时，目前依赖于本地excel表格更新，导致没办法形成每个月/每年的汇总数据以及不同维度的汇总数据分析，检阅家庭资产负债情况。\n\n# 4、需求方案概述\n\n## 4.1 产品信息架构\n\n  \n\n## 4.2 注册登陆功能\n\n注册登陆\n\n## 4.3 首页/账单\n\n账单功能模块包括收支管理、邀请他人加入账本、收支报表通知。\n\n### 4.3.1 账单功能首页\n\n顶部卡片是本月收支结余数据，顶部增加筛选功能，支持按照年月、年的收支结余数据统计；同时还可以看到某一类账单分类饼图统计，点击后可以查看数据明细。\n\n下面是每日收支结余数据，按照日期倒序。\n\n### 4.3.2 共享账本\n\n邀请他人加入账本时，他人需要登陆注册后才允许添加。\n\n创建者邀请他人时，需要填写邀请人的关系。\n\n创建者：拥有该账本的所有权限，可以对账本的分类、预算进行增加、修改、删除等操作，可以邀请/删除其他人加入账本。\n\n普通成员：仅可对账本分类、预算、记账等进行操作。\n\n注意：所有成员仅可以修改、删除自己记录的账单，其他成员的账单可以查看，但不可以修改或者删除。\n\n### 4.3.3 账本分类管理\n\n账本默认是支出、收入分类，支出收入分类下可以设置一级分类、二级分类，其中默认数据是默认分类，可以手动调整。\n\n支出默认分类包括，购物、餐饮、房租、房贷、出行、休闲娱乐、日常、其他\n\n收入默认分类包括，工资、劳动报酬的等等。\n\n### 4.3.4 账本导入\n\n支持 ocr 导入账本，包括识别微信账单和支付宝账单。\n\n账单也可以 excel/csv 格式导入，导入模版你可以帮我设计一个。\n\n## 4.4 财务\n\n账务模块包括家庭资产负债功能、投资理财管理功能、保单管理功能。\n\n### 4.4.1 财务功能首页\n\n顶部卡片是最新一次更新的家庭资产负债数据，顶部增加筛选功能，支持按照年月、年的家庭资产负债数据统计。\n\n支持手动录入家庭资产负债数据，资产包括流动性资产、投资性资产、自用性资产，负债包括流动性负债、投资性负债、自用性负债。\n\n### 4.4.2 投资理财管理\n\n  \n\n### 4.4.3 保单管理\n\n  \n\n## 4.5 设置\n\n账号管理设置、账本\n\n### 4.5.1 共享账本\n\n  \n\n  \n\n# 5.前端布局设计\n\n## 5.1 页面目录结构\n    \n    \n    首页\n       │\n       ├── 月度收支卡片\n       │   ├── 本月收入\n       │   ├── 本月支出\n       │   ├── 结余状态\n       │   └── 预算进度\n       │\n       │\n       ├── 账单列表\n       │   ├── 日期分组\n       │   ├── 收支类型\n       │   ├── 分类图标\n       │   ├── 备注信息\n       │   └── 金额显示\n       │\n       └── 悬浮记账按钮\n           ├── 支出记录\n           ├── 收入记录\n\n  \n\n## 5.2 记账页面\n\n### 5.2.1 添加记账记录 \n    \n    \n    ┌──────── 记账明细 ─────────┐\n    │   [支出 | 收入]           │ ← 顶部支持切换\n    │                         │\n    │   [餐饮*] [交通] [购物]   │← 主分类区域（固定布局，5列）\n    │   [娱乐] [居住] [通讯]    │← *选中状态，高亮显示\n    │   [医疗] [学习] [其他]    │← 展示图标+名称\n    │                          │\n    │   ┌───────────────────┐  │\n    │   │ [🍚三餐] [🥘食材]  │  │← 子分类区域（固定布局，5列）\n    │   │ [🍎水果] [🍪零食]  │  │← 灰色卡片容器\n    │   │ [🥤饮料]          │  │ ← 当选中餐饮时，显示其子分类\n    │   └───────────────────┘  │\n    │                          │\n    │                          │\n    │   ┌───────────────────┐  │\n    │   │ [点击输入备注]  ¥ 0.00 ││← 详情和金额区域（合并为一个区域）\n    │   │ [2024-01-06]     │   ││← 点击日期，弹出日期选择器\n    │   └───────────────────┘  │             │\n    │   [1]   [2]   [3]   [×]  │\n    │   [4]   [5]   [6]   [+]  │\n    │   [7]   [8]   [9]   [-]  │\n    │   [0]   [.]   [  保存  ]  │← 保存占两格\n    │                          │\n    └──────────────────────────┘\n\n### 5.2.2 添加记账页面的日期选择 \n    \n    \n    ┌─────── 日期选择 ───────┐\n    │   <  2024年2月  >      │ ← 顶部年月标题两侧有左右箭头，支持切换月份\n    ├─ 一 二 三 四 五 六 日   ─┤ ← 中间是日历网格，突出显示当前选中日期\n    │  1  2  3  4  5  6  7  │\n    │  8  9  10 11 12 13 14 │\n    │ 15 16 17 18 19 20 21  │\n    │ 22 23 24 25 26 27 28  │\n    │ 29                    │\n    ├────── 快捷选择 ────────┤\n    │  今天  昨天   前天     │ ← 快捷键\n    ├────── 操作按钮 ────────┤\n    │        取消   确定     │\n    └────────────────────────┘\n\n  \n\n## 5.3 我的页面布局结构\n    \n    \n    ┌──────── 用户信息 ─────────┐\n    │   ○    昵称               │ ← 用户头像和昵称，点击进入账号管理             │\n    └──────────────────────────┘\n    \n    ┌──────── 我的账本 ─────────┐\n    │ 📚 我的账本           >  │ ← 点击进入账本管理页面\n    └──────────────────────────┘\n    \n    ┌──────── 数据管理 ─────────┐\n    │ 📥 账单导入           >  │ ← Excel导入\n    │ 📤 账单导出           >  │ ← Excel导出\n    │ 💾 数据备份           >  │ ← 云端备份/恢复\n    └──────────────────────────┘\n    \n    ┌──────── 其他功能 ─────────┐\n    │ ℹ️ 关于我们           >  │ ← 版本、作者等信息\n    │ 💬 意见反馈           >  │ ← 意见反馈入口\n    │ 🔄 检查更新    v1.0.0    │ ← 版本更新检查\n    └──────────────────────────┘\n    \n    ┌──────────────────────────┐\n    │        退出登录          │ ← 红色按钮，清除登录状态\n    └──────────────────────────┘\n\n### 5.3.1 账号管理\n    \n    \n    ┌──────────────────────────┐\n    │     账号管理             │ ← 导航栏标题\n    └──────────────────────────┘\n    \n    ┌──────────────────────────┐\n    │    ○                     │ \n    │  更换头像                │ ← 圆形头像居中显示，下方有更换提示\n    └──────────────────────────┘\n    \n    ┌──────── 基本信息 ────────┐\n    │ 昵称                     │\n    │ ○ 张三          >       │ ← 左侧显示头像，右侧昵称和箭头\n    │                         │\n    │ 手机号                   │\n    │ 138****8888    更换 >   │ ← 手机号脱敏显示，右侧更换按钮\n    └──────────────────────────┘\n    \n    ┌──────── 账号安全 ────────┐\n    │ 登录密码         修改 >  │ ← 右侧显示修改按钮\n    │                         │\n    │ 微信账号         绑定 >  │ ← 未绑定显示"绑定"，已绑定显示微信昵称\n    │                         │\n    │ 实名认证         未认证 >│ ← 显示认证状态\n    └──────────────────────────┘\n    \n    ┌──────────────────────────┐\n    │        退出登录          │ ← 红色按钮，固定在底部\n    └──────────────────────────┘\n\n### 5.3.2 账本管理\n    \n    \n    ┌──────── 我的账本 ─────────┐\n    │                          │ ← 导航栏标题\n    └──────────────────────────┘\n    \n    ┌──────── 我的账本 ────────┐\n    │ 📚 生活账本   [常用]  │ ← 列表项带标记\n    │    2024-01 创建          │ ← 显示创建时间\n    │                          │\n    │ 📚 旅行账本              │ ← 其他账本\n    │    2024-02 创建          │\n    │                          │\n    │ 📚 家庭账本              │\n    │    2024-03 创建          │\n    └──────────────────────────┘\n    \n    ┌──────────────────────────┐\n    │       ➕ 新建账本        │ ← 固定在底部的新建按钮\n    └──────────────────────────┘\n    \n    \n    主要功能和交互：\n    1. 账本列表：\n       - 显示所有账本\n       - 每个账本显示名称、创建时间\n       - 常用的账本有特殊标记\n       - 左滑可以显示删除按钮（非当前账本）\n       - 点击可以查看账本详情\n    \n    2. 新建账本：\n       - 固定在底部的新建按钮\n       - 点击弹出新建账本表单\n       - 可以设置账本名称和描述\n    \n\n## 5.4 首页展示\n    \n    \n    ┌─ 账本页面 ──────────────────────────────┐\n    │                                         │\n    │ ┌─ 顶部卡片(蓝色渐变背景) ─────────────┐ │\n    │ │ 默认账本          2025-01 ▼          │ │ <- 1. 账本名称和月份选择器\n    │ │                                      │ │\n    │ │ 结余                                 │ │\n    │ │ ¥1234.56                            │ │ <- 2. 月度汇总数据\n    │ │                                      │ │\n    │ │ 支出 ¥347.00    收入 ¥1581.56       │ │\n    │ └──────────────────────────────────────┘ │\n    │                                         │\n    │ ┌─ 统计图表 ────────────────────────────┐ │\n    │ │ 最近7天支出                          │ │ <- 3. 图表标题\n    │ │ 总支出：¥1234.56                     │ │ <- 4. 灰色小字体\n    │ │                                      │ │\n    │ │    柱状图显示区域                    │ │ <- 5. 图表配置：\n    │ │    ███  ███  ███  ███  ███  ███  ███ │ │    - 左边距 5%\n    │ │    1/1  1/2  1/3  1/4  1/5  1/6  1/7│ │    - 右边距 5%\n    │ └──────────────────────────────────────┘ │    - 上边距 8%\n    │                                         │    - 下边距 8%\n    │ ┌─ 交易记录 ────────────────────────────┐ │\n    │ │ 交易记录                             │ │ <- 6. 列表标题\n    │ │                                      │ │\n    │ │ 2025-01-09          支：¥347        │ │ <- 7. 日期行：\n    │ │ ├─ 早餐             -¥15            │ │    - 左边显示日期\n    │ │ └─ 午餐             -¥32            │ │    - 右边显示汇总\n    │ │                                      │ │      * 只有支出：支：¥xx\n    │ │ 2025-01-08      结余：¥138          │ │      * 只有收入：收：¥xx\n    │ │ ├─ 工资           +¥500             │ │      * 有收有支：结余：¥xx\n    │ │ ├─ 购物           -¥300             │ │\n    │ │ └─ 晚餐            -¥62             │ │\n    │ │                                      │ │\n    │ │ 2025-01-07          收：¥500        │ │\n    │ │ └─ 工资           +¥500             │ │\n    │ └──────────────────────────────────────┘ │\n    │                                         │\n    │                 [+]                     │ <- 8. 添加按钮(固定位置)\n    └─────────────────────────────────────────┘\n    \n    开发要点：\n    1. 数据加载和刷新：\n       - onLoad: 初始化数据\n       - onShow: 已初始化则刷新数据\n       - 下拉刷新支持\n    \n    2. 顶部卡片：\n       - 月份选择器（年-月）\n       - 月度收支统计（收入、支出、结余）\n    \n    3. 统计图表：\n       - 使用 ec-canvas 组件\n       - 7天支出数据柱状图\n       - 优化图表边距和样式\n       - 大数字显示优化(>1000显示为k)\n       - 总支出灰色小字体(24rpx)\n    \n    4. 交易记录：\n       - 按日期分组展示\n       - 日期行显示汇总信息\n       - 支出红色，收入绿色\n       - 点击记录跳转详情\n    \n    5. 数据库查询优化：\n       - 使用范围查询替代正则\n       - 月度数据：gte(startDate).and(lte(endDate))\n       - 7天数据：command.in(dates)\n    \n    6. 样式规范：\n       - 卡片样式：白底圆角阴影\n       - 间距：30rpx 卡片间距\n       - 内边距：40rpx 30rpx\n       - 文字：主文字32rpx，次要24rpx\n\n## 5.5 财务页面\n\n### 5.5.1 资产负债\n\n![](/assets/images/asset-tracker/image_47.jpeg)\n\n  \n\n    \n    \n    ┌─────────────────────────────────┐\n    │        家庭资产记账            │ <- 导航栏\n    ├─────────────────────────────────┤\n    │ 全部 │ 我 │ pp                │ <- 标签切换栏\n    │ ▔▔▔▔                          │    蓝色下划线指示器\n    ├─────────────────────────────────┤\n    │ ┌─────────────────────────┐    │\n    │ │总资产 (元) 👁          │    │ <- 20rpx内边距\n    │ │1,589,013.60            │    │    轻微阴影\n    │ │                        │    │\n    │ │净资产  1,043,145.60    │    │\n    │ │负债率  34.35%          │    │\n    │ │                        │    │\n    │ │2025.01.01更新          │    │\n    │ └─────────────────────────┘    │\n    │                               │\n    │ 相比2024年10月1日             │\n    │ ┌─────────────────┐          │\n    │ │总资产  总负债    │          │ <- 图表区域\n    │ │↑1,808  没有变化  │          │    柱状图显示\n    │ │                 │          │\n    │ │[图表显示区域]    │          │\n    │ └─────────────────┘          │\n    │                               │\n    │ ┌─────────────────┐          │\n    │ │投资记账         │          │ <- 功能卡片\n    │ │+15.05% 年化     │          │    带图标和数据\n    │ │2025.01.01更新   │          │\n    │ └─────────────────┘          │\n    │                               │\n    │ ┌─────────────────┐          │\n    │ │年度现金流       │          │\n    │ │预算超支         │          │\n    │ │预计年度超支     │          │\n    │ │12,000元         │          │\n    │ └─────────────────┘          │\n    │                               │\n    │ 家庭保单管理                  │\n    │ [意外][医疗][重疾][寿险] >    │ <- 横向滚动菜单\n    │                               │\n        [安全区域]\n    ┌─────────────────────────────────┐\n    │     [      更新资产     ]      │ <- 固定底部按钮\n    └─────────────────────────────────┘\n    └─────────────────────────────────┘','\n',char(10)),NULL,'',NULL,1,0,0,0,53,'tech-tools/Asset Tracker.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.986Z',NULL);
INSERT INTO posts VALUES(114,'Cursor rules','Cursor rules',replace('### 数据库表设计规范\n\n  ***表名命名**：\n\n    * 表名应准确反映其存储的数据内容，且使用单数形式，以便清晰地表达表的含义。\n\n  ***字段设置**：\n\n    * 每个表必须包含一个自增主键 `id` 和一个业务主键 `id`，以确保数据的唯一性和业务逻辑的完整性。\n\n  ***字段命名**：\n\n    * 避免使用 `_id` 类似的命名方式，除非微信小程序有明确要求。\n    * 字段名应使用单数形式，避免复数形式（如 `s` 结尾）。\n    * 尽量避免使用 JSON 嵌套结构的设计。如果因特殊需求必须使用，需向我说明设计理由并获得我的同意。\n\n  ***设计与调整流程**：\n\n    * 在设计数据库表时，需明确告知我数据之间的关联关系以及关键的查询逻辑，以便我进行审核和确认。\n    * 每次对数据库表进行调整前，必须先征得我的同意。一旦我同意了某个设计，就不要轻易对其进行改动，以保持数据结构的稳定性和一致性。\n\n### 前端设计规范\n\n  ***界面设计审核**：\n\n    * 在开始前端代码开发之前，需先向我展示界面设计。只有在我确认界面设计符合要求后，才能开始进行前端代码的开发工作。\n\n  ***代码修改控制**：\n\n    * 我确认后的前端代码，不要随意更改其样式。如果需要对样式进行调整，必须先征得我的同意，以确保界面设计的稳定性和一致性。\n\n### 后端设计规范\n\n#### 代码风格与格式\n\n  ***命名约定**：\n\n    * 变量和函数使用驼峰命名法，如 `userInfo`、`getUserInfo()`。\n    * 常量使用全大写字母，多个单词之间使用下划线分隔，如 `MAX_COUNT`。\n    * 类名使用大驼峰命名法，如 `PersonInfo`。\n\n  ***缩进与换行**：\n\n    * 使用两个空格作为缩进。\n    * 使用 LF（Unix风格）作为换行符。\n\n  ***注释**：\n\n    * 注释应该清晰、简洁，解释代码的意图和功能。\n    * 对于复杂的代码逻辑或者关键算法，建议加入详细的注释，方便后续维护和阅读。\n\n#### 代码组织与模块化\n\n  ***文件组织**：合理组织项目文件结构，将相关功能的代码放在同一个文件夹或模块中。\n  ***模块化设计**：将代码分解为独立的模块或组件，每个模块负责一个特定的功能，提高代码的可维护性和复用性。\n\n#### 错误处理与日志记录\n\n  ***错误处理**：在代码中合理地进行错误捕获和处理，避免程序因为异常而崩溃。\n  ***日志记录**：记录关键操作和异常信息的日志，方便问题的追踪和调试。\n\n#### 性能优化\n\n  ***避免不必要的计算和渲染**：优化代码逻辑，减少不必要的计算和页面渲染次数。\n  ***资源加载优化**：合理使用懒加载、缓存等技术，提高页面加载速度和性能。\n\n#### 安全性\n\n  ***输入验证**：对用户输入进行严格的验证和过滤，防止SQL注入、XSS攻击等安全问题。\n  ***数据加密与传输安全**：对敏感数据进行加密存储和传输，确保数据的安全性。','\n',char(10)),NULL,'',NULL,1,0,0,0,7,'tech-tools/Cursor rules.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.987Z',NULL);
INSERT INTO posts VALUES(115,'cursor-jie-shao-5675frd3','Cursor 介绍',replace('# 前言\n\n从年中cursor开源以来，逐渐火遍全网，成为编程的又一更强力助手，在亲身使用了三个月后写下该教程，供广大开发者参考，cursor的使用十分简单，看完你会了解到集成了先进LLM的cursor在编程方面的强大。（结尾总结有彩蛋）\n\n# 1\. cursor是什么？\n\nCursor是一个集成了先进大型[语言模型](https://so.csdn.net/so/search?q=%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B&spm=1001.2101.3001.7020)（LLM）如GPT-4、Claude 3.5的代码编辑器，可以理解为在VSCode中集成了AI辅助编程助手。它通过自然语言理解和代码生成技术，帮助开发者更高效地编写和理解代码。\n\n![](/assets/images/cursor-jie-shao/image_29.png)\n\n# 2\. 使用步骤\n\n## 2.1 cursor的下载\n\ncursor直接在官网下载安装即可，并且注册账号，在第一次打开cursor时输入账号信息即可。\n\n _**cursor官网：**_[Cursor - The AI Code Editor](https://www.cursor.com/)\n\n下载页面：\n\n![](/assets/images/cursor-jie-shao/image_32.png)\n\n在注册完成后，你会有一个专属账号，每个账号的模型调用次数是有限的，其中GPT的免费调用次数为500次（文末有破解教程，无限续VIP，看到最后喔）。\n\n![](/assets/images/cursor-jie-shao/image_30.jpeg)\n\n### 设置中文\n\n安装好Cursor 后，启动Cursor 软件，会发现是英文的，下面讲述一下设置成中文的方法。\n\n  1.**打开命令面板**：按下键盘组合键`Ctrl+Shift+P`（Windows/Linux）或`Cmd+Shift+P`（macOS），这将打开命令面板。\n  2.**输入语言配置命令**：在命令面板的搜索框中输入`Configure Display Language`，然后按下回车键。\n  3.**选择中文**：在弹出的选项中选择中文（Chinese），系统会提示您重启软件以应用更改。\n  4.**重启软件**：按照提示重启Cursor软件，完成语言设置。\n\n点击最上面的框，输入>language，可以配置简体中文。\n\n![](/assets/images/cursor-jie-shao/image_28.png)\n\n如果在命令面板中找不到中文设置选项，那可能需要安装中文语言包来设置中文界面，安装步骤如下：\n\n  1.**打开扩展程序页面**：按下键盘组合键`Ctrl+Shift+X`，进入扩展程序页面。\n  2.**搜索中文语言包**：在搜索框中输入"Chinese"，搜索中文语言包。\n  3.**安装中文语言包**：在搜索结果中找到合适的中文语言包，点击安装。\n  4.**重启软件**：安装完成后，重启Cursor软件，即可看到软件界面已经成功切换为中文。\n\n## 2.2 内置模型\n\ncursor内置了很多LLMs，包括最先进的GPT4s、Claude3.5s和openai最新发布的推理模型o1-preview和o1-mini，在右上角的设置中即可打开相应的模型进行辅助编程。平时用的最多的还是Claude3.5和GPT4，因为代码能力真的很强悍，后面会展示。\n\n![](/assets/images/cursor-jie-shao/image_31.jpeg)  \n![](/assets/images/cursor-jie-shao/image_33.png)\n\n## 2.3 常用快捷键\n\ncursor最常用的快捷键就四个，非常好记\n\n _**Tab**_ _**：自动填充**_\n\n _**Ctrl+K**_ _**：编辑代码**_\n\n _**Ctrl+L**_ _**：回答用户关于代码和整个项目的问题，也可以编辑代码（功能最全面）**_\n\n _**Ctrl+i**_ _**：编辑整个项目代码（跨文件编辑代码）**_\n\n这里主要讲一下 _**Ctrl+L**_\n\n针对整个文件进行问答和修改，选中一块空白区域按下Ctrl+L，在唤起右侧问答框后可以先输入@，然后出现几个选项，点击Files，再选中文件进行提问，可以针对整个文件进行问答和编辑。![](/assets/images/cursor-jie-shao/image_34.jpeg)![](/assets/images/cursor-jie-shao/image_35.jpeg)\n\n## 2.4 项目的全自动开发\n\n## 2.5 将外部文档作为知识库进行问答\n\ncursor也提供了为外部文档建立知识库进行问答的功能，可以在设置中加入文档，例如加入开发文档作为Cursor的知识库来更好的辅助编程。\n\n![](/assets/images/cursor-jie-shao/image_36.jpeg)\n\n加入文档之后，使用文档进行提问的方式和单个文件一样，使用Ctrl+L唤起对话框，然后输入@，点击docs选择添加好的文档即可。\n\n![](/assets/images/cursor-jie-shao/image_37.jpeg)\n\n## 2.6 加入内置System prompt\n\n经常写prompt的小伙伴一定知道System prompt的作用，可以帮助大模型更好的了解自己的职责和用户的行为习惯，从而更精确的回答问题。在设置中添加Rules for AI添加System prompt![](/assets/images/cursor-jie-shao/image_38.jpeg)\n\n具体的prompt如下：\n    \n    \n    # 角色定义\n    您是一名经验丰富的产品经理和工程师，帮助用户实现产品设计和开发需求。\n    \n    # 目标\n    主动满足用户需求，确保项目顺利完成。\n    \n    ## 第一步：理解项目基础\n    查阅并理解项目文档，必要时创建 `readme.md`。\n    \n    ## 第二步：明确用户需求\n    全面理解用户需求并补充细节，采用简单解决方案。\n    \n    ### 编写代码请求\n    分析需求，选择合适技术并编写清晰注释，实现简单有效的方案。\n    \n    ### 解决代码问题\n    理解代码逻辑，分析问题根源并与用户多次沟通调整方案。\n    \n    ## 第三步：项目总结与反思\n    完成后回顾过程并更新 `readme.md` 文件。\n\n## 2.7 更详细的使用方法\n\n以上介绍的使用技巧足够你应付所有的开发需求，如果你对Cursor很感兴趣，可以参考以下网站进行更多了解\n\n[ _**https://cursor101.com/zh**_](https://cursor101.com/zh)\n\n#  3\. 科学使用\n\ncursor虽好，收费难顶。这里提供一个全网最简单的无限续费VIP的方式。打开[CURSOR VIP](https://cursor.jeter.eu.org/)\n\n![](/assets/images/cursor-jie-shao/image_39.jpeg)\n\n然后点击，即可看见破解命令。随便复制一个即可，国内选上面可能好一点。\n\n![](/assets/images/cursor-jie-shao/image_40.jpeg)\n\n然后直接粘贴到终端运行（运行之后要一直开着终端，切勿关闭，可以最小化），然后重新启动cursor即可。\n\n![](/assets/images/cursor-jie-shao/image_41.jpeg)','\n',char(10)),NULL,'',NULL,1,0,0,0,17,'tech-tools/Cursor 介绍.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.987Z',NULL);
INSERT INTO posts VALUES(116,'cursor-man-xue-shi-yong-5674h30j','Cursor 满血使用',replace('### Cursor Free Trial 的教程\n\n#### 1\. 为什么使用 Cursor Free Trial？\n\nCursor 是一款强大的 AI 编程助手，能够帮助开发者提高编程效率。然而，在使用免费试用版本时，可能会遇到以下限制：**问题 1：试用账户限制**Too many free trial accounts used on this machine.\n    Please upgrade to pro. We have this limit in place to prevent abuse. Please let us know if you believe this is a mistake.**问题 2：API 密钥限制**[New Issue]\n    \n    Composer relies on custom models that cannot be billed to an API key.\n    Please disable API keys and use a Pro or Business subscription.\n    Request ID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx**问题 3：试用请求限制**` You''ve reached your trial request limit.`\n\n这些限制可能会阻碍你继续使用 Cursor 的免费试用版本。幸运的是，有一些方法可以帮助你重置试用版，继续享受 Cursor 的强大功能。\n\n#### 2\. 如何使用 Cursor Free Trial？\n\n以下是详细的步骤，帮助你重置 Cursor 的免费试用版：\n\n##### 2.1 支持的版本\n\n  ***支持的 Cursor 版本**：\n\n    * ✅**Cursor v0.44.11 及以下版本*** ✅**Windows: 最新的 0.45.x 版本（已支持）*** ✅**Mac/Linux: 最新的 0.45.x 版本（已支持，欢迎测试并反馈问题）**#####  2.2 下载 Cursor v0.44.11\n\n根据你的操作系统，下载合适的 Cursor 版本：\n\n  ***Windows**：\n\n    * 从 [Cursor 官方下载](https://cursor.so/)\n    * 或从 [ToDesktop 下载](https://todesktop.com/)\n\n  ***Mac**：\n\n    * 下载 [Mac 版本 (Apple Silicon)](https://cursor.so/download/mac)\n\n##### 2.3 禁用自动更新功能\n\n为了防止 Cursor 自动更新到不支持的版本，需要禁用自动更新功能。以下是 macOS 的操作步骤：\n\n  1.**关闭 Cursor**：\n\n    \n    \n    pkill -f "Cursor"\n\n  2.**删除更新目录并创建阻止文件**：\n\n    \n    \n    rm -rf ~/Library/Application\ Support/cursor-updater\n    touch ~/Library/Application\ Support/cursor-updater\n\n##### 2.4 一键式解决方案\n\n为了方便用户，提供了一个一键式脚本，可以自动完成重置操作。以下是 macOS 的操作步骤：\n\n  1.**运行一键式脚本**：\n\n    \n    \n    curl -fsSL https://aizaozao.com/accelerate.php/https://raw.githubusercontent.com/yuaotian/go-cursor-help/refs/heads/master/scripts/run/cursor_mac_id_modifier.sh | sudo bash\n\n该脚本将执行以下操作：\n\n  * ✨ 自动安装工具\n  * 🔄 立即重置您的 Cursor 试用版\n\n#### 3\. 注意事项\n\n  ***备份重要数据**：在执行任何操作之前，建议备份重要数据。\n  ***谨慎操作**：确保你清楚每个命令的作用，并谨慎操作。\n  ***技术支持**：如果遇到问题，可以访问 [GitHub 项目页面](https://github.com/yuaotian/go-cursor-help) 获取更多帮助。\n\n#### 4\. 结论\n\n通过上述步骤，你可以轻松重置 Cursor 的免费试用版，继续享受其强大的 AI 编程辅助功能。如果还有其他问题，请随时联系技术支持或访问项目页面获取更多信息。\n\n希望这个教程对你有帮助！\n\n此处为语雀打卡卡片，点击链接查看：<https://www.yuque.com/dadadada_up/pm/kqn4hofl0h9ge140#ydMK4>','\n',char(10)),NULL,'',NULL,1,0,0,0,11,'tech-tools/Cursor 满血使用.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.991Z',NULL);
INSERT INTO posts VALUES(117,'github-desktop-an-zhuang-yu-han-hua','GitHub Desktop安装与汉化',replace('### 一、安装 GitHub Desktop\n\n#### 1\. 下载 GitHub Desktop\n\n  1. 打开浏览器，访问 [GitHub Desktop 官方下载页面](https://desktop.github.com/)。\n  2. 在页面中找到“Download for macOS”按钮，点击下载。\n\n#### 2\. 安装 GitHub Desktop\n\n  1. 下载完成后，打开下载的 `.pkg` 安装包文件。\n  2. 按照安装向导的提示进行操作，完成安装。\n  3. 安装完成后，打开 GitHub Desktop 应用程序。\n\n#### 3\. 配置 GitHub 账号\n\n  1. 打开 GitHub Desktop 后，点击“Sign in to GitHub.com”。\n  2. 输入你的 GitHub 账号和密码，或者使用浏览器登录。\n  3. 登录成功后，GitHub Desktop 会自动同步你的仓库信息。\n\n* * *\n\n### 二、汉化 GitHub Desktop\n\n#### 1\. 下载汉化工具\n\n  1. 打开浏览器，访问 [GitHub Desktop 汉化工具仓库](https://github.com/robotze/GithubDesktopZhTool)。\n  2. 在仓库页面中，找到“Releases”标签，点击进入。\n  3. 下载最新版本的汉化工具。确保下载的汉化工具版本与你的 GitHub Desktop 版本一致。\n\n#### 2\. 解压汉化包\n\n  1. 下载完成后，解压下载的文件。\n  2. 解压后，你会看到一个文件夹，里面包含汉化所需的文件。\n\n#### 3\. 替换文件\n\n  1. 打开终端（Terminal）。\n  2. 输入以下命令，找到 GitHub Desktop 的安装路径：\n\nbash复制\n    \n    \n    open /Applications/GitHub\ Desktop.app/Contents/Resources/app/\n\n这将打开 GitHub Desktop 的资源文件夹。\n\n  3. 在资源文件夹中，找到以下两个文件：\n\n    * `main.js`\n    * `renderer.js`\n\n  4. 打开解压后的汉化包文件夹，找到对应的 `main.js` 和 `renderer.js` 文件。\n  5. 将汉化包中的 `main.js` 和 `renderer.js` 文件复制到 GitHub Desktop 的资源文件夹中，替换原有的文件。\n\n#### 4\. 重启 GitHub Desktop\n\n  1. 替换文件后，关闭 GitHub Desktop。\n  2. 重新打开 GitHub Desktop，界面应该会显示为中文。\n\n* * *\n\n### 三、常见问题及解决方法\n\n#### 1\. 汉化后无法打开 GitHub Desktop\n\n  ***解决方法**：可能是汉化包版本与 GitHub Desktop 版本不匹配。检查汉化包版本是否与 GitHub Desktop 的版本一致。如果不一致，下载对应版本的汉化包重新操作。\n\n#### 2\. 汉化后部分文字显示异常\n\n  ***解决方法**：可能是字体文件未正确加载。确保汉化包中的字体文件已正确安装。如果问题仍然存在，可以尝试恢复原始文件，然后重新汉化。\n\n#### 3\. 如何恢复原始文件\n\n  ***解决方法**：如果你之前备份了原始的 `main.js` 和 `renderer.js` 文件，可以将它们复制回 GitHub Desktop 的资源文件夹中，替换汉化后的文件。然后重新启动 GitHub Desktop。\n\n* * *\n\n### 四、总结\n\n通过以上步骤，你已经成功安装并汉化了 GitHub Desktop。现在你可以更方便地使用 GitHub Desktop 进行代码管理，享受中文界面带来的便利。如果在操作过程中遇到任何问题，可以参考常见问题及解决方法，或者在相关社区寻求帮助。','\n',char(10)),NULL,'',NULL,1,0,0,0,9,'tech-tools/GitHub Desktop安装与汉化.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.992Z',NULL);
INSERT INTO posts VALUES(118,'github-cang-ku-san-zhong-ke-long-fang-shi','GitHub仓库三种克隆方式',replace('在MacBook上克隆GitHub仓库并进行本地代码调整及提交更新时，三种克隆方式（HTTPS、SSH、GitHub CLI）各有优劣，适合不同的使用场景和用户需求：\n\n### 1\.**HTTPS克隆*****优点**：\n\n    ***简单易用**：无需额外配置，适合新手用户。直接使用浏览器或Git客户端即可。\n    ***广泛支持**：几乎所有的防火墙和代理服务器都支持HTTPS。\n\n  ***缺点**：\n\n    ***安全性较低**：每次操作都需要输入用户名和密码，可能导致凭证泄露。\n    ***速度较慢**：相较于SSH，HTTPS的传输速度可能略慢。\n\n  ***使用场景**：适合快速、简单的操作，尤其是在公共网络环境中。\n\n### 2\.**SSH克隆*****优点**：\n\n    ***高安全性**：使用密钥对进行身份验证，无需每次输入密码。\n    ***速度更快**：通常比HTTPS更快，适合大规模数据传输。\n\n  ***缺点**：\n\n    ***配置复杂**：需要额外的SSH密钥配置，对新手不友好。\n    ***防火墙限制**：某些网络环境可能限制SSH协议。\n\n  ***使用场景**：适合需要高安全性和频繁操作的开发者。\n\n### 3\.**GitHub CLI克隆*****优点**：\n\n    ***集成功能**：不仅支持克隆，还支持管理Issue、PR等。\n    ***统一体验**：在命令行中完成大部分GitHub操作。\n\n  ***缺点**：\n\n    ***学习成本**：需要学习CLI命令，对习惯图形界面的用户不友好。\n\n  ***使用场景**：适合希望在命令行中完成所有GitHub操作的高级用户。\n\n### 推荐建议\n\n  * 如果你**不熟悉Git操作**，并且只是偶尔需要克隆和提交代码，**HTTPS克隆**是最简单的方式。\n  * 如果你**注重安全性**，并且需要频繁进行代码提交和更新，**SSH克隆**是更好的选择。\n  * 如果你**熟悉命令行操作**，并且希望在本地通过命令行完成所有GitHub相关操作，**GitHub CLI**会是一个高效的选择。\n\n根据你的需求，选择最适合的方式即可。','\n',char(10)),NULL,'',NULL,1,0,0,0,5,'tech-tools/GitHub仓库三种克隆方式.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.993Z',NULL);
INSERT INTO posts VALUES(119,'Notion API','Notion API',replace('Notion API文档：[https://developers.notion.com/docs/working-with-databases](https://developers.notion.com/docs/working-with-databases)\n\n好的！以下是根据你提供的Notion API文档内容，整理的相关API接口信息，包括接口的功能、入参、出参和示例代码。\n\n## 1\. Notion API\n\n### 1.1**获取数据库信息（Retrieve a Database）**####  功能\n\n获取指定数据库的详细信息，包括其结构（字段定义）。\n\n#### 入参\n\n  * `database_id`：数据库的唯一标识符（UUID格式）。\n\n#### 出参\n\n返回一个包含数据库信息的对象，包括：\n\n  * `id`：数据库的唯一标识符。\n  * `title`：数据库的标题。\n  * `properties`：数据库的字段（列）定义。\n  * 其他数据库元数据。\n\n#### 示例代码\n\nbash复制\n    \n    \n    curl -X GET "https://api.notion.com/v1/databases/{database_id}" \\n      -H "Authorization: Bearer $NOTION_API_KEY" \\n      -H "Notion-Version: 2021-08-16"\n\n#### 示例响应\n\n  \n\n    \n    \n    {\n      "object": "database",\n      "id": "2f26ee68-df30-4251-aad4-8ddc420cba3d",\n      "created_time": "2020-03-17T19:10:04.968Z",\n      "last_edited_time": "2020-03-17T21:49:37.913Z",\n      "title": [\n        {\n          "type": "text",\n          "text": {\n            "content": "Grocery List"\n          }\n        }\n      ],\n      "properties": {\n        "Grocery item": {\n          "id": "fy:{",\n          "type": "title",\n          "title": {}\n        },\n        "Price": {\n          "id": "dia[",\n          "type": "number",\n          "number": {\n            "format": "dollar"\n          }\n        },\n        "Last ordered": {\n          "id": "]\\R[",\n          "type": "date",\n          "date": {}\n        }\n      }\n    }\n\n### 1.2**向数据库中添加页面（Create a Page in a Database）**####  功能\n\n在指定数据库中创建一个新页面（记录）。\n\n#### 入参\n\n  * `parent`：指定父级数据库的ID。\n  * `properties`：页面的属性，必须符合数据库的字段定义。\n\n#### 出参\n\n返回一个包含新创建页面信息的对象，包括：\n\n  * `id`：页面的唯一标识符。\n  * `properties`：页面的属性值。\n  * 其他页面元数据。\n\n#### 示例代码\n\nbash复制\n    \n    \n    curl -X POST "https://api.notion.com/v1/pages" \\n      -H "Authorization: Bearer $NOTION_API_KEY" \\n      -H "Content-Type: application/json" \\n      -H "Notion-Version: 2021-08-16" \\n      --data ''{\n        "parent": {\n          "database_id": "2f26ee68-df30-4251-aad4-8ddc420cba3d"\n        },\n        "properties": {\n          "Grocery item": {\n            "title": [\n              {\n                "text": {\n                  "content": "Tomatoes"\n                }\n              }\n            ]\n          },\n          "Price": {\n            "number": 1.49\n          },\n          "Last ordered": {\n            "date": {\n              "start": "2021-05-11"\n            }\n          }\n        }\n      }''\n\n#### 示例响应\n\n  \n\n    \n    \n    {\n      "object": "page",\n      "id": "3b69d8d8-9f53-4a5e-8d8d-3b69d8d89f53",\n      "created_time": "2021-05-11T12:00:00.000Z",\n      "last_edited_time": "2021-05-11T12:00:00.000Z",\n      "parent": {\n        "type": "database_id",\n        "database_id": "2f26ee68-df30-4251-aad4-8ddc420cba3d"\n      },\n      "properties": {\n        "Grocery item": {\n          "id": "title",\n          "type": "title",\n          "title": [\n            {\n              "type": "text",\n              "text": {\n                "content": "Tomatoes"\n              }\n            }\n          ]\n        },\n        "Price": {\n          "id": "number",\n          "type": "number",\n          "number": 1.49\n        },\n        "Last ordered": {\n          "id": "date",\n          "type": "date",\n          "date": {\n            "start": "2021-05-11"\n          }\n        }\n      }\n    }\n\n### 1.3**查询数据库中的页面（Query a Database）**####  功能\n\n根据指定的过滤条件查询数据库中的页面。\n\n#### 入参\n\n  * `database_id`：数据库的唯一标识符。\n  * `filter`：过滤条件，用于筛选页面。\n  * `sorts`：排序条件，用于对结果进行排序。\n\n#### 出参\n\n返回一个包含查询结果的分页对象，包括：\n\n  * `results`：符合过滤条件的页面列表。\n  * `has_more`：是否还有更多结果。\n  * `next_cursor`：用于获取下一页结果的游标。\n\n#### 示例代码\n\nbash复制\n    \n    \n    curl -X POST "https://api.notion.com/v1/databases/2f26ee68-df30-4251-aad4-8ddc420cba3d/query" \\n      -H "Authorization: Bearer $NOTION_API_KEY" \\n      -H "Content-Type: application/json" \\n      -H "Notion-Version: 2021-08-16" \\n      --data ''{\n        "filter": {\n          "property": "Last ordered",\n          "date": {\n            "past_week": {}\n          }\n        },\n        "sorts": [\n          {\n            "timestamp": "created_time",\n            "direction": "descending"\n          }\n        ]\n      }''\n\n#### 示例响应\n\n  \n\n    \n    \n    {\n      "object": "list",\n      "results": [\n        {\n          "object": "page",\n          "id": "3b69d8d8-9f53-4a5e-8d8d-3b69d8d89f53",\n          "created_time": "2021-05-11T12:00:00.000Z",\n          "last_edited_time": "2021-05-11T12:00:00.000Z",\n          "parent": {\n            "type": "database_id",\n            "database_id": "2f26ee68-df30-4251-aad4-8ddc420cba3d"\n          },\n          "properties": {\n            "Grocery item": {\n              "id": "title",\n              "type": "title",\n              "title": [\n                {\n                  "type": "text",\n                  "text": {\n                    "content": "Tomatoes"\n                  }\n                }\n              ]\n            },\n            "Price": {\n              "id": "number",\n              "type": "number",\n              "number": 1.49\n            },\n            "Last ordered": {\n              "id": "date",\n              "type": "date",\n              "date": {\n                "start": "2021-05-11"\n              }\n            }\n          }\n        }\n      ],\n      "has_more": false,\n      "next_cursor": null\n    }\n\n### 1.4**更新页面属性（Update Page Properties）**####  功能\n\n更新指定页面的属性值。\n\n#### 入参\n\n  * `page_id`：页面的唯一标识符。\n  * `properties`：要更新的属性值。\n\n#### 出参\n\n返回一个包含更新后页面信息的对象，包括：\n\n  * `id`：页面的唯一标识符。\n  * `properties`：更新后的属性值。\n  * 其他页面元数据。\n\n#### 示例代码\n\nbash复制\n    \n    \n    curl -X PATCH "https://api.notion.com/v1/pages/{page_id}" \\n      -H "Authorization: Bearer $NOTION_API_KEY" \\n      -H "Content-Type: application/json" \\n      -H "Notion-Version: 2021-08-16" \\n      --data ''{\n        "properties": {\n          "Price": {\n            "number": 1.99\n          }\n        }\n      }''\n\n#### 示例响应\n\n  \n\n    \n    \n    {\n      "object": "page",\n      "id": "3b69d8d8-9f53-4a5e-8d8d-3b69d8d89f53\n\n## 2 数据库属性（Database properties）\n\n### 2.1 数据库属性概述\n\n每个数据库对象都包含一个名为 `properties` 的子对象，该对象由多个数据库属性对象组成。这些属性对象定义了数据库的模式，并在Notion用户界面中作为数据库列显示。\n\n### 2.2 数据库属性对象包含的键\n\n每个数据库属性对象包含以下键：\n\n  * `id`（字符串）：属性的标识符，通常是随机字母和符号的短字符串。某些自动生成的属性类型具有特殊的人类可读ID。\n  * `name`（字符串）：属性在Notion中的名称。\n  * `description`（字符串）：属性的描述，如在Notion中显示。\n  * `type`（字符串枚举）：控制属性行为的类型。可能的值包括但不限于：`"checkbox"`、`"created_by"`、`"created_time"`、`"date"`、`"email"`、`"files"`、`"formula"`、`"last_edited_by"`、`"last_edited_time"`、`"multi_select"`、`"number"`、`"people"`、`"phone_number"`、`"relation"`、`"rich_text"`、`"rollup"`、`"select"`、`"status"`、`"title"`、`"url"`。\n\n### 2.3 类型特定的配置\n\n每个数据库属性对象还包含一个类型对象。对象的键是对象的 `type`，值是一个包含类型特定配置的对象。\n\n### 2.4 属性类型示例\n\n以下是一些属性类型及其配置的示例：\n\n  ***Checkbox**：在Notion UI中作为包含复选框的列显示。\n\n  \n\n    \n    \n    "Task complete": {\n      "id": "BBla",\n      "name": "Task complete",\n      "type": "checkbox",\n      "checkbox": {}\n    }\n\n  ***Created by**：在Notion UI中作为包含每行作者提及的列显示。\n\n  \n\n    \n    \n    "Created by": {\n      "id": "%5BJCR",\n      "name": "Created by",\n      "type": "created_by",\n      "created_by": {}\n    }\n\n  ***Date**：在Notion UI中作为包含日期值的列显示。\n\n  \n\n    \n    \n    "Task due date": {\n      "id": "AJP%7D",\n      "name": "Task due date",\n      "type": "date",\n      "date": {}\n    }\n\n  ***Multi-select**：在Notion UI中作为包含多个选项值的列显示。\n\n  \n\n    \n    \n    "Store availability": {\n      "id": "flsb",\n      "name": "Store availability",\n      "type": "multi_select",\n      "multi_select": {\n        "options": [\n          {\n            "id": "5de29601-9c24-4b04-8629-0bca891c5120",\n            "name": "Duc Loi Market",\n            "color": "blue"\n          }\n          // 其他选项...\n        ]\n      }\n    }\n\n  ***Number**：在Notion UI中作为包含数值的列显示。\n\n  \n\n    \n    \n    "Price": {\n      "id": "%7B%5D_P",\n      "name": "Price",\n      "type": "number",\n      "number": {\n        "format": "dollar"\n      }\n    }\n\n  ***Select**：在Notion UI中作为包含单一选项值的列显示。\n\n  \n\n    \n    \n    "Food group": {\n      "id": "%40Q%5BM",\n      "name": "Food group",\n      "type": "select",\n      "select": {\n        "options": [\n          {\n            "id": "e28f74fc-83a7-4469-8435-27eb18f9f9de",\n            "name": "🥦Vegetable",\n            "color": "purple"\n          }\n          // 其他选项...\n        ]\n      }\n    }\n\n  ***Title**：控制数据库行在打开时顶部显示的标题。\n\n  \n\n    \n    \n    "Project name": {\n      "id": "title",\n      "name": "Project name",\n      "type": "title",\n      "title": {}\n    }\n\n### 注意事项\n\n  * 所有数据库都需要一个且仅有一个 `title` 属性。\n  * 某些属性类型（如 `status`）不能通过API更新其 `name` 或 `options` 值，需要在Notion UI中进行更新。\n\n这些信息提供了Notion API中数据库属性的详细概述，包括它们的结构、类型以及如何在Notion中表示。','\n',char(10)),NULL,'',NULL,1,0,0,0,43,'tech-tools/Notion API.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:46.996Z',NULL);
INSERT INTO posts VALUES(120,'Sublime Text','Sublime Text',replace('## 下载链接\n\n[sublimetext](https://www.sublimetext.com/)\n\n## 设置成中文：\n\n要在 Sublime Text 中设置中文界面，你可以按照以下步骤操作：\n\n### 安装 Package Control 插件\n\n  1.**打开 Sublime Text**。\n  2.**按下快捷键**` Ctrl + Shift + P`**（Windows/Linux）或**` Cmd + Shift + P`**（Mac）**，打开命令面板。\n  3.**在命令面板中输入**` Install Package Control`，然后选择该选项进行安装。\n\n    * 如果是第一次安装，可能会弹出一个确认框，点击确认即可。\n\n### 安装中文语言包\n\n  1.**安装完成后，再次打开命令面板**，输入 `Install Package` 并选择该命令。\n  2.**在弹出的搜索框中输入**` ChineseLocalizations`，然后选择该插件进行安装。\n  3.**安装完成后，需要重新打开 Sublime Text**。\n\n### 设置中文界面\n\n  1.**重新打开 Sublime Text**后，点击菜单栏中的 `Help`（帮助）选项。\n  2.**在下拉菜单中选择**` Language`**（语言）**，然后选择 `简体中文`。\n\n### 配置文件设置（可选）\n\n如果你希望确保 Sublime Text 在启动时自动使用中文界面，可以修改配置文件：\n\n  1.**按下快捷键**` Ctrl + Shift + P`**打开命令面板**，输入 `Preferences: Open Settings (User)` 并选择该命令。\n  2.**在打开的**` settings.json`**文件中，添加以下代码**：\n\n    \n    \n    {\n        "locale": "zh_CN"\n    }\n\n确保将上述代码添加到文件的末尾，然后保存并关闭文件。\n\n  3.**重启 Sublime Text**，即可看到中文界面。\n\n通过这些步骤，你可以在 Sublime Text 中成功设置中文界面，并享受更加友好的使用体验。','\n',char(10)),NULL,'',NULL,1,0,0,0,5,'tech-tools/Sublime Text.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.001Z',NULL);
INSERT INTO posts VALUES(121,'vs-code-zhong-shi-yong-drawio-wan-quan-zhi-nan','VS Code中使用Draw.io完全指南',replace('# VS Code中使用Draw.io完全指南\n\n## 1. 基础设置\n### 1.1 安装配置\n1. **安装Draw.io Integration插件**\n   - 打开VS Code扩展市场（Ctrl+Shift+X）\n   - 搜索"Draw.io Integration"\n   - 点击安装，由hediet.vscode-drawio提供\n   - 重启VS Code\n\n### 1.2 工作区设置\n- 在settings.json中添加以下配置：\n```json\n{\n    "hediet.vscode-drawio.theme": "Kennedy", // 设置主题\n    "hediet.vscode-drawio.autoSave": true,   // 启用自动保存\n}\n```\n\n## 2. 高级功能\n### 2.1 版本控制\n- 支持Git版本控制\n- `.drawio.svg`格式便于在Git中追踪变更\n- 推荐使用`.drawio.png`格式在GitHub上直接预览\n\n### 2.2 团队协作\n- 使用Live Share进行实时协作\n- 支持多人同时编辑\n- 可以通过注释功能进行讨论\n\n## 3. 图表类型\n- 流程图\n- UML图\n- 架构图\n- 思维导图\n- 网络拓扑图\n\n## 4. 常用快捷键\n- `Ctrl+D`: 复制选中元素\n- `Delete`: 删除选中元素\n- `Ctrl+S`: 保存图表\n- `Ctrl+F`: 搜索图形\n- `Ctrl+G`: 组合选中元素\n- `Ctrl+Shift+U`: 取消组合\n\n## 5. 常见问题解决\n### 5.1 SVG导出问题\n- 确保安装了最新版本\n- 使用"Export"而非"另存为"\n- 检查文件权限\n\n### 5.2 性能优化\n- 大型图表建议拆分\n- 定期清理未使用元素\n- 使用分层管理复杂图表\n\n## 6. Markdown集成\n### Markdown中嵌入Draw.io图表的方法\n\n#### 方法一：使用fenced code block\n在Markdown文件中，您可以使用以下语法直接嵌入Draw.io图表：\n\n```drawio\nflowchart TD\n    A[开始] --> B{判断}\n    B -->|是| C[处理1]\n    B -->|否| D[处理2]\n```\n\n#### 方法二：引用外部图表文件\n1. 创建一个`.drawio.svg`文件\n2. 在Markdown中使用图片语法引用：\n```markdown\n![流程图](./your-diagram.drawio.svg)\n```\n\n#### 方法三：混合文档\n可以创建`.drawio.md`后缀的文件，这种文件既支持Markdown编写也支持Draw.io绘图。\n\n### 6.1 高级整合技巧\n- 支持Dark/Light主题自适应\n- 可添加交互式链接\n- 支持实时渲染\n\n## 7. 最佳实践\n- 使用模板提高效率\n- 建立统一的图表样式指南\n- 定期备份重要图表\n- 使用图层管理复杂图表\n\n## 8. 扩展功能\n- 支持脚本自动化\n- 集成其他VS Code插件\n- 自定义图形库','\n',char(10)),NULL,'',NULL,1,0,0,0,7,'tech-tools/VS Code中使用Draw.io完全指南.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.002Z',NULL);
INSERT INTO posts VALUES(123,'deepseek-ben-di-hua-bu-shu','deepseek本地化部署',replace('前提：MacBook Pro（Apple M3，16GB）\n\n![](/assets/images/deepseekben-di-hua-bu-shu/image_21.png)\n\n# 如何选择 DeepSeek 的模型？\n\n模型版本| 参数量| 适用场景| 最低硬件配置要求| 适用设备  \n---\nDeepSeek-R1-Distill-Qwen-1.5B| 1.5B| 简单智能助手、轻量级文本生成| 8GB RAM，无显卡加速| 旧款手机、低端电脑  \nDeepSeek-R1-Distill-Qwen-7B| 7B| 中等复杂度任务，如简单智能客服、日常文本处理| 16GB RAM，8GB 显存（GPU加速）| 中端电脑（如 MacBook Pro M3 16GB RAM）  \nDeepSeek-R1-Distill-Qwen-14B| 14B| 复杂文本处理、专业领域问答| 32GB RAM，26GB 显存（GPU加速）| 高端电脑（如配备 RTX 4080 的台式机）  \nDeepSeek-R1-Distill-Qwen-32B| 32B| 高精度文本生成、复杂逻辑推理| 64GB RAM，64GB 显存（GPU加速）| 专业工作站（如多 GPU 配置的服务器）  \nDeepSeek-R1-Distill-Llama-70B| 70B| 高精度长文本生成、复杂任务处理| 128GB RAM，140GB 显存（GPU加速）| 高端服务器（如配备多张 A100 GPU）  \n  \n## 说明\n\n  ***参数量**：模型的参数数量，直接影响模型的复杂度和性能。\n  ***适用场景**：根据模型的大小和性能特点，适合不同复杂度的任务。\n  ***最低硬件配置要求**：运行该模型所需的最低硬件配置，包括内存和显存。\n  ***适用设备**：根据硬件配置要求，推荐的设备类型。\n\n根据你的设备配置（MacBook Pro M3，16GB RAM），建议选择**DeepSeek-R1-Distill-Qwen-7B**模型，它可以在你的设备上运行，同时提供较好的性能和准确性。\n\n# 推荐部署方法：使用Ollama部署\n\nOllama是一个免费开源的工具，支持在本地运行和部署大型语言模型，适合macOS系统。\n\n## 部署步骤：\n\n### 1\. 安装Ollama\n\n    * 访问[Ollama官网](https://ollama.com/)，下载适合macOS的安装包。\n    * 安装完成后，在终端运行以下命令验证安装：\n\n    \n    \n    ollama --version\n\n如果显示版本信息，则安装成功。\n\n### 2\. 下载DeepSeek模型\n\n    * 根据你的硬件配置，推荐下载1.5B或7B版本的DeepSeek模型。在终端运行以下命令：\n\n    \n    \n    ollama pull deepseek-r1:1.5b\n\n或者：\n    \n    \n    ollama pull deepseek-r1:7b\n\n下载完成后，使用以下命令启动模型：\n    \n    \n    ollama run deepseek-r1:1.5b\n\n或：\n    \n    \n    ollama run deepseek-r1:7b\n\n模型启动后，你可以在终端与模型进行交互。\n\n### 3\. 增强交互体验（可选）\n\n    * 如果你希望获得更丰富的交互体验，可以部署Open-WebUI。确保你的机器上安装了Docker，然后运行以下命令：\n\n    \n    \n    docker run -d -p 3000:8080 \\n      --add-host=host.docker.internal:host-gateway \\n      -v open-webui:/app/backend/data \\n      --name open-webui \\n      --restart always \\n      ghcr.io/open-webui/open-webui:main\n\n访问`http://localhost:3000`，选择`deepseek-r1:latest`即可。\n\n## 费用说明\n\n  ***Ollama部署**：完全免费。\n  ***DeepSeek模型**：本地部署时免费。\n  ***Open-WebUI**：免费开源。\n\n综上所述，使用Ollama在你的MacBook Pro上本地部署DeepSeek是完全免费的，无需支付任何费用。','\n',char(10)),NULL,'',NULL,1,0,0,0,10,'tech-tools/deepseek本地化部署.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.003Z',NULL);
INSERT INTO posts VALUES(124,'deepseek-man-xue-fu-huo','deepseek满血复活','',NULL,'',NULL,1,0,0,0,1,'tech-tools/deepseek满血复活.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.003Z',NULL);
INSERT INTO posts VALUES(126,'notion+cursor','notion+cursor',replace('## \n\n## Setup Instructions 设置说明\n\n### 1\. Create a Notion Integration  \n1\. 创建 Notion 集成\n\n  1. Go to [Notion – The all-in-one workspace for your notes, tasks, wikis, and databases.](https://www.notion.so/my-integrations)  \n转到 [Notion 集成页面](https://www.notion.so/my-integrations)\n  2. Click "New integration" 点击 “New integration”\n  3. Name your integration (e.g., "Cursor Docs")  \n为您的集成命名（例如，“Cursor Docs”）\n  4. Select the workspace where you want to use the integration  \n选择要在其中使用集成的工作区\n  5. Click "Submit" to create the integration  \n单击 “Submit” 创建集成\n  6. Copy your "Internal Integration Token"  \n复制您的 “Internal Integration Token”\n\n### 2\. Configure Extension 配置扩展\n\n  1. 安装拓展程序\n\n![](/assets/images/notion-cursor/image_23.png)\n\n  2. Open Command Palette in VS Code (Cmd/Ctrl + Shift + P)  \n在 VS Code 中打开命令面板 （Cmd/Ctrl + Shift + P）![](/assets/images/notion-cursor/image_22.png)\n  3. Search for "Notion: Configure Settings"  \n搜索 “Notion： Configure Settings”\n\n![](/assets/images/notion-cursor/image_24.png)\n\n  4. Paste your Integration Token when prompted  \n出现提示时粘贴您的集成令牌\n\nIntegration Token：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\n\n  5. The extension will verify your connection  \n该扩展将验证您的连接\n\nnotion 页面链接：\n\n[https://www.notion.so/daboss/asset-tracker-18dca1806c5b8058a1eac5390ebeb973](https://www.notion.so/daboss/asset-tracker-18dca1806c5b8058a1eac5390ebeb973)\n\n![](/assets/images/notion-cursor/image_25.png)\n\n  \n\n### 3\. 实现数据库与 Integration 连接\n\n操作步骤如下：\n\n  1. 打开你的 Notion 数据库页面\n  2. 点击右上角的 Share 按钮（分享按钮）\n  3. 在弹出的菜单中找到 Connections，点击 Add connections\n  4. 在搜索框中找到你刚才创建的 Integration 名称并选择\n\n![](/assets/images/notion-cursor/image_26.png)\n\n完成这些步骤后，你就可以获取数据库 ID 了：\n\n  1. 在浏览器中打开你的数据库页面\n  2. 从 URL 中复制数据库 ID：\n\n[https://www.notion.so/workspace/[这一串就是数据库ID]?v=](https://www.notion.so/workspace/\[这一串就是数据库ID\]?v=)...\n\n数据库 ID 通常是一串 32 位的字符，类似：  \n8a5d5d6c7d4e4f1a9b8c7d6e5f4a3b2c\n\n这个 ID 就是代码中需要用到的 DATABASE_ID。  \n提示：如果在 Share 菜单里看不到你的 Integration，可以：\n\n  1. 确认 Integration 创建成功\n  2. 刷新页面后重试\n  3. 检查 Integration 的权限设置是否正确（应该有 Read 权限）\n\n  \n\n快捷\n\n重启服务器\n    \n    \n    npm run dev\n\n  \n\n参考资料：\n\n  * Notion API 文档: [https://developers.notion.com/docs](https://developers.notion.com/docs)\n  * @notionhq/client npm 包: [https://www.npmjs.com/package/@notionhq/client](https://www.npmjs.com/package/@notionhq/client)\n  * 插件Cursor + Notion：\n\n[https://marketplace.visualstudio.com/items?itemName=LiamHz.cursor-plus-notion](https://marketplace.visualstudio.com/items?itemName=LiamHz.cursor-plus-notion)','\n',char(10)),NULL,'',NULL,1,0,0,0,13,'tech-tools/notion+cursor.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.004Z',NULL);
INSERT INTO posts VALUES(127,'notionpluspushplus-gong-zhong-hao-ren-wu-ti-xing-5674w990','notion+pushplus公众号任务提醒',replace('###**一、Notion 任务数据库创建与集成**####  1\. 创建任务数据库\n\n  1.**新建页面**：\n\n    * 打开 Notion 应用，点击左侧栏中的“+ New Page”按钮，创建一个新的页面。\n    * 将页面命名为“任务管理”或其他你喜欢的名字。\n\n  2.**添加表格视图**：\n\n    * 在新建页面中选择“Table”视图，这将创建一个默认的表格数据库。\n\n  3.**定义任务属性**：\n\n    * 添加以下常用属性：\n\n      ***任务名称**：描述任务内容。\n      ***截止日期**：设定任务的最后完成日期。\n      ***优先级**：设置任务的优先级（如“高”、“中”、“低”）。\n      ***状态**：跟踪任务进度（如“待办”、“进行中”、“已完成”）。\n      ***负责人**：指派任务给特定团队成员。\n\n#### 2\. 创建 Notion 集成并获取 Integration Token\n\n  1.**创建集成**：\n\n    * 访问 [Notion 集成页面](https://www.notion.so/my-integrations)。\n    * 点击“New integration”，创建一个新的集成。\n    * 填写集成名称（如“Task Reminder”），然后点击“Submit”。\n    * 创建完成后，系统会生成一个复杂的密钥（Integration Token），点击“Show”查看并记录这个密钥。\n\n  2.**将集成添加到数据库**：\n\n    * 打开你的任务管理数据库页面。\n    * 点击页面右上角的“...”或“Share”按钮，选择“Add connections”。\n    * 找到你创建的集成，将其添加到数据库中。\n\n###**二、PushPlus 账号注册与配置**####  1\. 注册 PushPlus 账号\n\n  1.**访问官网**：\n\n    * 打开 [PushPlus 官网](https://www.pushplus.plus/)，点击“注册”按钮。\n\n  2.**创建账号**：\n\n    * 使用微信扫码登录，完成注册。\n\n#### 2\. 创建群组并获取 Token\n\n  1.**创建群组**：\n\n    * 登录后，点击顶部导航栏的“一对多”消息，创建一个群组。\n    * 填写群组名称（如“任务提醒群”），群组编码需要是纯英文+数字。\n    * 创建完成后，系统会生成一个二维码，你可以扫码加入群组，并邀请其他成员加入。\n\n  2.**获取 Token**：\n\n    * 在 PushPlus 管理页面，点击“一对一推送”或“一对多推送”，复制对应的 Token。\n\n###**三、GitHub 部署项目代码**####  1\. 创建 GitHub 仓库\n\n  1.**登录 GitHub**：\n\n    * 打开 [GitHub 官网](https://github.com/)，登录你的账号。\n\n  2.**创建仓库**：\n\n    * 点击右上角的“+”按钮，选择“New repository”。\n    * 填写仓库名称（如“notion-pushplus-reminder”），并选择公开或私有。\n\n#### 2\. 配置 GitHub Actions 自动部署\n\n  1.**创建**`**.github/workflows**`**文件夹**：\n\n    * 在你的项目根目录下创建 `.github/workflows` 文件夹。\n\n  2.**添加部署脚本**：\n\n    * 在 `.github/workflows` 文件夹中创建一个 YAML 文件（如 `deploy.yml`），并添加以下内容：\n\nyaml复制\n    \n    \n    name: Deploy\n    on:\n      push:\n        branches:\n          - main\n    jobs:\n      build:\n        runs-on: ubuntu-latest\n        steps:\n          - uses: actions/checkout@v2\n          - name: Set up Node.js\n            uses: actions/setup-node@v2\n            with:\n              node-version: ''14''\n          - name: Install dependencies\n            run: npm install\n          - name: Run tests\n            run: npm test\n          - name: Deploy to server\n            run: npm run deploy\n\n    * 根据你的项目需求，调整上述脚本。\n\n  3.**配置环境变量**：\n\n    * 在 GitHub 仓库的“Settings”->“Secrets”中添加以下环境变量：\n\n      * `NOTION_TOKEN`：你的 Notion 集成 Token。\n      * `PUSHPLUS_TOKEN`：你的 PushPlus Token。\n      * 其他可能需要的环境变量（如数据库 ID 等）。\n\n#### 3\. 推送代码并触发部署\n\n  1.**提交代码**：\n\n    * 在本地终端中，运行以下命令将代码推送到 GitHub：\n\nbash复制\n    \n    \n    git add .\n    git commit -m "Initial commit"\n    git push origin main\n\n  2.**监控部署**：\n\n    * 在 GitHub 仓库中，点击“Actions”标签页，查看部署进度。\n\n###**四、测试与优化**1.**测试提醒功能**：\n\n    * 在 Notion 数据库中添加一条任务，确保任务信息能够通过 PushPlus 推送到公众号。\n    * 检查 PushPlus 的消息推送记录，确认消息是否成功发送。\n\n  2.**优化提醒逻辑**：\n\n    * 根据需求调整项目代码中的提醒逻辑，例如设置提醒时间、提醒频率等。\n\n通过以上步骤，你可以成功搭建一个基于 Notion 和 PushPlus 的任务提醒系统，并通过 GitHub Actions 实现自动部署。希望这个教程对你有所帮助！\n\n## 附录：我的 notion 数据库字段\n\n通过 notion api 查询数据库字段信息，查询结果如下：\n    \n    \n    ''name'': ''P0 重要紧急'', ''color'': ''red'', ''description'': ''P0''}, {''id'': ''h=\\Z'', ''name'': ''P1 重要不紧急'', ''color'': ''blue'', ''description'': None}, {''id'': ''<`Sy'', ''name'': ''P2 紧急不重要'', ''color'': ''brown'', ''description'': None}, {''id'': ''LiDV'', ''name'': ''P3 不重要不紧急'', ''color'': ''gray'', ''description'': None}]}}, ''任务类型'': {''id'': ''vZVW'', ''name'': ''任务类型'', ''type'': ''select'', ''select'': {''options'': [{''id'': ''7f18fac4-5c65-4dca-b8d0-92984463e12b'', ''name'': ''家庭生活'', ''color'': ''purple'', ''description'': None}, {''id'': ''cfbc9b69-e23e-4cd1-94fe-d4fe26818d1d'', ''name'': ''社交'', ''color'': ''blue'', ''description'': None}, {''id'': ''4eb1fd95-1211-4aab-be55-052c73cb9501'', ''name'': ''个人成长'', ''color'': ''red'', ''description'': None}, {''id'': ''a514dcce-1605-4b89-8b91-3d4c8530953f'', ''name'': ''工作'', ''color'': ''yellow'', ''description'': None}]}}, ''创建者'': {''id'': ''wA%3Cq'', ''name'': ''创建者'', ''type'': ''created_by'', ''created_by'': {}}, ''状态'': {''id'': ''~W%5C%60'', ''name'': ''状态'', ''type'': ''status'', ''status'': {''options'': [{''id'': ''a0438e1b-719f-4c03-95f2-17c6e0bb097d'', ''name'': ''还未开始'', ''color'': ''red'', ''description'': None}, {''id'': ''gjoD'', ''name'': ''进行中'', ''color'': ''blue'', ''description'': None}, {''id'': ''b81e1b11-7200-43bc-940d-9c361936a670'', ''name'': ''已完成'', ''color'': ''green'', ''description'': None}], ''groups'': [{''id'': ''72331709-9ef5-4913-9efd-8acdea25036e'', ''name'': ''To-do'', ''color'': ''gray'', ''option_ids'': [''a0438e1b-719f-4c03-95f2-17c6e0bb097d'']}, {''id'': ''b7cd0252-5a51-4a04-811b-dfb8a1680013'', ''name'': ''In progress'', ''color'': ''blue'', ''option_ids'': [''gjoD'']}, {''id'': ''23d8eb0d-fa9b-4f2d-8244-5d1a77f59a4e'', ''name'': ''Complete'', ''color'': ''green'', ''option_ids'': [''b81e1b11-7200-43bc-940d-9c361936a670'']}]}}, ''任务名称'': {''id'': ''title'', ''name'': ''任务名称'', ''type'': ''title'', ''title'': {}}}, ''parent'': {''type'': ''page_id'', ''page_id'': ''192ed4b7-aaea-80f0-b95f-c938de278bf8''}, ''url'': ''https://www.notion.so/192ed4b7aaea81859bbbf3ad4ea54b56'', ''public_url'': None, ''archived'': False, ''in_trash'': False, ''request_id'': ''4326727c-0a8f-41b2-86fc-a83f0e600619''}\n\n任务提醒\n\n张三今日待处理任务2条\n\n任务1: 准备周会 [工作] P0 重要紧急 截止日期: 2024-02-10\n\n任务2: 写周报 [工作] P1 重要不紧急 截止日期: 2024-02-11\n\n李四今日待处理任务1条\n\n任务1: 客户会议 [工作] P0 重要紧急 截止日期: 2024-02-10\n\n  1. notion的Integration Token：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\n  2. Notion 页面链接：[https://www.notion.so/daboss01/192ed4b7aaea81859bbbf3ad4ea54b56?v=192ed4b7aaea8133a1be000ce6312603](https://www.notion.so/daboss01/192ed4b7aaea81859bbbf3ad4ea54b56?v=192ed4b7aaea8133a1be000ce6312603)\n  3. pushplus 的token：3cfcadc8fcf744769292f0170e724ddb','\n',char(10)),NULL,'',NULL,1,0,0,0,27,'tech-tools/notion+pushplus公众号任务提醒.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.004Z',NULL);
INSERT INTO posts VALUES(130,'yi-xie-diao-yan','一些调研',replace('# 1\. 废旧网\n\n需要会员，每周有查看次数限制\n\n点击查看公告，内容如下：\n    \n    \n    中铁十一局城轨公司武汉地铁10号线钢都花园站废钢筋头处置询价竞拍\n    我要报名\n    销售单位：中铁十一局集团城市轨道工程有限公司\n    货品所在地：湖北省 武汉市 洪山区\n    \n    竞价时间：2025-03-03 12:30:00 ~ 2025-03-03 16:00:00\n    \n    中国铁建循环物资交易平台：https://re.crccep.cn/#/reuse/bidInfo','\n',char(10)),NULL,'',NULL,1,0,0,0,2,'tech-tools/一些调研.md',NULL,NULL,'2025-02-27T00:00:00.000Z','2025-05-07T15:19:47.006Z',NULL);
INSERT INTO posts VALUES(131,'zai-macos-shang-qing-song-bu-shu-docker-xiang-xi-an-zhuang-yu-pei-zhi-b-5674to9g','在 macOS 上轻松部署 Docker：详细安装与配置步骤',replace('Docker作为一种流行的容器化技术，为开发者提供了一种高效、便捷的方式来打包、分发和运行应用程序，确保其在不同环境中的一致性。对于macOS用户来说，部署Docker同样简单易行。本文将详细介绍如何在macOS上安装和配置Docker，帮助你快速上手。\n\n## 一、Docker简介：为何选择Docker\n\nDocker是一个开源平台，基于Linux容器（LXC）技术，通过将应用程序及其所有依赖项封装到一个容器中，确保应用在不同环境中运行的一致性。其主要优势如下：\n\n  1.**环境一致性**：无论是在开发、测试还是生产环境中，Docker都能保证应用程序的一致性，避免“在我的机器上可以运行”的问题。\n  2.**轻量级**：与传统虚拟机相比，Docker容器占用的资源更少，启动速度更快，能更高效地利用系统资源。\n  3.**易于管理**：借助Docker Compose等工具，可以轻松管理多容器应用，简化了开发和部署流程。\n  4.**跨平台支持**：Docker支持在多种操作系统上运行，包括macOS、Windows和Linux，具有良好的兼容性。\n\n## 二、在macOS上安装Docker\n\n在macOS上安装Docker主要有两种方式：通过Docker Desktop安装和使用Homebrew安装。以下是详细步骤：\n\n### （一）通过Docker Desktop安装\n\nDocker Desktop是Docker官方为macOS提供的图形化界面工具，安装过程非常简单，适合初学者和大多数用户。\n\n  1.**下载Docker Desktop*** 访问Docker官网（[https://www.docker.com/products/docker-desktop](https://www.docker.com/products/docker-desktop)）。\n    * 在页面上选择macOS版本，点击“Download for Mac”按钮。\n\n  2.**安装Docker Desktop*** 下载完成后，双击下载的`.dmg`文件，按照提示将Docker图标拖动到应用程序文件夹中。\n    * 安装完成后，点击打开Docker Desktop。\n\n  3.**启动Docker*** 打开Docker后，你可能需要授予Docker一些权限，例如安装系统工具。按照提示完成操作。\n    * 初次启动时，Docker需要一些时间来初始化，直到Docker图标出现在菜单栏，表示Docker已经启动并准备就绪。\n\n  4.**验证安装*** 打开终端，输入以下命令来验证Docker是否安装成功：\n\n    \n    \n    docker --version\n\n如果安装成功，你将看到Docker的版本信息。\n\n### （二）使用命令行工具/Homebrew安装\n\n如果你更习惯使用命令行工具，或者希望通过Homebrew来管理你的开发环境，可以通过Homebrew安装Docker。\n\n  1.**安装Homebrew*** 如果你还没有安装Homebrew，可以通过以下命令来安装：\n\n    \n    \n    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n\n  2.**安装Docker*** 使用以下命令通过Homebrew安装Docker：\n\n    \n    \n    brew install --cask docker\n\n  3.**启动Docker*** 安装完成后，可以在应用程序中找到Docker图标，点击启动。\n\n  4.**验证安装*** 同样，通过以下命令验证Docker是否安装成功：\n\n    \n    \n    docker --version\n\n## 三、Docker的初始配置与运行\n\n安装完成后，进行一些基础配置以确保Docker的正常运行。\n\n### （一）配置Docker的资源\n\nDocker Desktop默认会为容器分配一定的CPU、内存和磁盘空间。如果你的开发环境需要更多资源，可以根据实际需求调整这些设置。\n\n  1. 点击Docker菜单栏图标，选择**Preferences**。\n  2. 在**Resources**标签中，调整CPU、内存、磁盘空间等资源的分配。根据你的项目需求，合理分配这些资源。\n\n### （二）测试Docker是否正常运行\n\n完成配置后，进行简单的测试，确保Docker能够正常运行。\n\n  1.**运行一个简单的容器*** 在终端中输入以下命令来运行一个简单的Docker容器：\n\n    \n    \n    docker run hello-world\n\n该命令会下载一个`hello-world`镜像，并启动一个容器。如果一切正常，你将看到类似以下的输出：\n    \n    \n    Hello from Docker!\n    This message shows that your installation appears to be working correctly.\n\n  2.**查看正在运行的容器*** 输入以下命令查看当前正在运行的Docker容器：\n\n    \n    \n    docker ps\n\n  3.**查看所有Docker镜像*** 输入以下命令查看本地存储的Docker镜像：\n\n    \n    \n    docker images\n\n## 四、常见问题及解决方案\n\n尽管Docker提供了很多便捷的功能，但在安装和使用过程中，可能会遇到一些常见问题。以下是一些解决方案：\n\n### （一）Docker Desktop不启动\n\n如果Docker Desktop无法启动，可以尝试以下方法：\n\n  * 检查系统是否满足Docker的硬件要求，例如是否启用了虚拟化。\n  * 尝试重新启动Docker或重新安装Docker Desktop。\n\n### （二）Docker容器无法连接网络\n\n如果容器无法访问网络，可能是由于网络配置的问题。可以通过以下命令重启Docker网络：\n    \n    \n    docker network prune\n\n然后重启Docker服务。\n\n### （三）Docker占用过多的内存\n\n如果你发现Docker占用过多的内存，可以通过调整Docker Desktop中的**Resources**设置，限制内存的使用量。\n\n## 五、总结与最佳实践\n\n在macOS上安装和配置Docker是一个简单而高效的过程。通过Docker，你可以轻松地在本地开发环境中运行和管理容器化应用程序。以下是最佳实践建议：\n\n  1.**定期更新Docker版本**：确保安全性和稳定性。\n  2.**使用Docker Compose管理多容器应用**：避免手动管理多个容器，简化开发和部署流程。\n  3.**配置合适的资源分配**：避免Docker占用过多的系统资源，确保系统运行流畅。\n  4.**了解Docker镜像的大小**：避免下载过大的镜像导致磁盘空间不足。','\n',char(10)),NULL,'',NULL,1,0,0,0,16,'tech-tools/在 macOS 上轻松部署 Docker：详细安装与配置步骤.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.007Z',NULL);
INSERT INTO posts VALUES(132,'ru-he-huo-qu-notion-shu-ju-ku-zi-duan-xin-xi','如何获取Notion数据库字段信息',replace('# 如何获取Notion数据库字段信息\n\n## 一、准备工作\n\n在开始之前，你需要准备以下内容：\n\n1. **Notion账户**：确保你有一个Notion账户，并且该账户拥有目标数据库的访问权限。\n2. **Notion集成**：创建一个Notion集成，获取集成的密钥（Integration Secret Token）。具体步骤如下：\n\n   - 打开Notion工作区，点击左上角的头像，选择"设置与成员"。\n   - 在左侧菜单中选择"集成"，点击"添加集成"。\n   - 创建一个新的集成，例如命名为"Database Info Getter"，并保存。\n   - 复制生成的集成密钥（Token），后续会用到。\n\n3. **数据库ID**：获取目标数据库的ID。方法如下：\n\n   - 打开目标数据库页面，点击右上角的"分享"按钮。\n   - 点击"复制链接"，然后在浏览器地址栏中查看链接。\n   - 链接格式类似于 `https://www.notion.so/your_workspace_name/your_database_id`，其中 `your_database_id` 即为数据库ID。\n\n## 二、使用命令行语句获取字段信息\n\n### 1. 安装curl工具（如果尚未安装）\n\ncurl是一个常用的命令行工具，用于发送网络请求。在大多数Linux和macOS系统中，curl已经预装。如果你使用的是Windows系统，可以通过以下方式安装：\n\n- **Windows 10及以上版本**：curl已经内置，直接在命令提示符中使用即可。\n- **Windows 7及以下版本**：可以下载curl的Windows版本，从[官方下载页面](https://curl.se/windows/)获取安装文件，并安装到系统路径中。\n\n### 2. 构造curl命令\n\n在命令行中输入以下命令，将 `<your_integration_token>` 替换为你的Notion集成密钥，将 `<your_database_id>` 替换为目标数据库的ID：\n\n```bash\ncurl -X GET "https://api.notion.com/v1/databases/<your_database_id>" \\n     -H "Authorization: Bearer <your_integration_token>" \\n     -H "Notion-Version: 2022-06-28"\n```\n\n### 3. 解析返回的字段信息\n\n运行上述命令后，你会收到一个JSON格式的响应。其中，字段信息位于 `properties` 字段下。例如，返回的数据可能如下所示：\n\n```json\n{\n    "object": "database",\n    "id": "your_database_id",\n    "created_time": "2023-01-01T00:00:00.000Z",\n    "last_edited_time": "2023-01-01T00:00:00.000Z",\n    "title": [\n        {\n            "type": "text",\n            "text": {\n                "content": "Your Database Title",\n                "link": null\n            }\n        }\n    ],\n    "properties": {\n        "Name": {\n            "id": "name_field_id",\n            "type": "title",\n            "title": {}\n        },\n        "Status": {\n            "id": "status_field_id",\n            "type": "select",\n            "select": {\n                "options": [\n                    {\n                        "id": "option1_id",\n                        "name": "Option 1",\n                        "color": "red"\n                    },\n                    {\n                        "id": "option2_id",\n                        "name": "Option 2",\n                        "color": "blue"\n                    }\n                ]\n            }\n        },\n        "Date": {\n            "id": "date_field_id",\n            "type": "date",\n            "date": {}\n        }\n    }\n}\n```\n\n从 `properties` 字段中，你可以提取字段名（如 `Name`、`Status`、`Date`）、字段类型（如 `title`、`select`、`date`）、选项值和选项内容（对于选择类型的字段）等信息。\n\n## 三、使用Postman获取字段信息\n\n### 1. 安装并打开Postman\n\n如果你尚未安装Postman，可以从[Postman官方网站](https://www.postman.com/downloads/)下载并安装。\n\n### 2. 创建一个新的请求\n\n1. 打开Postman，点击“New”按钮，选择“Request”。\n2. 在弹出的窗口中，输入请求的名称，例如“Get Notion Database Fields”，然后点击“Save”。\n3. 在请求的配置区域，选择请求方法为GET。\n\n在“Enter request URL”框中输入以下URL，将 `<your_database_id>` 替换为目标数据库的ID：\n\n`https://api.notion.com/v1/databases/<your_database_id>`\n\n### 3. 添加请求头\n\n1. 点击“Headers”标签。\n2. 添加以下两个请求头：\n\n   - **Key**: Authorization，**Value**: Bearer `<your_integration_token>`（将 `<your_integration_token>` 替换为你的Notion集成密钥）。\n   - **Key**: Notion-Version，**Value**: 2022-06-28。\n\n### 4. 发送请求并查看响应\n\n1. 点击“Send”按钮，发送请求。\n2. 在响应区域中，你可以查看返回的JSON数据。\n3. 同样地，字段信息位于 `properties` 字段下。你可以通过Postman的“Pretty”或“Raw”视图来查看和解析这些信息。\n\n## 四、提取关键字段信息\n\n无论是通过命令行还是Postman获取的字段信息，你都可以提取以下关键内容：\n\n- **字段名**：字段的名称，例如 `Name`、`Status`。\n- **字段类型**：字段的类型，例如 `title`（标题）、`select`（单选）、`date`（日期）。\n- **选项值和选项内容**：对于选择类型的字段（如 `select` 或 `multi_select`），可以提取选项的名称和颜色等信息。\n\n你可以使用JSON解析工具（如在线JSON解析器或编程语言中的JSON解析库）来提取这些信息，并按照你的需求进行处理。\n\n## 五、注意事项\n\n1. **密钥安全**：不要将你的Notion集成密钥泄露给他人，避免未经授权的访问。\n2. **API版本**：确保在请求头中设置的 `Notion-Version` 与Notion官方支持的版本一致。如果版本过旧或过新，可能会导致请求失败。\n3. **请求频率限制**：Notion API对请求频率有一定的限制。如果频繁发送请求，可能会触发限制。注意合理安排请求频率。','\n',char(10)),NULL,'',NULL,1,0,0,0,19,'tech-tools/如何获取Notion数据库字段信息.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.007Z',NULL);
INSERT INTO posts VALUES(133,'chang-yong-gong-ju','常用工具','',NULL,'',NULL,1,0,0,0,1,'tech-tools/常用工具.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.007Z',NULL);
INSERT INTO posts VALUES(134,'shu-ju-ku-biao-jie-gou','数据库表结构',replace('# 1、 数据库表结构设计\n\n## 1.1 数据关系\n\n  1.**用户与账本**：每个用户至少有一个账本。\n  2.**账本与账目分类**：每个账本有一个且仅有一个账目分类。\n  3.**账本与交易记录**：每个账本可以有多个交易记录。\n  4.**交易记录与账目分类**：每个交易记录属于一个账目分类。\n  5.**账本与成员**：一个账本可以有多个成员。\n  6.**账本与管理员**：一个账本可以有多个管理员。\n  7.**账本与创建者**：一个账本有一个创建者。\n\n![](/assets/images/shu-ju-ku-biao-jie-gou/image_42.svg)\n\n  \n\n# 1.2 数据库表明细\n    \n    \n    /*** 数据库表结构定义\n     */\n    \n    // 用户表 (user)\n    const userSchema = {\n      id: Number,           // 自增主键\n      user_id: String,      // 业务主键\n      openid: String,       // 微信openid\n      user_nickname: String,// 用户昵称\n      user_avatar: String,  // 用户头像\n      user_gender: Number,  // 性别 0-未知 1-男 2-女\n      user_mobile: String,  // 手机号（可选）\n      user_last_login: Date,// 最近登录时间\n      create_time: Date,    // 创建时间\n      update_time: Date     // 更新时间\n    }\n    \n    // 账本表 (account_book)\n    const accountBookSchema = {\n      id: Number,           // 自增主键\n      accountBook_id: String,      // 业务主键\n      user_id: String,      // 创建者ID\n      user_nickname: String,// 创建者昵称\n      accountBook_name: String,    // 账本名称\n      accountBook_type: String,    // 账本类型：''personal''个人/''shared''共享\n      is_default: Boolean,// 是否默认账本\n      create_time: Date,\n      update_time: Date\n    }\n    \n    // 账本成员表 (account_book_member)\n    const accountBookMemberSchema = {\n      id: Number,           // 自增主键\n      member_id: String,    // 业务主键\n      accountBook_id: String,      // 关联账本ID\n      accountBook_name: String,    // 账本名称\n      user_id: String,      // 成员用户ID\n      user_nickname: String,// 成员昵称\n      member_role: String,  // 角色：''creator''创建者/''member''成员\n      member_relation: String, // 与创建者关系\n      create_time: Date,\n      update_time: Date\n    }\n    \n    // 账目分类表 (account_category)\n    const accountCategorySchema = {\n      id: Number,           // 自增主键\n      accountCategory_id: String,  // 业务主键\n      accountBook_id: String,      // 关联账本ID\n      accountBook_name: String,    // 账本名称\n      parent_id: String,    // 父分类ID（为空表示一级分类）\n      parent_name: String,  // 父分类名称（为空表示一级分类）\n      accountCategory_name: String,// 分类名称\n      accountCategory_type: String,// 类型：''expense''支出/''income''收入\n      accountCategory_level: Number, // 分类层级：1-一级分类，2-二级分类\n      accountCategory_icon: String,// 图标\n      accountCategory_order: Number,// 排序\n      is_default: Boolean,  // 是否默认分类\n      is_system: Boolean,   // 是否系统预置（系统预置不允许删除）\n      is_valid: Boolean,    // 是否有效（软删除）\n      create_time: Date,\n      update_time: Date\n    }\n    \n    // 交易记录表 (transaction_record)\n    const transactionRecordSchema = {\n      id: Number,           // 自增主键\n      transaction_id: String,// 业务主键\n      accountBook_id: String,      // 关联账本ID\n      accountBook_name: String,    // 账本名称\n      user_id: String,      // 记录用户ID\n      user_nickname: String,// 记录用户昵称\n      transaction_type: String,   // 类型：''expense''支出/''income''收入\n      transaction_amount: Number, // 金额\n      accountCategory_id: String,  // 关联分类ID\n      accountCategory_name: String,// 分类名称\n      parent_accountCategory_id: String, // 父分类ID\n      parent_accountCategory_name: String, // 父分类名称\n      transaction_date: Date,     // 交易日期\n      transaction_desc: String,   // 描述\n      transaction_images: Array,  // 票据图片\n      transaction_location: String,// 位置\n      create_time: Date,\n      update_time: Date\n    }\n    \n    // 账本统计表 (account_book_stats)\n    const accountBookStatsSchema = {\n      id: Number,           // 自增主键\n      stats_id: String,     // 业务主键\n      accountBook_id: String,      // 关联账本ID\n      accountBook_name: String,    // 账本名称\n      stats_year: Number,   // 年份\n      stats_month: Number,  // 月份（可选）\n      stats_income: Number, // 收入总额\n      stats_expense: Number,// 支出总额\n      stats_balance: Number,// 结余\n      stats_category: Array,// 分类统计\n      create_time: Date,\n      update_time: Date\n    }\n    \n    // 交易记录导入表 (transaction_import)\n    const transactionImportSchema = {\n      id: Number,           // 自增主键\n      import_id: String,    // 业务主键\n      accountBook_id: String,      // 关联账本ID\n      accountBook_name: String,    // 账本名称\n      user_id: String,      // 导入用户ID\n      user_nickname: String,// 导入用户昵称\n      import_type: String,  // 导入类型：''wechat''/''alipay''/''excel''/''csv''\n      import_file: String,  // 文件地址\n      import_status: String,// 状态：''pending''/''processing''/''success''/''failed''\n      import_result: Object,// 导入结果\n      create_time: Date,\n      update_time: Date\n    }\n    \n    const TABLE_NAMES = {\n      USER: ''user'',\n      ACCOUNT_BOOK: ''account_book'',\n      ACCOUNT_BOOK_MEMBER: ''account_book_member'',\n      ACCOUNT_CATEGORY: ''account_category'',\n      TRANSACTION_RECORD: ''transaction_record'',\n      ACCOUNT_BOOK_STATS: ''account_book_stats''\n    }\n    \n    module.exports = {\n      userSchema,\n      accountBookSchema,\n      accountBookMemberSchema,\n      accountCategorySchema,\n      transactionRecordSchema,\n      accountBookStatsSchema,\n      transactionImportSchema,\n      \n      // 表名常量\n      TABLE_NAMES\n    }\n\n# 2、关键数据流程\n\n## 2.1 用户登陆流程\n\n![](/assets/images/shu-ju-ku-biao-jie-gou/image_45.svg)\n\n## 2.2 小程序初始化流程\n\n![](/assets/images/shu-ju-ku-biao-jie-gou/image_44.svg)\n\n## 2.3 记账模块功能\n\n### 2.3.1 记账流程\n\n![](/assets/images/shu-ju-ku-biao-jie-gou/image_43.svg)\n\n  \n\n### 2.3.1 账本管理流程\n    \n    \n    graph TD  \n        A[账本操作] --> B[创建账本]  \n    		B[创建账本]--> G[邀请他人加入账本]  \n        A --> C[设置默认账本]  \n        A --> D[编辑账本]--> G[邀请他人加入账本]  \n        A --> E[删除账本]  \n        C --> F[更新其他账本为非默认]  \n    		E[删除账本]--> Q[是否存在交易记录]  \n    		Q[是否存在交易记录]-->|存在| x[不允许删除]  \n    		Q[是否存在交易记录]-->|不存在| Y[允许删除]\n\n## 2.3.3 账目分类管理流程\n\n![](/assets/images/shu-ju-ku-biao-jie-gou/image_46.svg)\n\n所有表都采用软删除策略（`is_valid` 字段），保证数据的可追溯性。同时，关键操作都有相应的错误处理和数据验证机制。\n\n  \n\n  \n\n# 3 数据初始化设计\n\n## 3.1 分类数据初始化\n    \n    \n    ### 默认账本关联的分类数据\n    // 支出类主分类\n    expense: [\n      { id: 1, name: ''餐饮'', icon_url_url: ''🍲'', parentId: null },\n      { id: 2, name: ''交通'', icon_url: ''🚗'', parentId: null },\n      { id: 3, name: ''购物'', icon_url: ''🛒'', parentId: null },\n      { id: 4, name: ''家庭日常'', icon_url: ''🏠'', parentId: null },\n      { id: 5, name: ''娱乐'', icon_url: ''🎮'', parentId: null },\n      { id: 6, name: ''居住'', icon_url: ''🏘️'', parentId: null },\n      { id: 7, name: ''通讯'', icon_url: ''📱'', parentId: null },\n      { id: 8, name: ''医疗'', icon_url: ''🏥'', parentId: null },\n      { id: 9, name: ''学习'', icon_url: ''📚'', parentId: null },\n      { id: 10, name: ''其他'', icon_url: ''📝'', parentId: null },\n    \n      // 餐饮子分类\n      { id: 101, name: ''餐饮'', icon_url: ''🍲'', parentId: 1 },\n      { id: 102, name: ''三餐'', icon_url: ''🍽️'', parentId: 1 },\n      { id: 103, name: ''食材'', icon_url: ''🥬'', parentId: 1 },\n      { id: 104, name: ''水果'', icon_url: ''🍎'', parentId: 1 },\n      { id: 105, name: ''零食'', icon_url: ''🍪'', parentId: 1 },\n    \n      // 交通子分类\n      { id: 201, name: ''交通'', icon_url: ''🚗'', parentId: 2 },\n      { id: 202, name: ''公交地铁'', icon_url: ''🚇'', parentId: 2 },\n      { id: 203, name: ''打车'', icon_url: ''🚕'', parentId: 2 },\n      { id: 204, name: ''共享单车'', icon_url: ''🚲'', parentId: 2 },\n      { id: 205, name: ''加油'', icon_url: ''⛽'', parentId: 2 },\n      { id: 206, name: ''停车费'', icon_url: ''🅿️'', parentId: 2 },\n      { id: 207, name: ''车辆维修'', icon_url: ''🔧'', parentId: 2 },\n    \n      // 购物子分类\n      { id: 301, name: ''购物'', icon_url: ''🛒'', parentId: 3 },\n      { id: 302, name: ''日用品'', icon_url: ''🧴'', parentId: 3 },\n      { id: 303, name: ''电子产品'', icon_url: ''📱'', parentId: 3 },\n      { id: 304, name: ''家居用品'', icon_url: ''🪑'', parentId: 3 },\n      { id: 305, name: ''化妆品'', icon_url: ''💄'', parentId: 3 },\n      { id: 306, name: ''礼品'', icon_url: ''🎁'', parentId: 3 },\n      { id: 307, name: ''服饰'', icon_url: ''👔'', parentId: 3 },\n    \n      // 家庭日常子分类\n      { id: 401, name: ''生活用品'', icon_url: ''🧹'', parentId: 4 },\n      { id: 402, name: ''清洁用品'', icon_url: ''🧼'', parentId: 4 },\n      { id: 403, name: ''个护用品'', icon_url: ''🧴'', parentId: 4 },\n      { id: 404, name: ''家居维修'', icon_url: ''🔨'', parentId: 4 },\n    \n      // 娱乐子分类\n      { id: 501, name: ''电影'', icon_url: ''🎬'', parentId: 5 },\n      { id: 502, name: ''游戏'', icon_url: ''🎮'', parentId: 5 },\n      { id: 503, name: ''运动'', icon_url: ''⚽'', parentId: 5 },\n      { id: 504, name: ''旅游'', icon_url: ''✈️'', parentId: 5 },\n      { id: 505, name: ''聚会'', icon_url: ''🎉'', parentId: 5 },\n      { id: 506, name: ''宠物'', icon_url: ''🐱'', parentId: 5 },\n    \n      // 居住子分类\n      { id: 601, name: ''房租'', icon_url: ''🏠'', parentId: 6 },\n      { id: 602, name: ''水费'', icon_url: ''💧'', parentId: 6 },\n      { id: 603, name: ''电费'', icon_url: ''⚡'', parentId: 6 },\n      { id: 604, name: ''燃气费'', icon_url: ''🔥'', parentId: 6 },\n      { id: 605, name: ''物业费'', icon_url: ''🏢'', parentId: 6 },\n      { id: 606, name: ''维修'', icon_url: ''🔧'', parentId: 6 },\n    \n      // 通讯子分类\n      { id: 701, name: ''话费'', icon_url: ''📱'', parentId: 7 },\n      { id: 702, name: ''网费'', icon_url: ''🌐'', parentId: 7 },\n      { id: 703, name: ''视频会员'', icon_url: ''🎬'', parentId: 7 },\n      { id: 704, name: ''软件订阅'', icon_url: ''💻'', parentId: 7 },\n    \n      // 医疗子分类\n      { id: 801, name: ''门诊'', icon_url: ''👨‍⚕️'', parentId: 8 },\n      { id: 802, name: ''住院'', icon_url: ''🏥'', parentId: 8 },\n      { id: 803, name: ''药品'', icon_url: ''💊'', parentId: 8 },\n      { id: 804, name: ''保健品'', icon_url: ''🌿'', parentId: 8 },\n      { id: 805, name: ''医疗保险'', icon_url: ''📋'', parentId: 8 },\n    \n      // 学习子分类\n      { id: 901, name: ''学费'', icon_url: ''🎓'', parentId: 9 },\n      { id: 902, name: ''书籍'', icon_url: ''📚'', parentId: 9 },\n      { id: 903, name: ''文具'', icon_url: ''✏️'', parentId: 9 },\n      { id: 904, name: ''培训'', icon_url: ''📖'', parentId: 9 },\n      { id: 905, name: ''考试'', icon_url: ''📝'', parentId: 9 },\n    \n      // 其他子分类\n      { id: 1001, name: ''其他支出'', icon_url: ''📝'', parentId: 10 }\n    ],\n    \n    // 收入类\n    income: [\n      { id: 21, name: ''工资'', icon_url: ''💰'', parentId: null },\n      { id: 22, name: ''奖金'', icon_url: ''🎁'', parentId: null },\n      { id: 23, name: ''理财'', icon_url: ''📈'', parentId: null },\n      { id: 24, name: ''报销'', icon_url: ''📑'', parentId: null },\n      { id: 25, name: ''其他'', icon_url: ''📝'', parentId: null },\n    \n      // 工资子分类\n      { id: 2101, name: ''基本工资'', icon_url: ''💵'', parentId: 21 },\n      { id: 2102, name: ''加班工资'', icon_url: ''⏰'', parentId: 21 },\n      { id: 2103, name: ''提成'', icon_url: ''💹'', parentId: 21 },\n    \n      // 奖金子分类\n      { id: 2201, name: ''年终奖'', icon_url: ''🎊'', parentId: 22 },\n      { id: 2202, name: ''季度奖'', icon_url: ''🎯'', parentId: 22 },\n      { id: 2203, name: ''项目奖金'', icon_url: ''🎖️'', parentId: 22 },\n      { id: 2204, name: ''节日福利'', icon_url: ''🎉'', parentId: 22 },\n    \n      // 理财子分类\n      { id: 2301, name: ''基金收益'', icon_url: ''📊'', parentId: 23 },\n      { id: 2302, name: ''股票收益'', icon_url: ''📈'', parentId: 23 },\n      { id: 2303, name: ''利息收入'', icon_url: ''💱'', parentId: 23 },\n      { id: 2304, name: ''其他理财'', icon_url: ''💰'', parentId: 23 },\n    \n      // 报销子分类\n      { id: 2401, name: ''交通报销'', icon_url: ''🚗'', parentId: 24 },\n      { id: 2402, name: ''餐饮报销'', icon_url: ''🍽️'', parentId: 24 },\n      { id: 2403, name: ''住宿报销'', icon_url: ''🏨'', parentId: 24 },\n      { id: 2404, name: ''其他报销'', icon_url: ''📝'', parentId: 24 },\n    \n      // 其他收入子分类\n      { id: 2501, name: ''其他收入'', icon_url: ''📝'', parentId: 25 }\n    ]\n\n## 3.2 资产分类主数据\n\n### 3.2.1 资产分类主数据\n    \n    \n    # 资产分类\n    \n    ## 资产\n    ### 流动资产\n    - 现金\n    - 银行活期\n    - 货币基金\n    - 其他流动资产\n    \n    ### 固定资产\n    - 自用房产\n    - 自用汽车\n    - 投资房产\n    - 金银珠宝\n    - 收藏品\n    - 数码电子\n    - 其他固定资产\n    \n    ### 投资理财\n    - 基金\n    - 股票\n    - 银行理财\n    - 投资保险\n    - 加密货币\n    - 其他投资理财\n    \n    ### 应收款\n    - 借给他人的钱\n    - 报销待收款\n    - 投资待收款\n    - 其他应收款\n    \n    ## 负债\n    ### 流动负债\n    - 信用卡\n    - 小额消费贷\n    - 其他短期消费性负债\n    \n    ### 投资负债\n    - 投资房产按揭贷款\n    - 股票配资/融资\n    - 其他投资负债\n    \n    ### 固定负债\n    - 自住房产按揭贷款\n    - 汽车按揭贷款\n    - 教育贷款\n    - 其他固定负债\n    \n\n### 3.2.2 财务表设计\n\n  \n\n    \n    \n    // 家庭表 Family\n    const Family = {\n      _id: String,          // MongoDB自动生成的ID\n      family_id: String,    // 业务ID，格式: "family_时间戳"\n      name: String,         // 家庭名称\n      description: String,  // 家庭描述\n      avatar_url: String,   // 家庭头像\n      owner_id: String,     // 家庭创建者user_id\n      member_count: Number, // 成员数量\n      create_time: String,  // 创建时间，ISO格式\n      update_time: String   // 更新时间，ISO格式\n    }\n    \n    // 家庭成员表 FamilyMember\n    const FamilyMember = {\n      _id: String,          // MongoDB自动生成的ID\n      member_id: String,    // 业务ID，格式: "member_时间戳"\n      family_id: String,    // 关联的家庭ID\n      user_id: String,      // 关联的用户ID\n      nickname: String,     // 成员昵称\n      avatar_url: String,   // 成员头像\n      role: String,         // 角色：''owner''|''admin''|''member''\n      is_valid: Boolean,    // 是否有效\n      create_time: String,  // 创建时间，ISO格式\n      update_time: String   // 更新时间，ISO格式\n    }\n    \n    // 资产记录表 Asset\n    const Asset = {\n      _id: String,                // MongoDB自动生成的ID\n      asset_id: String,           // 业务ID，格式: "asset_时间戳"\n      family_id: String,          // 关联的家庭ID\n      member_id: String,          // 关联的成员ID\n      category_level1: String,    // 资产一级分类：''asset''|''liability''\n      category_level2: String,    // 资产二级分类\n      category_level3: String,    // 资产三级分类\n      name: String,              // 资产名称\n      remark: String,            // 备注说明\n      initial_amount: Number,    // 投入本金\n      start_amount: Number,      // 期初金额\n      end_amount: Number,        // 期末金额\n      record_date: String,       // 记账日期，格式：YYYY-MM-DD\n      is_valid: Boolean,         // 是否有效\n      create_time: String,       // 创建时间，ISO格式\n      update_time: String        // 更新时间，ISO格式\n    }\n    \n    // 数据关联关系\n    const Relations = {\n      // 家庭与用户的关系：一对多\n      FamilyUser: {\n        from: ''family'',\n        localField: ''owner_id'',\n        foreignField: ''user_id'',\n        as: ''owner''\n      },\n    \n      // 家庭成员与家庭的关系：多对一\n      MemberFamily: {\n        from: ''family_member'',\n        localField: ''family_id'',\n        foreignField: ''family_id'',\n        as: ''members''\n      },\n    \n      // 家庭成员与用户的关系：一对一\n      MemberUser: {\n        from: ''family_member'',\n        localField: ''user_id'',\n        foreignField: ''user_id'',\n        as: ''user''\n      },\n    \n      // 资产与家庭成员的关系：多对一\n      AssetMember: {\n        from: ''asset'',\n        localField: ''member_id'',\n        foreignField: ''member_id'',\n        as: ''assets''\n      }\n    }','\n',char(10)),NULL,'',NULL,1,0,0,0,71,'tech-tools/数据库表结构.md',NULL,NULL,'2025-05-07T00:00:00.000Z','2025-05-07T15:19:47.008Z',NULL);
INSERT INTO posts VALUES(135,'yu-que-wen-dang-neng-li-zhi-chi-zheng-li','语雀文档能力支持整理',replace('### 基础功能\n\n  1.**图片**：插入图片。\n  2.**表格**：创建和管理表格。\n  3.**附件**：添加附件。\n  4.**状态**：标记和管理文档状态。\n\n### 画板类功能\n\n  1.**画板**：可以插入图形、连线和图片等。\n  2.**思维导图**：用于梳理信息和头脑风暴。\n  3.**流程图**：用于绘制流程。\n\n### 程序员专区功能\n\n  1.**代码块**：支持多种语言和主题切换。\n  2.**公式**：支持 LaTeX 语法。\n  3.**UML图**：支持用例图、类图、时序图等。\n  4.**文本绘图**：支持使用PlantUML、Mermaid等工具进行文本绘图，快捷指令为 `/wbht`。\n\n### 布局和样式\n\n  1.**高亮块**：使用彩色背景来高亮提示内容，快捷指令为 `/glk`。\n  2.**折叠块**：允许内容可折叠，快捷指令为 `/zdk`。\n  3.**分栏卡片**：使用分栏来组织页面内容。\n  4.**引用**：可以插入引用格式，快捷指令为 `/yy`。\n  5.**插入分割线**：用于在页面中添加分割线，快捷指令为 `/fgx`。\n  6.**表情**：使用emoji表情来表达情绪，快捷指令为 `/bq`。\n  7.**图册**：支持以轮播、平铺等方式展示多张图片，快捷指令为 `/tc`。\n\n### 小工具\n\n  1.**提及**：可以提及人和内容，使用`@`符号。\n  2.**语雀内容**：插入可访问的语雀内容，快捷指令为 `/yq`。\n  3.**日历**：使用日历添加日程，快捷指令为 `/rl`。\n  4.**日期**：插入日期，快捷指令为 `/rq`。\n  5.**投票**：发起投票活动，快捷指令为 `/toup`。\n  6.**打卡**：发起打卡活动，快捷指令为 `/dk`。\n  7.**加密文本**：支持设置密码访问，快捷指令为 `/jm`。\n\n### 嵌入本地文件\n\n  1.**本地文件*** 会员功能\n    * 支持 Office、PDF、Sketch 等\n    * 快捷指令：`/bdwj`\n\n  2.**本地音频*** 会员功能\n    * 音频导入\n    * 快捷指令：`/yp`\n\n  3.**本地视频*** 会员功能\n    * 视频导入\n    * 快捷指令：`/sp`\n\n### 嵌入的第三方服务\n\n  1.**高德地图*** 快捷指令：`/gddt`\n\n  2.**墨刀*** 快捷指令：`/md`\n\n  3.**Figma*** 快捷指令：`/fig`\n\n  4.**ProcessOn*** 快捷指令：`/pro`\n\n  5.**Canva*** 快捷指令：`/can`\n\n  6.**码上掘金*** 快捷指令：`/msjj`\n\n  7.**CodePen*** 快捷指令：`/cod`\n\n  8.**宜搭*** 快捷指令：`/yd`\n\n  9.**金数据*** 快捷指令：`/jsj`','\n',char(10)),NULL,'',NULL,1,0,0,0,7,'tech-tools/语雀文档能力支持整理.md',NULL,NULL,'2025-02-16T00:00:00.000Z','2025-05-07T15:19:47.008Z',NULL);
INSERT INTO posts VALUES(159,'fang-di-chan-xi-lie','房地产系列文章',replace('# 房地产系列文章\n\n这是一系列关于房地产投资的文章，详细介绍了房地产的基本概念、投资策略和风险管理。\n\n## 为什么要投资房地产\n\n房地产投资是一种非常稳定的投资方式，可以带来持续的现金流和潜在的资本增值。\n\n## 房地产投资的类型\n\n- 住宅房产\n- 商业房产\n- 工业房产\n- REITs（房地产投资信托）','\n',char(10)),NULL,'这是一系列关于房地产投资的文章，详细介绍了房地产的基本概念、投资策略和风险管理。','房地产投资系列文章，包含投资策略、风险分析和市场趋势',1,1,1,0,5,NULL,'https://example.com/images/real-estate.jpg',NULL,'2025-05-08T14:37:41.223Z','2025-05-08T14:37:41.223Z','2025-05-08T14:37:41.223Z');
INSERT INTO posts VALUES(160,'yi-wen-xiang-jie-fang-di-chan-tou-zi-7954qasq','一文详解房地产投资',replace('---\n\n## **房地产投资的ABC**\n房地产投资的分为直接投资和间接投资两大类。其中直接投资包括譬如购买房屋、办公楼或土地等，间接投资则涉及投资由房地产转化成的证券，如REITs。\n\n> 对个人投资人来讲，一定要区分是自住需求还是用来投资的。\n>\n\n如果是自住，它就带有很强的消费属性。如果是投资需求的话，我们就要看它整体的收益和风险是从哪里来的，它的 ABC 是什么？\n\n房地产的投资以及它的现金流跟通货膨胀有一定的正相关性。就是说当有通货膨胀出现时，房租大概率也会往上走，房子的价格也会往上走，这就造成了一个正相关性。那相对房地产而言，通胀跟债券投资或股票投资就是有一定的负相关性。\n\n> ### 直接投资房地产的贝塔收益（Beta）\n\n1、从房子底层逻辑来看，房地产投资的收益来源，土地、建筑材料、建筑工人、设计的成本等，这些都与通货膨胀有关。\n\n2、从房产资金结构来看，房地产投资的长期贝塔收益介于股票10%和债券6%之间\n\n> ### 直接投资房地产的（Alpha）\n\n> ### 超额收益\n\n房地产的贝塔收益就是看它的资本结构，而超额收益主要由供需不平衡决定。\n\n影响房地产供给的因素： 1、土地供给 2、需求：是不是人口流入？人口结构如何？\n\n> ### 直接投资房地产的成本（Cost）\n\n1、交易成本高。 中国投资者在 A 股市场上买卖股票的交易成本大概是万分之二到万分之三左右，但买卖一套房子的交易成本大概是要用百分之几，包括房地产经纪费、契税、增值税，如果我卖的价钱比较高可能还有个人所得税、登记费等等。\n\n2、持有成本高。 房屋维修、房屋折旧等。\n\n3、流动性成本高。\n\n## **房地产投资之**REITs\n> ### REITs是什么？\n\n房地产投资信托基金（Real estate investment trust），将房地产/基础设施项目标准化、证券化后，供机构投资者与个人投资者投资的工具。\n\n> ## **REITs 的运作模式与发展现况**\n\nREITs在中国的发展：\n\n+ 起步晚，21年开始\n+ 数量在30 只左右，整个市值接近人民币 1, 000 亿元。\n+ 底层资产比较单一，一般一个基金只投一个标的\n\n推荐REITs：「XX苏州工业园区产业园封闭式基础设施证券投资基金」\n\nREITs在世界的发展：\n\n从 1960 年在美国最先推出，目前从全球来看， 41 个国家都有 REITs。如果我们把全球的 REITs 的市场价值加总，大概有2万亿美元，也就是约 15 万亿人民币的体量。如果我们看 REITs 占全球股票的大小，大概占 5% - 10% 左右。包括我们经常讲的标普 500 的指数里面也有几家 REITs 在里面代表房地产。\n\n![](https://static.gridea.dev/427a08c7-e8e9-45f6-8f15-7c7756586a38/MP0jRr-gY.png)\n\n> ### REITs的好处和风险\n\n+ 门槛低，流动性高；风险可以分为三方面：现金流，贬值与管理风险。\n+ REITs 的波动与长期收益率都介于股票和债券之间。\n\n> ### REITs的贝塔收益（Beta）&超额收益（Alpha）\n\n+ REITs 的波动与长期收益率都介于股票和债券之间。\n\n> ### REITs的成本（Cost）\n\n管理费，80% 的费率都是在 0.25 到 0.75 这个区间\n\n相关阅读： [E15 房地产投资（上）：买房投资过时了？回归本质看看它的收益来源 (youzhiyouxing.cn)](https://youzhiyouxing.cn/materials/1681)\n\n[E16 房地产投资（中）：你知道吗？其实不买房也能投资房地产 (](https://youzhiyouxing.cn/materials/1687)[youzhiyouxing.cn](//youzhiyouxing.cn)[)](https://youzhiyouxing.cn/materials/1687)\n\n[E17 房地产投资（下）：普通散户想投资REITs，该注意什么？ (](https://youzhiyouxing.cn/n/materials/1691)[youzhiyouxing.cn](//youzhiyouxing.cn)[)](https://youzhiyouxing.cn/n/materials/1691)','\n',char(10)),NULL,'---',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T14:50:57.954Z','2025-05-08T14:50:58.283Z','2025-05-08T14:50:58.283Z');
INSERT INTO posts VALUES(161,'dan-zheng-gong-chang-fang-an-she-ji-nong-xian-wei-li','单证工厂方案设计——农险为例',replace('## 1.2 市场分析\n### 1.2.1 行业现状\n+ 单证电子化成为趋势\n    - 保单线上化率超过80%\n    - 移动化服务需求增长\n    - 场景定制化明显\n+ 主流技术路线\n    - 传统模板引擎：成熟稳定,扩展性差\n    - 低代码平台：灵活性强,学习成本高\n    - Schema驱动：标准化强,落地难度大\n\n### 1.2.2 产品对比分析/单证配置能力对比\n| 功能 | 寿险 | 平安智能单证 | 东软IDMS | 众安无界山 |\n| --- | --- | --- | --- | --- |\n| 可视化拖拽设计器/动态规则与计算引擎 | 1. 支持通过拖拽组件（文本、表格、二维码、电子签章区块）设计单证模板<br/>2. 可绑定动态数据字段（如客户姓名=customer.name、保单号=policy.id）<br/>3. 支持嵌套逻辑（如IF健康险 THEN 显示“既往病史”字段） | 1. 支持通过拖拽组件（文本、表格、二维码、电子签章区块）设计单证模板<br/>2. 可绑定动态数据字段（如客户姓名=customer.name、保单号=policy.id）<br/>3. 支持嵌套逻辑（如IF健康险 THEN 显示“既往病史”字段） | 1. <font style="color:rgb(64, 64, 64);">支持</font><u><font style="color:rgb(64, 64, 64);">多级模板架构（基础模板、险种模板、机构模板）</font></u><br/>2. <font style="color:rgb(64, 64, 64);">支持拖拽组件：业务人员可根据需求调整字段布局、嵌入动态数据（如客户信息、保单条款），减少人工编码需求</font> | **<font style="color:rgb(64, 64, 64);">数据模型标准化</font>**<br/><font style="color:rgb(64, 64, 64);">使用JSON Schema定义单证字段元数据（类型、数据源、依赖关系）</font> |\n| 自动化生成与输出 | 1. 生成PDF/OFD格式单证，嵌入电子签章（如e签宝服务），符合《电子签名法》要求。<br/>2. 支持批量生成（如团体寿险分户清单），并通过短信平台自动推送至客户 | <font style="color:rgb(64, 64, 64);">生成PDF/OFD格式单证，集成</font><u><font style="color:rgb(64, 64, 64);">e签宝等第三方服务</font></u><font style="color:rgb(64, 64, 64);">，自动插入电子签章，符合《电子签名法》要求</font> | <u><font style="color:rgb(64, 64, 64);">内置银保监会单证规范要求</font></u><font style="color:rgb(64, 64, 64);">，自动生成符合监管的电子单证（如OFD格式），支持区块链存证确保数据不可篡改</font> | **<font style="color:rgb(64, 64, 64);">HTML5动态渲染引擎</font>**<br/>1. <font style="color:rgb(64, 64, 64);">基于</font><u><font style="color:rgb(64, 64, 64);">JSON Schema</font></u><font style="color:rgb(64, 64, 64);">动态生成HTML5模板，适配不同终端（PC、移动端）和合作机构需求</font><br/>2. <font style="color:rgb(64, 64, 64);">支持实时渲染大规模数据（如农险分户清单），采用流式分页技术提升性能</font> |\n| 差异对比 | - 表单化配置   - 固定组件库   - 静态布局 | - 可视化设计   - 自定义组件   - 响应式布局 | - 表单化配置   - 固定组件库   - 静态布局 | - Schema驱动   - 组件市场   - 智能布局 |\n\n---\n\n## 1.3 单证工厂项目设计\n### 1.3.1 单证工厂整体架构\n![](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F__mermaid_v3%2Fc47ffff31ca13bdc9c7eaee670c91a7b.svg)\n\n### 1.3.2 核心引擎设计\n#### 1.3.2.1 元数据引擎\n+ **数据模型管理**\n    - 标准化数据结构定义\n    - 字段映射规则维护\n    - 数据依赖关系处理\n+ **数据校验**\n    - 字段格式校验\n    - 数据完整性检查\n    - 业务规则验证\n\n#### 1.3.2.2 规则引擎\n+ **业务规则处理**\n    - 条件判断规则\n    - 计算公式规则\n    - 显示控制规则\n+ **规则链管理**\n    - 规则优先级设置\n    - 规则冲突处理\n    - 规则版本控制\n\n#### 1.3.2.3 模板引擎\n+ **模板设计**\n    - 可视化设计工具\n    - 组件库管理\n    - 布局规则配置\n+ **模板管理**\n    - 模板版本控制\n    - 模板复用机制\n    - 模板权限管理\n\n#### 1.3.2.4 渲染引擎\n+ **渲染处理**\n    - 多格式支持（PDF/HTML/Word）\n    - 响应式布局适配\n    - 批量渲染优化\n+ **性能优化**\n    - 渲染缓存\n    - 分布式处理\n    - 异步渲染\n\n### 1.3.3 全流程管控\n+ **设计阶段**：通过模板设计器完成单证布局和数据映射\n+ **生成/印制阶段**：支持电子单证实时生成和实物单证批量印制\n+ **发放阶段**：实现线上线下单证统一发放管理\n+ **使用阶段**：提供电子签名、流转追踪等功能\n+ **回收阶段**：支持作废、核销等处理\n+ **归档阶段**：统一存储并提供检索服务\n1. **单证设计管理**\n    - 农险专属模板库（种植险/养殖险/森林险）\n    - 监管要求预置（三农业务合规要点）\n    - 多层级审核流程\n2. **实物单证管理**\n    - 印刷管理：申请、招标、验收\n    - 库存管理：入库、盘点、调拨\n    - 发放管理：授权、限额、登记\n    - 回收管理：记录、核销、存档\n3. **电子单证管理**\n    - 在线生成：批量/实时\n    - 电子签章：农户签名/公司签章\n    - 区块链存证：防篡改/可追溯\n    - 在线归档：分类/检索/导出\n\n---\n\n## 1.4 核心功能设计\n### 1.4.1 数据管理方案\n#### 1.4.1.1 数据模型标准化\n+ **农险数据标准化**\n    - 基础信息：农户信息、土地信息、种植信息\n    - 业务信息：保单信息、验标信息、理赔信息\n    - 扩展信息：气象数据、产量数据、补贴信息\n\n#### 1.4.1.2 数据处理增强\n1. **数据依赖关系处理**\n\n```javascript\n{\n  "字段计算规则": {\n    "总保费": {\n      "依赖字段": ["主险保费", "附加险保费"],\n      "计算公式": "sum(主险保费,附加险保费)"\n    },\n    "农险赔付金额": {\n      "依赖字段": ["受灾面积", "单位赔付标准"],\n      "计算公式": "multiply(受灾面积,单位赔付标准)"\n    }\n  }\n}\n```\n\n2. **动态数据展示规则**\n\n```javascript\n{\n  "农户信息展示": {\n    "数据源": "农户地块清单",\n    "分组字段": "地块编号",\n    "展示规则": {\n      "按地块分页": true,\n      "每页最大条数": 10,\n      "自动分页": true\n    }\n  }\n}\n```\n\n### 1.4.2 规则引擎方案\n#### 1.4.2.1 规则配置\n```javascript\n{\n  "业务规则": {\n    "农险规则": {\n      "条件": "insurance_type = ''agriculture''",\n      "必填字段": ["disaster_type", "weather_alert"],\n      "计算公式": {\n        "赔付金额": "disaster_area * compensation_standard",\n        "总保费": "sum(main_premium, additional_premium)"\n      }\n    }\n  },\n  "合规规则": {\n    "监管要求": {\n      "字体大小": ">=10pt",\n      "签名位置": "must_exist",\n      "条款说明": "must_exist"\n    }\n  }\n}\n```\n\n### 1.4.3 模板引擎方案\n#### 1.4.3.1 拖拽式设计器\n1. **前端界面设计**\n\n![](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F__mermaid_v3%2Fe71acb425fe5c3bac1459a11eb493afc.svg)\n\n2. **组件结构设计**\n\n```typescript\ninterface BaseComponent {\n  id: string;\n  type: ComponentType;\n  position: Position;\n  style: Style;\n  dataBinding?: DataBinding;\n  validators?: Validator[];\n}\n\ninterface AgricultureComponent extends BaseComponent {\n  bizType: ''farmer'' | ''land'' | ''crop'';\n  template: string;\n  rules: BusinessRule[];\n}\n\ninterface ComponentTree {\n  root: BaseComponent;\n  children: ComponentTree[];\n  layout: ''flow'' | ''grid'' | ''absolute'';\n}\n```\n\n#### 1.4.3.2 模板方案对比\n| 方案类型 | 适用场景 | 优势 | 劣势 | 建议 |\n| --- | --- | --- | --- | --- |\n| 拖拽式设计器 | 简单单证设计,运营人员使用 | 直观易用,所见即所得 | 灵活度受限,难以处理复杂布局 | 作为主要设计方式 |\n| JSON Schema | 复杂数据模型,开发人员使用 | 结构化强,可编程性好 | 学习成本高,不直观 | 作为高级设计模式 |\n| Excel转换 | 存量单证迁移,模板复用 | 快速转换,适合批量 | 精确度有限,需人工调整 | 作为辅助迁移工具 |\n\n#### 1.4.3.3 智能转换功能\n1. **OCR智能识别**\n    - 支持Excel/PDF/扫描件识别\n    - 智能分析布局和样式\n    - 自动提取文本和表格\n2. **组件智能映射**\n    - 基于规则的组件识别\n    - 智能布局优化建议\n    - 样式自动补全\n3. **数据绑定助手**\n    - 字段智能匹配\n    - 数据类型推断\n    - 校验规则建议\n\n---\n\n## 1.5 数据处理设计\n### 1.5.1 数据模型标准化\n+ **基础信息**：保单信息、验标信息、理赔信息\n+ **扩展信息**：气象数据、产量数据、补贴信息\n\n### 1.6 实施路径\n### 1.6.1 分步实施\n1. MVP验证：从种植险单证切入\n2. 能力扩展：养殖险、森林险覆盖\n3. 生态构建：实现全险种\n\n### 1.6.2 效果评估\n| 维度 | 优化前 | 优化后 |\n| --- | --- | --- |\n| 开发周期 | 2-3周/单证 | <1天/单证 |\n| 人工成本 | 60%+ | <20% |\n| 单证丢失率 | 5% | <0.1% |\n| 追溯时间 | 数小时 | 秒级 |','\n',char(10)),NULL,replace('1.2.1 行业现状\n+ 单证电子化成为趋势\n    - 保单线上化率超过80%\n    - 移动化服务需求增长\n    - 场景定制化明显\n+ 主流技术路线\n    - 传统模板引擎：成熟稳定,扩展性差\n    - 低代码平台：灵活性强,学习成本高\n    - Schema驱动：标准化强,落地难度大','\n',char(10)),NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T14:56:49.731Z','2025-05-08T14:56:50.237Z','2025-05-08T14:56:50.237Z');
INSERT INTO posts VALUES(162,'da-guo-jing-ji-xue-du-shu-gan','《大国经济学》读书感',replace('---\n\n> 2023年出版的一本书籍。\n>\n\n**第一部分：提出了人类发展的共同目标，即“长期、全局和多维的发展”。**\n\n**第二部分：解释了中国曾经的高速经济增长，以及当前所面临的困难。**\n\n**中国的高速增长实际上是在城市化、工业化和全球化过程中实现的。**\n\n中国是一个人口规模巨大的大国，改革开放之初，城市化率只有18%，超过80%的中国人生活在农村地区，而目前城市化率已经超过了65%。农民进城和城市化的进程实际上就提供了中国现代化的劳动力供给。\n\n光有劳动力，肯定无法带来现代经济增长，另外一个经济增长的生产要素来源就是资本积累。我国国内的储蓄率非常高，在全球化过程中，我国还大量引入了 外资，这种资本跟劳动的结合，就带来了中国经济的高速增长。\n\n在城市化、工业化和全球化的基础之上，市场化也非常重要。改革开放后，借助于价格机制和市场的生产要求配置功能，市场化极大地改善了中国经济的效率。\n\n不过需要注意的是，中国经济高速增长的模式，也存在一些问题，也恰恰是当前经济改革的一些方面。\n\n**具体是，我国经济增长出现了非常明显的高投资高出口的增长模式，消费占比不足，尤其是服务消费占比较低。**\n\n以前我国经济增长主要通过出口实现，把自己生产出来的产品卖到其他国家，净出口的比重曾经高达GDP的9%。在我国经济体量没有那么的时候，问题还不大。当我国已经成为全世界第二大经济体的时候，全世界其他国家就没有这么大的市场消化我国出口的产品了。\n\n因此当前我国提出，**要实施以内循环为主的经济发展模式**，摆脱对于出口的过度依赖。\n\n第三部分：我国经济转型过程中，一些体制性的特征，起到什么作用？\n\n地方官员往往在一个地方主政大约只有3年时间，为了实现考核和晋升，地方政府往往会通过加大投资拉动当下的经济增长，而且很多经济增长就是通过地方政府借债来实现的。由于主政时间大约只有3年，往往会忽略长期的经济增长。\n\n很多地方官员所关注的经济增长，就是本地的经济增长，不太关注整个国家的资源配置效率。\n\n给我的一些启示：\n\n1、我国经济发展，后续会鼓励国内消费、推动服务消费。\n\n这样也能理解，为什么存款利率一直下降、贷款利率下调了。\n\n2、我国的体制比较特殊，不能完全参照日美等国的发展路径，虽然当前发生了通货紧缩，但是长期来看，我国经济发展还是向好的。\n\n![](https://static.gridea.dev/427a08c7-e8e9-45f6-8f15-7c7756586a38/sOVU_1--C.png)![](https://static.gridea.dev/427a08c7-e8e9-45f6-8f15-7c7756586a38/ExhJ4jLuo.png)![](https://static.gridea.dev/427a08c7-e8e9-45f6-8f15-7c7756586a38/HfgA6MRir.png)更多链接：[大国经济学 (豆瓣) (](https://book.douban.com/subject/36207176/)[douban.com](//douban.com)[)](https://book.douban.com/subject/36207176/)','\n',char(10)),NULL,'---',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T16:00:54.110Z','2025-05-08T16:23:08.594Z','2025-05-08T16:22:56.420Z');
INSERT INTO posts VALUES(163,'xiao-gou-qian-qian-du-hou-gan','《小狗钱钱》读后感',replace('---\n\n这本书简单有趣，对构建理财思维框架值得借鉴。\n\n方法如下：\n\n准备工作：\n\n**第一步，列出10个你想变得富有的原因。**\n\n**第二步，为最重要的三个愿望准备梦想储钱罐和梦想相册。**\n\n1、每天看一遍愿望单。\n\n2、收集与愿望相关照片，用图片思考。\n\n3、不要用我试试看“试”这个字，大胆做就好。\n\n4、运用想象，当你想象的时候，强烈的渴望就产生了。我曾因为想到出国游学心潮澎湃。\n\n**第三步，准备“成功日记”，每天记录至少5条做成功的事情。**\n\n遇到困惑时翻翻看，当成功的记录越来越多，没准奇迹就发生喔。不能肯定的事，那就作出肯定的回答写下。写成功日记能对自己成功的规律作更深入的思考，会越来越多地了解自己和自己的愿望。\n\n实际操作：\n\n总则：**50%的收入变成‘鹅’，40%放入梦想储蓄罐，10%用来花。**\n\n补充细则：\n\n1、无论钱的多少量入为出才能获得更多的钱：\n\na、在许可范围内按最低的分期付款数目标准支付。\n\nb、针对消费贷款（如汽车、家具、电视机或其他用于生活的商品）遵守的一个原则：将不用于生活的那部分钱的一半存起来，另一半用于偿还贷款。因为当还清债务，拥有的财产为零，也就是一无所有。一无所有不是目标，消费贷款不明智，聪明的做法是只把以前积攒起来的财富用于支出。\n\nc、债务人都应该在自己的钱包里贴一张纸条，上面写着‘这真的有必要吗？’。\n\n2、把投资以外的一部分钱（10%）放在身边，无论是现金或者金银财宝。一方面细数这些财物让人心生喜悦，一方面留有现金用来应急。\n\n3、5-10年不用的钱投资基金，行情下跌厉害时补一半的资金，以防继续下跌还有资金可以补仓。所以手头始终要留有一定的现金。 （2、3是关于50%鹅的分配。可以6成用于基金、股票，1成现金珠宝，3成日拆应急）\n\n其他阅读收获：\n\n1、赚钱的两个重要的建议：\n\n第一，为别人解决一个难题，那么你就能赚到许多钱；\n\n第二，把精力集中在你知道的、能做的和拥有的东西上。\n\n2、神奇72数字的三个用法： 当你决定做一件事情的时候，在72小时之内完成，否则你很可能永远不会再做了。\n\n72除以3%的通货膨胀率计算，得到24，就是说24年以后，你的钱只值现在的一半。\n\n72公式：直接用72除以投资的年利润百分比，得出的数字就是这笔钱翻一倍所要的年数。\n\n很喜欢的观点： 不要为失去的东西而忧伤，而要对拥有它的时光心存感激。 应当欢喜的接受因为自己由心地喜欢做的事而得到的报酬。不要因为热爱就可以不要报酬或难为情，反而热爱可以让你比其他人更适合这份工作。对感情也是一样，爱一个人不代表要义无反顾也不求回报。\n\n给我的启发：\n\n1、从今天开始，去写10个想变得富有的原因——为最重要的三个愿望准备梦想储钱罐和梦想相册——写成功日记。\n\n2、 养一只会下金蛋的鹅：将收入的一部分存起来，积沙成塔，用于投资或产生更多的收益。\n\n3、设定财务目标：明确自己的短期和长期财务目标，为实现这些目标制定计划。\n\n4、寻找赚钱的机会：利用自己的兴趣和特长，寻找兼职或创业的机会，增加收入。\n\n5、学会理财投资：了解基本的投资知识，如股票、基金、债券等，根据自己的风险承受能力进行投资。','\n',char(10)),NULL,'---',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T16:04:03.747Z','2025-05-08T16:23:20.273Z','2025-05-08T16:04:03.796Z');
INSERT INTO posts VALUES(164,'gui-ze-yin-qing-chan-pin-she-ji-gao-jie-si-wei','规则引擎——产品设计高阶思维',replace('---\n\n## 规则引擎\n规则引擎是一种嵌入在应用程序中的组件，它可以将业务规则从业务代码中剥离出来，使用预先定义好的语义规范来实现这些剥离出来的业务规则；规则引擎通过接受输入的数据，进行业务规则的评估，并做出业务决策。\n\n## 规则引擎的好处\n因为规则引擎将复杂的业务逻辑从业务代码中剥离出来，所以可以显著降低业务逻辑实现难度；同时，剥离的业务规则使用规则引擎实现，这样可以使多变的业务规则变的可维护，配合规则引擎提供的良好的业务规则设计器，不用编码就可以快速实现复杂的业务规则，同样，即使是完全不懂编程的业务人员，也可以轻松上手使用规则引擎来定义复杂的业务规则。\n\n## 规则引擎架构设计\n规则引擎主要包括变量中心、规则管理和规则引擎三部分组成。\n\n变量中心：\n\n```plain\n变量：用于获取期望数值的脚本模型，包括变量名称、变量类型、变量获取方式、变量描述等。\n属性：定义属性的码值，通常用于常量。\n表达式：公式类型的规则，用于返回公式计算结果，通常包括定义入参、出参。\n```\n\n规则管理\n\n```plain\n规则定义：描述一条匹配关系及匹配后返回结果，一个普通规则主体是由如果、那么、否则三部分构成。\n计算公式：公式类型的规则，用于返回公式计算结果\n规则文件：\n规则集：一组简单的规则集合\n决策表：一组匹配条件相近的规则的集合\n评分卡：\n决策树：\n规则流：\n```\n\n规则引擎\n\n执行单元：规则引擎的管理单元，执行单元下包含一个或者多个决策表/规则集/计算公式\n\n暂时无法在飞书文档外展示此内容\n\n## 保险核心系统规则引擎的应用\n规则引擎是系统设计中常用的一种思路，它通过抽象高通用性的业务规则，通过规则配置的方式增加了系统的通用性和延展性，因此也是产品经理所必备的一种技能。\n\n在保险核心系统中，规则引擎也可以被引用在各个系统内。\n\n这里以投保规则进行举例。\n\n### 投保规则\n![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=NTdlOWNjZmFlOWM2MjMxYjM1ZjliZWMxNWRmMzNmOTJfUFJXMUtaTWo1eUU4Z1VtRUJoM2dtNFBXR1FBZ2RPbjNfVG9rZW46Uzl2OWJ3MFJjbzZkMVh4QmtaRWNkNTBDbnRZXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=OTc0OWQwMzkyMGJiZTc2MjBiNzViYmQ2MjBiOTFmOTFfNmlRSFZMMlU1UjVoMlU5bzV2TXZBQlhsMWl3UUhvNmVfVG9rZW46SjZwbGJuQ092b2dPMk14Y295MWNrOVZibmtlXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=YzIzNGI5MGJiNWVkMjY4OTJmYTc4MjAzZGZmYzJiNzdfQ203OGFsQjQ4ckFYTXdhdHVqWkZoOTZGNDdlbTRjcnpfVG9rZW46VWNPN2JHNU0zb3Fqdkl4UTZ4emNkRW1TbnplXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)\n\n![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=NGNmZmRkMTI1MDQzNTJjMWI5MTVmZGFkZTE2MWVlNTRfRW9MSHdGalI2S2RhNUVUMHJPSExJVDB6RlFBZ05Pa2JfVG9rZW46SHhERWJ1ODRlb1NqWW14WjFNMWNUdWJFblljXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=NDJiODY1NTUzZWZmOTc4NTViZjY4ZDM1ZWE4MWI2NDRfZjFNZTROVWRSUG40RDY3Z0xNZmZ2VnJuczhad1RNTjFfVG9rZW46UkJndWJsaUxTbzBXR0J4T0YxN2M4eUxubnNkXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjU2ZmVkNTk5ZjI3MTlmZWM5MmY5ZWMzODc0NThjZjlfTXJ6RFFYemtjWkVwNXFiTmRmb0V4aGUwOXpNMHRzQldfVG9rZW46VEhYMGIwdlNjbzkwbWt4cEU2aGNObXpQblpiXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)![](https://k0e3zvw6gix.feishu.cn/space/api/box/stream/download/asynccode/?code=ZWQ0ZTRkN2JiYjdiOWE4M2Y4MGU5YjM1OTdjYzEyMDBfU20zWmszZDJBOUhGcUFzeHhnOUhOenZsVkJrNmtwTldfVG9rZW46QlE5NmJpVjVSb3ozaVl4TDlkcmNkWEdBbnloXzE3MTcxNDQxMzM6MTcxNzE0NzczM19WNA)\n\n通过上图，我们可以初步得出，投保的规则涉及也比较多，抽象出来分为几类：\n\n1. 投保录入选项：定义变量，比如缴费期间、保额等等\n2. 投保规则（集）：包括单一规则和联动规则两种。单一规则比如年龄不得大于70周岁，联动规则比如当选择缴费期间为保终身时，保额不得超过60万。\n3. 费率决策表：基于投保录入选项，返回所交保费\n4. 其他规则：比如未成年保额规则、反洗钱规则等等。\n\n### 投保录入选项\n常用的投保录入选项如下：\n\n+ 投保标的基础信息\n    - 标的是人：投保人、被保人、受益人\n    - 标的是宠物：宠物、宠物年龄\n    - 标的是公司主体：公司名称、注册省市、详细地址\n    - 其他标的.....\n+ 保障计划\n    - 保障计划/可选险种/可选责任\n    - 保额/保费\n    - 缴费方式：年交/月交\n    - 缴费期间：终身/30年/20年...\n    - 保障期间：终身/30年/1年/1天\n    - 领取年龄（年金险特有）\n\n我们通过引入变量的方式可以实现，投保录入选项的管理。\n\n第一步：设定变量\n\n```plain\n变量名称：缴费期间\n变量类型：单选\n属性：终身/30年/20年\n变量获取方式：脚本获取\n变量描述：\n```\n\n第二步：设定规则\n\n```plain\n单一规则\n选择变量：选择缴费期间\n设定规则：\n入参是选择属性下拉选项，返回参数为true\n\n联动规则\n假设需要录入的规则是：当选择缴费期间为保终身时，保额不得超过60万。\n选择变量时：缴费期间、保额\n设定规则：\nif 缴费期间=终身，then 保额<=60万 ，else end\n```\n\n第三步：费率决策表\n\n```plain\n选择变量\n设定入参、出参\n```\n\n其他规则\n\n```plain\n通用规则设定：比如未成年保额规则、反洗钱规则\n```','\n',char(10)),NULL,'---',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T16:26:34.179Z','2025-05-08T16:26:34.697Z','2025-05-08T16:26:34.697Z');
INSERT INTO posts VALUES(165,'zai-macos-shang-qing-song-bu-shu-docker-xiang-xi-an-zhuang-yu-pei-zhi-bu-zhou','在 macOS 上轻松部署 Docker：详细安装与配置步骤',replace('Docker作为一种流行的容器化技术，为开发者提供了一种高效、便捷的方式来打包、分发和运行应用程序，确保其在不同环境中的一致性。对于macOS用户来说，部署Docker同样简单易行。本文将详细介绍如何在macOS上安装和配置Docker，帮助你快速上手。\n\n## 一、Docker简介：为何选择Docker\nDocker是一个开源平台，基于Linux容器（LXC）技术，通过将应用程序及其所有依赖项封装到一个容器中，确保应用在不同环境中运行的一致性。其主要优势如下：\n\n1. **环境一致性**：无论是在开发、测试还是生产环境中，Docker都能保证应用程序的一致性，避免“在我的机器上可以运行”的问题。\n2. **轻量级**：与传统虚拟机相比，Docker容器占用的资源更少，启动速度更快，能更高效地利用系统资源。\n3. **易于管理**：借助Docker Compose等工具，可以轻松管理多容器应用，简化了开发和部署流程。\n4. **跨平台支持**：Docker支持在多种操作系统上运行，包括macOS、Windows和Linux，具有良好的兼容性。\n\n## 二、在macOS上安装Docker\n在macOS上安装Docker主要有两种方式：通过Docker Desktop安装和使用Homebrew安装。以下是详细步骤：\n\n### （一）通过Docker Desktop安装\nDocker Desktop是Docker官方为macOS提供的图形化界面工具，安装过程非常简单，适合初学者和大多数用户。\n\n1. **下载Docker Desktop**\n    - 访问Docker官网（[https://www.docker.com/products/docker-desktop]）。\n    - 在页面上选择macOS版本，点击“Download for Mac”按钮。\n2. **安装Docker Desktop**\n    - 下载完成后，双击下载的`.dmg`文件，按照提示将Docker图标拖动到应用程序文件夹中。\n    - 安装完成后，点击打开Docker Desktop。\n3. **启动Docker**\n    - 打开Docker后，你可能需要授予Docker一些权限，例如安装系统工具。按照提示完成操作。\n    - 初次启动时，Docker需要一些时间来初始化，直到Docker图标出现在菜单栏，表示Docker已经启动并准备就绪。\n4. **验证安装**\n    - 打开终端，输入以下命令来验证Docker是否安装成功：\n\n```bash\ndocker --version\n```\n\n如果安装成功，你将看到Docker的版本信息。\n\n### （二）使用命令行工具/Homebrew安装\n如果你更习惯使用命令行工具，或者希望通过Homebrew来管理你的开发环境，可以通过Homebrew安装Docker。\n\n1. **安装Homebrew**\n    - 如果你还没有安装Homebrew，可以通过以下命令来安装：\n\n```bash\n/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n```\n\n2. **安装Docker**\n    - 使用以下命令通过Homebrew安装Docker：\n\n```bash\nbrew install --cask docker\n```\n\n3. **启动Docker**\n    - 安装完成后，可以在应用程序中找到Docker图标，点击启动。\n4. **验证安装**\n    - 同样，通过以下命令验证Docker是否安装成功：\n\n```bash\ndocker --version\n```\n\n## 三、Docker的初始配置与运行\n安装完成后，进行一些基础配置以确保Docker的正常运行。\n\n### （一）配置Docker的资源\nDocker Desktop默认会为容器分配一定的CPU、内存和磁盘空间。如果你的开发环境需要更多资源，可以根据实际需求调整这些设置。\n\n1. 点击Docker菜单栏图标，选择**Preferences**。\n2. 在**Resources**标签中，调整CPU、内存、磁盘空间等资源的分配。根据你的项目需求，合理分配这些资源。\n\n### （二）测试Docker是否正常运行\n完成配置后，进行简单的测试，确保Docker能够正常运行。\n\n1. **运行一个简单的容器**\n    - 在终端中输入以下命令来运行一个简单的Docker容器：\n\n```bash\ndocker run hello-world\n```\n\n该命令会下载一个`hello-world`镜像，并启动一个容器。如果一切正常，你将看到类似以下的输出：\n\n```plain\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n```\n\n2. **查看正在运行的容器**\n    - 输入以下命令查看当前正在运行的Docker容器：\n\n```bash\ndocker ps\n```\n\n3. **查看所有Docker镜像**\n    - 输入以下命令查看本地存储的Docker镜像：\n\n```bash\ndocker images\n```\n\n## 四、常见问题及解决方案\n尽管Docker提供了很多便捷的功能，但在安装和使用过程中，可能会遇到一些常见问题。以下是一些解决方案：\n\n### （一）Docker Desktop不启动\n如果Docker Desktop无法启动，可以尝试以下方法：\n\n+ 检查系统是否满足Docker的硬件要求，例如是否启用了虚拟化。\n+ 尝试重新启动Docker或重新安装Docker Desktop。\n\n### （二）Docker容器无法连接网络\n如果容器无法访问网络，可能是由于网络配置的问题。可以通过以下命令重启Docker网络：\n\n```bash\ndocker network prune\n```\n\n然后重启Docker服务。\n\n### （三）Docker占用过多的内存\n如果你发现Docker占用过多的内存，可以通过调整Docker Desktop中的**Resources**设置，限制内存的使用量。\n\n## 五、总结与最佳实践\n在macOS上安装和配置Docker是一个简单而高效的过程。通过Docker，你可以轻松地在本地开发环境中运行和管理容器化应用程序。以下是最佳实践建议：\n\n1. **定期更新Docker版本**：确保安全性和稳定性。\n2. **使用Docker Compose管理多容器应用**：避免手动管理多个容器，简化开发和部署流程。\n3. **配置合适的资源分配**：避免Docker占用过多的系统资源，确保系统运行流畅。\n4. **了解Docker镜像的大小**：避免下载过大的镜像导致磁盘空间不足。','\n',char(10)),NULL,'Docker作为一种流行的容器化技术，为开发者提供了一种高效、便捷的方式来打包、分发和运行应用程序，确保其在不同环境中的一致性。对于macOS用户来说，部署Docker同样简单易行。本文将详细介绍如何在macOS上安装和配置Docker，帮助你快速上手。',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T16:51:51.791Z','2025-05-08T16:51:51.853Z','2025-05-08T16:51:51.853Z');
INSERT INTO posts VALUES(167,'chan-pin-jing-li-bi-bei-ji-neng-gong-neng-he-liu-cheng-ru-men-93906v8t','产品经理必备技能:功能和流程入门',replace('# 一、功能流程入门\n## **1.1 初识功能和流程**\n### **1.1.1 功能和流程的重要性**\n功能和流程是一个产品的基础骨架，产品再这个基础上逐渐丰满起来的。\n\n### **1.1.2 不同阶段的掌握程度**\n（1）初级产品经理：主要讲一些单一角色的功能流程设计。如小功能优化，功能点设计，和单通道流程图。\n\n（2）高级产品经理：针对于多角色的复杂流程，和资源不够用的优先级设计，同时这一阶段，产品经理需要从更全的角度看问题，这是需要为自己的产品负责，需要考虑产品的商业价值和考核指标。\n\n（3）产品总监：一般功能和流程已经很少在这个阶段涉及了，这是可能更关注的是生命周期，策略和整体操盘。\n\n| <font style="color:rgb(0, 0, 0);">初级产品经理</font> | <font style="color:rgb(0, 0, 0);">1、已有功能的优化</font><br/><font style="color:rgb(0, 0, 0);">2、功能点的设计；</font><br/><font style="color:rgb(0, 0, 0);">3、单通道流程图。</font> |\n| --- | :--- |\n| <font style="color:rgb(0, 0, 0);">高级产品经理</font> | <font style="color:rgb(0, 0, 0);">1、功能模块的设计；</font><br/><font style="color:rgb(0, 0, 0);">2、需求池与版本优先级管理；</font><br/><font style="color:rgb(0, 0, 0);">3、商业产品；</font><br/><font style="color:rgb(0, 0, 0);">4、泳道图；</font><br/><font style="color:rgb(0, 0, 0);">5、制定功能的考核指标。</font> |\n| <font style="color:rgb(0, 0, 0);">产品总监</font> | <font style="color:rgb(0, 0, 0);">1、产品的生命周期与产品策略；</font><br/><font style="color:rgb(0, 0, 0);">2、产品迭代策略与优先级管理；</font><br/><font style="color:rgb(0, 0, 0);">3、产品操盘；</font><br/><font style="color:rgb(0, 0, 0);">4、复杂业务流程的梳理</font> |\n\n## **1.2 做已有功能的优化**\n### **1.2.1 功能点的优化是最基础的工作**\n1. 对功能点的不断优化就是迭代；\n2. 不要期望用新加功能来解决老的功能问题；\n3. 功能优化和新功能设计有什么区别？\n+ 反应速度不同：邮件、甚至口头搞定；\n+ 开发难度不同：一般都是1-3天/人的工作量；\n+ 评判标准不同：更强调效果对比。\n\n### **1.2.2 分析产品功能的现状与逻辑**\n1. 用户：都有哪些用户会用到这个页面/功能？\n2. 流程：用户的使用流程是如何的？\n3. 逻辑：产品底层逻辑（业务流程）是如何的？\n\n### **2.3 现在功能有什么问题**\n1. 现象：哪些用户出了什么问题？\n2. 原因：为什么会出问题呢？\n3. 影响面：出现问题的频率和受影响的用户量是如何？\n\n### **2.4 解决方案是什么**\n1. 关键点：在业务流程中，找到最关键的因素；\n2. 多种方案：有没有更多的方案？还是只有一种方案？\n3. 难度评估：开发难度与效果的选择。\n\n### **2.5 结果如何评定**\n1. 考核指标：用什么指标评估产品的表现\n2. 数据对比：前后的数据对比是如何的？\n\n## 1.3 完整小功能设计\n### **1.3.1 所有产品都是由一个个小功能构成的**\n1. 产品经理不是功能经理，但好产品经理一定能做好功能；\n2. 产品早期，功能为主，产品成熟后，对原有功能的迭代为主；\n3. 完整的功能，一般需要经过简单的评审才能提交研发;\n\n### **1.3.2 明确功能点的目的**\n#### **1.3.2.1 对用户：对哪类用户具体有什么好处？有没有受影响的用户？**\n1. 增加内容，提升准确度（如选择标签）；\n2. 减少操作，提升便利性（推荐入口）；\n3. 功能补充，提升体验（发票功能）;\n\n#### **1.3.2.2 对平台（内）：对内部数据、操作人员是否提升了效率？**\n1. 增加渠道，引入新用户（分享功能、支持微信登录）；\n2. 减少重复的操作（增加教师库–>不用每次都粘贴一遍）；\n3. 数据分层，提升精确度（手机号验证码–>按城市群发短信）;\n\n#### **1.3.2.3对商业：是提高收入？还是提升转化率？**\n1. 拉动付费转化率（两人付费，一人免单）；\n2. 增加新产品，创造新的收入点（在线订座）；\n3. 对原有数据做重新组合，提高数据转化率（地图找房）;\n\n#### **1.3.2.4 小总结**\n1. **对内讲效率；**\n2. **对外讲体验；**\n3. **对商业谈转化;**\n\n### **1.3.3 明确功能基本逻辑**\n1. 要达到目的，大概的逻辑是什么？比如：用户的操作过程；数据的流向；\n2. 难点是什么？\n\n### **1.3.4 调研相关的产品功能**\n1. 明确调研目的；\n2. 观察体验“用户、场景、需求”是否被满足了？\n3. 猜测底层的逻辑；\n4. 分析产品的流程；\n5. 产品亮点和结论；\n\n### **1.3.5 制定功能方案**\n#### 1.3.5.1 指定功能方案\n1. 可能的解决方案有哪些？\n2. 梳理每个方案的简要业务流程；\n3. 针对性的分析，选择适合的方案。比如：开发难度/见效/用户场景/…\n\n#### **1.3.5.2 方案细化**\n1. 流程细化：梳理业务流程，增加异常情况；\n2. 考核指标：上线后如何评定功能点的效果。\n\n### **1.3.6 原型设计与需求文档**\n1. 通过业务流程获取页面流程；\n2. 原型设计（真实场景、真是文案、黑白灰）；\n3. 完成需求文档（或直接用原型标注解决）；\n4. 需求评审。\n\n### 1.3.7 营推广方案简单策略\n1. 找位置：用户的关键路径在哪里?\n2. 定内容：匹配用户和场景，指定文案和推广形式；\n3. 要效果：运营的转化效果如何？后续的计划是什么；\n\n## **1.4 业务流程设计**\n### 1.4.1 业务流程设计基础\n#### 1.4.1.1业务流程是什么\n1. 产品设计的过程文件，类似于建筑图纸\n2. 产品设计就是流程设计\n3. 凡是产品需求必有流程图\n\n#### 1.4.1.2 **做产品就是做流程**\n1. 三岁定终生，流程对了，后面的原型、需求文档、评审都容易了；\n2. 传承，让自己、同事和以后接受的人很容易交接；\n3. 让参与者明确知道业务是如何运作的，快速开发工程；\n4. 明确产品优化的过程与收益，设置考核指标更合理；\n\n#### **1.4.1.3 产品设计中，业务流程的作用**\n1. 功能优化：看之前业务流程，找改进点；\n2. 独立功能设计：但通道流程图，看用户，信息的流向；\n3. 独立产品设计：泳道图、复杂的用户、信息交互处理；\n4. 原型交互设计：页面流程图，规定页面的交互方向；\n\n#### **1.4.1.4业务流程图包含什么**\n1. 事项：要完成的事情是什么？\n2. 用户：分别有哪些人会参与到流程中？\n3. 信息：数据是怎么流转的？\n4. 异常：出现问题了，怎么处理？\n\n#### **1.4.1.5 画流程图的工具**\n1. Axure：产品经理常用工具，直接画流程特别好，画完流程原型也直接跟进了；\n2. Visio：Windows下很专业的软件，工业风的一种工具；\n3. Gliffy Diagrams：Chrom类插件的一种，操作很简单方便，但风格比较粗矿；\n4. Processon：www.processon.com在线版的流程图，还有小动画，有利于团队协作。\n\n### 1.4.2 功能的业务流程图怎么画\n#### 1.4.2.1 如何做单通道的功能流程图\n\n#### **1.4.2.2 单通道的业务流程图技巧**\n1. 主线清晰：关键路径、关键任务一目了然；\n2. 先住后次：先搞定关键路径，在补充细节路径；\n3. 优化调整：通过与原型设计过程，优化异常流程；\n\n**1.4.2.3 业务流程图能力提升秘笈**\n\n1. 多看：多调研、体验各种功能点；\n2. 多想：用产品的视角想想为什么是这样的设计；\n3. 多画：基本功，没捷径，画100遍，自然就知道了；\n4. 多交流：多跟功底好的同时一起交流提升；\n\n# 二、复杂流程图设计\n## 2.1 流程图概述\n目的：设计初期用于了解任务类型、如何协作完成任务、如何展现信息。设计过程中用于描述任务过程、展示整体应用框架。\n\n受众：开发、设计师、涉众\n\n工作量：取决于研究和计划所要求的详细程度和细节数量。\n\n情境：可用于项目的整个过程。\n\n格式：用各式各样的符号来标识过程中的不同步骤。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fwebp%2F40701240%2F1729609415789-4656de7b-d2b4-4e4c-8857-11f7ccd0b818.webp)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n## 2.2 先分析功能的关键逻辑\n1. 角色：都有什么人参与到功能里\n2. 事项：分别扮演什么角色，要做什么事情\n3. 信息的流向：要完成任务的顺序是怎么样的？\n\n## 2.3 明确用户和任务\n1. 参与者：明确所有参与用户系统，系统也作为一个参与角色\n2. 关系：简要梳理一下参与者的关系\n3. 目标：所有的参与者，最终的目标是什么？\n\n## 2.4 明确开始与结束的路径\n1. 每个功能模块中，从哪里开始流程，到哪里终结流程？\n2. 一般开始和结束只有一个，如果结束很多，就意味着用户会转晕\n3. 是否有必要区分时间阶段？\n\n## 2.5 确定功能模块与核心路径\n1. 都有哪些功能模块会参与到流程中\n2. 主线流程也就是核心流程一定要清晰\n3. 核心流程意味着功能目标，核心流向不清晰，用户一定不满意\n\n## 2.6  不断调整优化顺序，合并异常流程\n1. 异常流程要考虑清楚，尽可能细化\n2. 异常=用户体验\n3. 异常流程多与研发沟通\n\n## 2.7 合并或拆分流程有依据\n1. 先复杂后简单，先加法再减法\n2. 调研相关产品，合并、分拆有理有据\n3. 以数据指标为核心来指导流程的优化\n\n# 三、流程图如何绘制？\n> _画图不是一个产品经理的炫技，理清楚业务逻辑才真正体现价值。_\n>\n> _不要迷恋工具。很多工具都可以画出很工整漂亮的流程图，关键还在于对业务的理解和把握。_\n>\n\n## 3.1 流程与流程图\n### **3.1.1 什么是流程**\n**具体来说，流程是一项活动或一系列连续有规律的事项或行为进行的程序。**\n\n流程有6个要素，分别是：**资源、过程、结构、结果、对象和价值**。\n\n一个流程会把这些基本要素串联起来，例如流程中资源的输入、流程中的活动、活动的结构，由谁执行，输出结果、流程最终创造的价值等。\n\n### **3.1.2 什么是流程图**\n**流程图（Flow Chart），顾名思义，就是用来直观地描述一个工作过程的具体步骤图，它使用图形表示流程思路，是一种极好的方法**。它在一些技术设计、工作步骤及商业简报等领域应用较为广泛，也可以称之为输入-输出图。它通常用一些图框来表示各种类型的操作，在框内写出各个步骤，然后用带箭头的线把它们连接起来，以表示执行的先后顺序，用图形表示执行步骤，十分直观形象，易于理解。\n\n## 3.2 流程图的画法和注意事项\n### 3.2.1 流程图常用图标含义\n工欲善其事，必先利其器。要能绘制比较好的流程图，起码得了解，在什么情况下应该用什么东西来表达它的含义，同时还能保证整个团队达成一致，形成“流程规范”，特别是对于某些具有标准性含义的图形，大家人所共知，则是我们应该遵循的共同准则。\n\n**流程图符号**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729609733384-337a24e7-0a8c-40a9-8622-361dddf43776.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**开始/结束**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609733539-56737eab-5172-47e4-bb32-78cd32ac750a.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n表示程序的开始或者结束，在程序流程图中用作为起始框或者结束框。目的就是让每一个查看流程图的小伙伴能清晰的知道这个流程从哪里开始，又在哪里结束。\n\n和矩形相比，它的命运是另外一种结局，更多的情况下它被遗忘了。不过在use case用例图中，椭圆则用于用例。\n\n**流程**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609733663-f6cc51c2-9268-48bf-b7dc-fb50fb7114e9.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n通常作为要执行的处理（process），在流程图中做执行框，有时也直接指代某一个页面。如页面和执行命令放在同一个流程中做说明，可以通过背景色、文字说明作为区别。\n\n矩形作为最常用的图标，也往往过于滥用，不管是过程中的命令执行，甚至是流程的开始和结束都往往直接用矩形直接代替了事。\n\n**判定**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609733787-7728802d-b3de-47d1-a801-ca3e16c82f33.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n表示决策或判断（例如：If...Then...Else）,在程序流程图中，用作条件的判断框。当条件达成时，怎样处理，条件不满足时怎样处理，如登陆判断。\n\n**文档**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609733948-1dab583e-379e-4d1b-9b94-ee7a2cac3f15.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n表达为一个文件，可以是生成的文件，或者是调用的文件。如何定义，需要自己根据实际情况做解释。\n\n**子流程**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734098-57671b9a-1bb1-4aa0-9377-754865f98a8b.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n业务流程图中的重要组成部分。如果你的功能逻辑很复杂步骤很长，一定要通过定义子流程的方式来优化整个业务流程图，否则的话，整个流程图的可读性会非常的差，而且很难把业务梳理清晰。\n\n当然不排除你绘制一个图之后的那种成就感，因为离开你，别人一时半会儿真的不能明白。如电商系统的订单流程，退化货就可以做成子流程。\n\n好的流程图，应该像一串葡萄，反过来就是一张蜘蛛网了。子流程能够有效的帮你梳理出一个业务系统中的关键环节，做任何的业务分析，都应该先从大处入手，环环相扣，降低图的“耦合度”。\n\n**数据**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734266-9be9d3b5-24e5-412c-ae01-276eb48855a7.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\nData 对象，通常称为 I/O 形状，显示流程的输入和输出。 这采取平行四边形的形状。\n\n**注释**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734400-2baf0078-6ce7-40d9-9d46-6c366f197595.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n批注或说明，也可以做条件叙述。\n\n### 3.2.2 流程图的基本结构\n**顺序型：几个连续的处理步骤依次排列构成**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734580-a612cf45-4fb6-4dfb-87ed-d0f852c7f1e9.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**选择型：由某个逻辑判断式的取值决定选择两个处理中的一个**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734731-28a501b3-3e85-47ea-b4b4-aea2b678f85d.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**先判定（while）型循环：在循环控制条件成立时，重复执行特定的处理**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609734875-0b70e2c8-b0a7-420f-adcf-1b35094b9511.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**后判定（until）型循环：重复执行某些特定的处理，直至控制条件成立**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609735069-80053436-c769-4a89-a763-0503544a2237.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n多情况（case）型选择：列举多种处理情况，根据控制变量的取值，选择执行其一\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609735242-af36c074-6221-493a-9194-522fd3d31673.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n### 3.2.3 绘制流程图中的注意事项\n**1、使用正确的符号：流程图有公认的一系列符号，随意使用会导致读者**\n\n**2、箭头顺序：通常的箭头顺序应该是从左到右，从上到下，不应该乱用**\n\n**3、一个流程从开始符开始，以结束符结束。开始符号只能出现一次，而结束符号可出现多次。**\n\n**4、菱形为判断符号，必须要有“是和否（或Y和N）”两种处理结果，意思是说，菱形判断框一定需要有两条箭头流出；且判断符号的上下端流入流出一般用“是（或Y）”，左右端流入流出用“否（或Y）”。**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609735420-08283901-770b-44d0-8930-88eb5fb8a352.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**5、同一流程图内，符号大小需要保持一致，同时连接线不能交叉，连接线不能无故弯曲。**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729609735611-c7818dba-41d4-4565-8fb4-88567de4a8a2.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**6、流程处理关系为并行关系的，需要将流程放在同一高度。**\n\n**7、必要时应采用标注，以此来清晰地说明流程，标注要用专门的标注符号。**\n\n**8、处理流程须以单一入口和单一出口绘制，同一路径的指示箭头应只有一个。**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609735833-453d6cbf-00e8-4f11-ab7c-020f2424c4bf.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**9、同一路径的指示箭头应只有一个。**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609736043-54e3a232-cbdf-464f-bb7c-0d790b9aa0fc.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**10、流程图中，如果有参考其他已经定义的流程，不需重复绘制，直接用已定义流程符号即可。**\n\n**11、不要留下悬而未决的环节**\n\n****\n\n## 3.3  那些经常使用错误的图标\n**1、流程**\n\n典型错误：将流程矩形当成开始/结束符号使用\n\n**2、注解符号**\n\n注释符号\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609736213-215b3cc2-2fae-4c15-a677-56894afbc5de.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n**3、虚线**\n\n在流程图中，虚线通常用来表示以下几种含义：\n\n**可选路径**：表示某个步骤或决策点是可选的，不是流程的必经之路。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609736492-249f13a0-ce5d-4b1b-9bb6-37425b9bcf53.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n<font style="color:#8F959E;">虚线框的流程表示还没上线的可选路径</font>\n\n**注释或说明**：虚线框可以用来包含对流程图的注释或说明。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609736666-b1b70ef0-9db3-45f7-aab7-aad364c00c2e.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n<font style="color:#8F959E;">虚线框整体框起来，增加注释说明</font>\n\n**参考线**：在复杂的流程图中，虚线可能用来作为参考线，帮助读者理解流程的布局。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729609736816-d509ed8c-e637-4da2-9b4d-312594e769c7.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n## 3.4 常见错误案例\n**案例1：流程指向不明**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729609737001-eceaef34-088f-431f-b8a9-d4544e45b684.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n1.整理业务流程，比如这几个部分的结束出口一样，可以统一考虑出口；\n\n2.避免交叉，图一的第二个菱形判断不知走向了哪里，很容易产生混淆\n\n**案例2：业务流程不清晰**\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729609737266-33fa7b01-f00d-4b8f-8ca1-345bebb28edf.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n流程图是对现实世界的抽象，根据不同流程图的面向对象，流程图的表达会存在差异。\n\n以上面的案例为例：\n\n这是一个面向研发的业务流程图，但是这个流程图中犯了以下错误\n\n业务流程缺失，这是本流程图最主要的问题\n\n流程图使用不规范\n\n在实际工作过程中，很多朋友都会遇到类似的问题，那如何能够清晰、美观的表达业务流程了？\n\n这就要考验大家对于业务的理解和抽象思维啦！\n\n最后，**对于较为复杂的流程图，我们可以在熟练掌握这些基础的前提下，学会运用子流程和泳道图来表达较为复杂、涉及多个主体的流程。**','\n',char(10)),NULL,replace('1.1.1 功能和流程的重要性\n功能和流程是一个产品的基础骨架，产品再这个基础上逐渐丰满起来的。','\n',char(10)),NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T17:10:06.179Z','2025-05-08T17:26:58.032Z','2025-05-08T17:10:06.400Z');
INSERT INTO posts VALUES(169,'chan-pin-jing-li-ji-chu-pian-ru-he-zuo-yong-hu-xu-qiu-fen-xi-23210xit','产品经理基础篇：如何做用户需求分析？',replace('一、如何做用户反馈\n## 1.1 用户反馈是什么？为什么要做用户反馈\n用户反馈，是指使用某一产品的客户对其产品所提出的关于产品的情况反馈。而在互联网用户至上的理念下，用户的反馈对于产品的改进、用户体验的提升都十分有帮助，也是各大互联网公司十分看重的。\n\n## 1.2 通过用户反馈关注什么？\n（1）**产品自身的问题**：用户会从个人的角度去反馈产品，用户反馈的意愿越高，也证明了用户对于产品的依赖性更高，这时候我们要尽快满足用户的需求，去进一步提升用户体验。\n\n（2）**竞品的问题**：要实时掌握竞品的发展动态，了解这个市场的竞争者的动态，从而吸引他人长处，紧跟市场发展。\n\n（3）**可能的机会点**：从用户反馈中尽可能提取用户的期望需求甚至兴奋需求，找到机会点。\n\n## 1.3 怎么做用户反馈\n### 1.3.1  收集用户反馈的渠道有哪些？\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729596392262-ec31489f-be92-4a41-a7fa-732bf683d318.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n（1）公开渠道：APP Store、微博、豌豆荚、贴吧等\n\n（2）半公开渠道：朋友圈、微信、用户评价\n\n（3）内部渠道：用户投诉、电话录音、客服咨询\n\n_以去哪儿机票为例：_\n\n_在具体搜索中，比如微博可以@去哪儿、@去哪儿机票等；_\n\n### 1.3.2 用户反馈不同渠道的处理策略？\n（1）公司层面上：资源充足情况下，建立用户管理后台是十分合理的，能够直接收集用户反馈、筛选用户反馈有效性、实时跟进\n\n（2）对于公开渠道，因为十分容易获取用户反馈；一般采取勤搜索、关键订阅、使用监测工具的策略\n\n（3）对于半公开渠道，获取用户反馈有一定的成本；一般采取定期搜索关键字、定期分析用户评论的方法，减少人工成本\n\n（4）对于内部渠道：整合内部用户反馈渠道、定期与一线同时沟通、到一线去\n\n### 1.3.3 主流的应用商店与常用工具？\n（1）iOS：App Store\n\n（2）Android：360手机助手、安卓市场、百度手机助手、小米应用商店、安智市场、豌豆荚\n\n（3）常用工具：AppAnnie、应用雷达、ASO114、蝉大师等\n\n### 1.3.4 监控应用商店监控什么？\n（1）低分差评：重点看低分 1-3 分；\n\n（2）有效评论：重点看有实际描述的评论；\n\n（3）异常行为：比如水军刷榜、恶意评价；\n\n（4）竞品变化：监控竞争对手的应用变化；\n\n### 1.3.5 用户点评看什么？\n▲差评：为什么是差评？原因、现象是什么？\n\n▲描述：重点看有实际描述的评论。\n\n▲异常行为：比如是否有刷好评的行为？是否有恶意差评的行为？\n\n# 二、怎么做用户调研？\n## 2.1 用户调研是什么？为什么要做用户调研？\n用户调研，指通过各种方式得到受访者的建议和意见，并对此进行汇总，研究事务的总特征。用户调研的目的在于为生产提供相关数据基础。\n\n## 2.2 什么时候要做用户调研\n通过产品画布理论中可以看出来，用户调研是辅助我们做一个产品一个功能之前首先要研究的事情。\n\n## 2.3 用户调研怎么做\n### 2.3.1 明确调研的目的和背景\n（1）背景：什么情况下发起的调研，是否需要调研解决\n\n（2）目的：通过用户调研得到的结果是什么\n\n+ 忌大而全：调研的方向越聚焦越有价值\n+ 忌假大空：要聚焦到某个问题，如：针对行业调研、针对用户满意度调研，都是假大空\n\n### 2.3.2 选择目标用户\n（1）典型用户：通过简单的用户画像，找出典型用户\n\n（2）目标用户：时间、地点、配合程度\n\n（3）邀约用户：直接说明目的，并告知可能发生的情况\n\n（4）用户数量：不宜扫网式，一般5-10个①典型用户：通过简单的用户画像，找出典型用户\n\n### 2.3.3 猜测目标面临的用户问题，设定问题\n（1）用户可能的问题：用户的使用行为表现  \n（2）可能的解决方案：猜测用户解决问题的手段  \n（3）确定访问提纲：聚焦且开发问题\n\n+ 题目数量：线上10-20个，线下5-10个\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fpng%2F40701240%2F1729605326735-86476f1e-9b55-4aca-962b-ddf88046b864.png)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n### <font style="color:rgb(68, 67, 64);">2.3.4 </font>**<font style="color:rgb(68, 67, 64);">调研过程</font>**\n（1）了解用户使用过程：最好观察用户的行为；  \n（2）提问：对关键行为、预设问题进行提问；  \n（3）反馈：对有效的信息反馈给用户并探究，探究解决方案\n\n（4） 现场调研策略：\n\n1. 望（看用户怎么操作）\n\n给用户1到2个明确的任务（基于用户分析）\n\n让用户自行完成任务（不做主动指导或讲解）\n\n不同类型用户，不同的任务，分开做\n\n2. 闻（猜测用户哪里出了问题）\n\n关注异常行为\n\n关注用户表现\n\n关注用户表情\n\n3. 问（让用户说说当时的想法）\n\n用户拿到任务后是怎么思考的\n\n认为需要完成工作，大约需要怎么做？\n\n针对关键节点，完整描述现象，并提问\n\n追问为什么\n\n完成单个行为和对应问题的收集：\n\n1，在一个完整路径上追问\n\n2，在聚焦且开放的问题，引导用户说自己的想法\n\n3，打破砂锅问到底\n\n描述现象-提问-答-追问WHY-答-描述现象提问-答-追问WHY-答-追问3-5次-礼貌结束\n\n4. 切（发现机会，验证机会，观察反馈）\n\n基于用于完成任务中遇到的问题\n\n用户认为可以怎么做会更好\n\n继续追问为什么\n\n演示新的解决方案，看用户的感受\n\n把之前考虑过的方案展示给用户，简单讲解\n\n关注点：和现在相比，对于用户的吸引力是什么\n\n继续追问为什么\n\n### <font style="color:rgb(68, 67, 64);">2.3.5 用户调研总结</font>\n（1）单个用户：记录单用户的调研情况；  \n（2）整体情况：汇总用户调研的过程和结论；  \n（3）行动计划：分享并提出行动计划\n\n### <font style="color:rgb(68, 67, 64);">2.3.6 如实还原，积极反馈</font>\n（1）还原：用户是怎么使用出问题的？  \n（2）反馈：提出改进计划，并及时通报\n\n### <font style="color:rgb(68, 67, 64);">2.3.7  用户调研的误区</font>\n（1）为了调研而调研：没结论，没过程，要带着分析方法、目的。\n\n（2）问用户有什么需求：不是用过用户行为发现需求。\n\n（3）试图说服用户：用中立的态度看待事情，不要带入个人情感，不要说服用户。\n\n（4）不要“求全求量”，要“求精求质”：看似安全，但没啥用的结果。\n\n（5）过于依赖调查问卷：得到了感觉有价值的数据，但是局限性很大。\n\n# 三、用户流失原因调研\n## **3.1  第一步：了解调研目的**\n无论做什么调研，研究员首先要确认调研目的，只有知道需求方最终想要解决什么问题才能做好调研。用户流失原因调研不只是简单的了解用户流失的原因就可以，产品经理提出用户流失原因调研需求，最终目的一般有两个：（1）防止用户流失；（2）挽回流失用户。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fbmp%2F40701240%2F1729605556630-281dfedd-b63b-433f-9f15-040a021e2c4c.bmp)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n** 最终目的不一样，调研需要解答的问题也不一样：**\n\n### 3.1.1 防止用户流失\n用户为什么会流失？（用户流失原因）→用户会继续流失吗？（现有用户的不满意点与流失原因是否一致？）→如何防止用户流失？（应采取什么样的改善措施）\n\n### 3.1.2 挽回流失用户\n用户为什么会流失？（用户流失原因）→流失用户回流的可能性？→什么情况下他们愿意回来？（回流触点）→如何挽回流失用户？（应采取什么样的改善措施）\n\n## **3.2  第二步：找出用户流失的真正原因**\n无论产品经理最终的目的是什么，他们提出用户流失原因调研需求证明他们都非常关心用户为什么会流失，所以找出用户流失的真正原因非常重要。但要找出用户流失的真正原因并不容易，有时问用户为什么不再用某产品，他们会用“没钱”or“没时间”等借口敷衍我们，用户因为“没钱”不用我们的产品了，但其他价格一样的产品却销售得如火如荼，这合理吗？ “没钱”or“没时间”这些借口我们当然不接受，那我们要如何找出真正的原因？笔者总结了三种方法：\n\n### **3.2.1 深入追问——5个WHY**\n连续问用户5个问题以获得深度递进的答案，这个方法能有效的使用户表达出深层的想法和原因。\n\n案例：以一款休闲游戏用户流失原因调查为例\n\n访问员：为什么最近一段时间没登录过***了？\n\n用户： ***（游戏角色）病了。\n\n访问员：为什么***病了就不登录了？\n\n用户：因为一登录***就会死，不想见到它死。\n\n访问员：既然害怕_**病死，那为什么没带**_看病（指的是在游戏中看病）？\n\n用户：没钱，看不起病。\n\n访问员：为什么没钱？\n\n用户：_**很容易生病，让**_打工挣的钱不够它看病。\n\n访问员：为什么不带***看免费医生（游戏中可免费看病）？\n\n用户：不知道可以免费治病。\n\n** 该案例最后了解到导致用户流失的原因有两个：***（游戏角色）打工挣钱少、用户不知道可以免费冶病。**\n\n### **3.2.2 侧面对比相关产品**\n有时用户也意识不到他们行为背后的真正原因，直接追问他们可能问不出具体原因，这个时候可以通过侧面对比去激发用户潜意识，挖掘出真正的流失原因。\n\n案例：\n\n访问员：为什么不续订*钻了？\n\n用户：没钱啊。\n\n访问员：您目前有没有开通其他的包月业务？\n\n用户：开通***。\n\n访问员：为什么开通***却没有开通*钻？\n\n用户：因为觉得***更实用，特权更多。\n\n访问员：***里的哪些特权最吸引您？\n\n用户：红名、魔法表情\n\n该案例了解到用户并不是因为“没钱”而不再继订*钻，而是由于*钻的特权没法吸引用户继续开通，而用户喜欢什么类型的特权呢，这需要我们继续深挖。\n\n### **3.2.3 行为分析 **\n当我们通过网络问卷的方法调研时，很难实现层层深入追问，对于用户来说，原因类题目他们很难回答，而行为类题目较容易回答，且行为类题目回答真实性较高，有些深层的流失原因，不一定需要层层深入追问为什么，有时可以通过行为分析解决。\n\n案例：\n\n您的***（游戏角色）挣钱的方式主要是：\n\n数据交叉分析发现，因为挣钱难而流失的_**游戏用户主要的挣钱方式是“打工”，而我们和产品经理沟通后了解到实际上**_（游戏角色）“打工”不但不能挣钱、而且会赔钱，因为“打工”会让***（游戏角色）损耗，***（游戏角色）会更容易脏、更容易饿，用户就要花更多的钱去养它们，成本大于收益。但很多用户不知道这个情况，所以一直选择“打工”挣钱，最后没办法维持游戏角色在游戏中的生存，导致流失。\n\n## **3.3  第三步：解答两大最终目的其他问题**\n### **3.3.1 用户会继续流失吗？——了解现有用户与流失用户的差异**\n要了解用户是否会继续流失，就需要对现有用户进行调研，如果现有用户和流失用户是同一类用户，那现有用户会继续流失。\n\n怎么知道现有用户和流失用户的差异呢？那就需要了解现有用户的态度，现有用户不满意的方面是什么，如果现有用户不满意方面与流失用户流失原因一致，那证明现用用户和流失用户没明显差异，如果导致用户流失的问题没解决，用户会继续流失。\n\n### **3.3.2 用户什么情况下才愿意回来**\n首先要知道流失用户回流的可能性，如果大部分用户表示无论产品怎样改变也不会再尝试使用，那在挽留用户上投放更多资源也没作用。\n\n其次是了解用户在什么情况下愿意回来，这包括但不限于流失原因改善，除了流失原因改善外还需要相关的促销活动，需要询问流失用户进行了解。\n\n最后是确认进行挽回改善措施会不会引起现有用户的不满，要了解现有用户满意及不满意的方面，确保挽回流失用户的措施不会对现有用户产生影响。\n\n## **3.4 第四步：设计改善措施**\n知道了用户侧反馈的产品问题，那具体要怎么改善产品呢？建议可以参考“GAP模型”了解缺口在哪里，在哪个环节出现问题。![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729605705141-da15d5cb-eb8a-406e-9c70-a6a685380323.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n** （1）认知缺口：**产品经理不知道用户想要的是什么。若出现了认知缺口，则首先是让产品经理清楚知道用户流失的真正原因。\n\n** （2）执行缺口：**产品经理知道用户想要什么，但实际做出来的产品与设计中的不一致。若出现了执行缺口，则要了解具体哪个执行步骤出现问题，是资源的欠缺还是技术难以实现。\n\n** （3）传递缺口：**产品的宣传和指引不能让用户对产品真正认知了解若出现了传递缺口，则要了解用户现在的感知是怎么样的，在哪些宣传和指引上出现了问题。\n\n** （4）流失缺口：**用户体验到的产品和期望的不一样。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729605720873-2448824d-6ac4-4d2c-b91c-394543dda169.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n** 案例：导致用户流失的原因主要是社区游戏单调更新慢**\n\n用户期望：多种多样的游戏，希望至少每月推出一款新游戏。\n\n产品经理认知：知道用户期望多种多样的游戏，游戏更新频率越快越好。\n\n设计执行：每周更新一款新游戏、不同类型的游戏上百款。\n\n用户认知：觉得快半年没更新过游戏了，来来去去就只有几款游戏。\n\n从这个案例可以发现，整个过程中主要是用户认知出现了问题，也就是出现了传递缺口，说明产品的宣传指引做得不好，那我们的改善措施就应放在产品的宣传指引上，增加新游戏的宣传，或在指引中明确告诉用户游戏更新的频率。\n\n注：转载[<u>http://cdc.tencent.com/2013/07/03/用户流失原因调研四步经/</u>](http://cdc.tencent.com/2013/07/03/%E7%94%A8%E6%88%B7%E6%B5%81%E5%A4%B1%E5%8E%9F%E5%9B%A0%E8%B0%83%E7%A0%94%E5%9B%9B%E6%AD%A5%E7%BB%8F/)','\n',char(10)),NULL,'用户反馈，是指使用某一产品的客户对其产品所提出的关于产品的情况反馈。而在互联网用户至上的理念下，用户的反馈对于产品的改进、用户体验的提升都十分有帮助，也是各大互联网公司十分看重的。',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T17:36:29.498Z','2025-05-08T17:36:29.577Z','2025-05-08T17:36:29.577Z');
INSERT INTO posts VALUES(172,'chan-pin-ti-yan-fen-xi-bao-gao-ru-he-xie','产品体验分析报告如何写？',replace('## 一、产品简介\n分析的产品是什么？分析产品哪些功能？为什么分析？\n\n## 二、产品分析的目的是什么\n在竞品分析之前，一定要明白分析的目的是为什么？一定要明白分析的目的是为什么？一定要明白分析的目的是为什么？（重要的事情说三遍）分析的对象具体是什么？是什么产品的什么功能点？\n\n（1）竞争策略：通过对竞争对手的分析，了解竞争对手的不足，制定合理的策略\n\n（2）拓展市场：了解市场发展的趋势，找准市场切入点\n\n（3）把握需求：了解功能点和界面结构，了解用户习惯\n\n（4）用于求职：竞品分析报告往往可以为求职者加分\n\n## 三、产品分析步骤\n### 3.1 体验环境\n主要是指竞品分析过程中，个人所体验的外部环境：如设备型号，设备的操作系统，体验的系统，体验的时间。\n\n其目的是为了让竞品分析报告数据真实可信、以及统一分析的前提外在环境。\n\n比如说：一个APP的iOS和Android产品结构、产品设计肯定存在差异，如果不提前进行描述，用户很容易认为分析结果和个人分析差异较大。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596187210-5b2d0543-306e-4b7c-a6b2-1bb78ad760f3.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n### 3.2 市场分析\n在竞品分析之前需要对选择的竞品所在的市场进行分析，这个时候需要考虑的就是竞品数据的获取。竞品数据的分类可以根据行业数据、产品数据、运营数据多个角度展开，这里我做了一种最简单的分类：一手数据和二手数据。\n\n#### （1）二手数据\na、现有数据报告:如艾瑞、易观、199it、Talkingdata、企鹅智库、爱知客，艾瑞和易观一般比较综合，当分析某一个公司产品时不妨看公司的数据报告，比如分为微信、QQ等鹅厂产品时可以看企鹅智库。\n\nb、混入竞品种子群:企业对外公布数据一般有些不实，混入种子群可以获得更为准确的数据。\n\n个人在分析的时候，行业数据、市场数据一般都是通过研究报告得知。\n\n#### （2）一手数据\na、通过一些网站进行数据监测、统计：比如下载量，苹果市场可以通过app store，但是app store下载量数据一般需要付费，但可以通过平均数估算；而安卓市场，蝉大师是比较全面的，其次是是六大应用市场，应用宝、豌豆荚、华为、魅族、小米、360。\n\nb、通过其他行业数据进行估量，通过其他公司公布新数据对数据进行估量，并通过对产品进行为期一周、一个月的测量。\n\n### 3.3 目标用户分析\n运用用户——场景——需求的方式，梳理目标用户及用户需求和场景\n\n如YY短视频的用户分析：\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596187405-ab6e1d6c-db12-4dc7-a960-7dfb60eb4f8b.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n### 3.4 产品层\n#### 3.4.1 产品业务流程分析\n通过业务流程分析，明白产品功能的业务逻辑，也能够锻炼出对公司战略层次的理解。如YY短视频的业务流程分析：\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596187390-a6024317-8ef5-498d-b4f4-fa3ae9598c21.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.4.2 产品结构图\n主要是为了了解产品的结构层次是怎么样的？在产品上的表现是如何的？和竞争对手比起来产品结构体现的产品功能是否完整？产品结构是否冗杂？产品结构有何改进点？\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596187477-ad7ca9d2-a5db-4ae7-b280-9852901e8579.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.4.3 产品功能业务流程图\n主要是为了从纵向去了解功能的使用流程，分析使用流程是否过于复杂？使用流程是否存在缺漏？\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596187474-cbe05f4a-d350-4335-87bf-113881082d7e.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.4.4 产品的交互和视觉分析\n产品的交互与产品的流程分析密切相关，通过交互分析要明白产品的交互的场景有哪些？交互次数是否冗杂？竞品的交互哪里做得好\n\n而产品的视觉分析，主要分析与公司战略是否一致？是否体现产品调性？产品主色调、色彩搭配都是怎么样的?\n\n### 3.5 逻辑层\n#### 3.5.1 产品功能逻辑\n反向逻辑是产品功能背后对应的是用户需求，用户需求背后指向不同的用户。正向逻辑是不同类别或不同层级的的用户有不同的需求，不同的需求通过不同的产品功能来满足。\n\n**| 不同类别或不同层级的用户有不同的需求**\n\n大多数产品通常不只是对面一类用户，即使面向同一类用户，用户的层级也不相同，那他们的行为特征就不同，想通过产品实现的诉求也不同。\n\n**| 用户需求通过功能模块实现**\n\n用户的一系列需求，都会被产品映射到一个又一个功能模块上来，用户如果完成了阶段性目标，从一个模块迁移到下一个模块，则整个产品是顺畅合理的，如果没有完成阶段性目标，就产生了模块间迁移，说明操作被中断，产品可能存在设计不合理的地方。\n\n我们可以把模块间的迁移顺序叫做“产品流程”，把模块的输入输出规则叫做“产品策略”。产品策略为阶段性目标负责，产品流程为整个产品的目标负责。\n\n**| 功能模块是一组相关联功能的集合**\n\n功能模块之间是相对独立的，但是从内部看，也依然是一组功能点，只不过这些功能点需要相互关联才完成用户目标。比如最常见的注册模块，就是有一组相关联的表单填写构成的。\n\n**| 功能是一组子功能点的集合**\n\n在很多情况下，功能是复杂的。比如电商产品里的支付模块，就是有多个支付通道，每个支付通道都是一组相似的支付步骤构成的，我们可以把每个支付通道是支付模块的功能，而支付步骤里的表单填写，则是功能里的子功能。\n\n**| 子功能点是用户目标的实效的最小单位**\n\n功能点是一组页面流或者是页面上一组交互操作构成，一般可以用常见的流程图和泳道图描述，也可以通过结构化的文字来表述。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596188875-38b6bfca-157b-46d1-bb46-e5ebbb4b6888.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.5.2 展示推荐逻辑\n展示推荐逻辑可以分成两部分：展示逻辑和推荐逻辑。展示和推荐的对象就是产品的元素及元素的合集。此处要研究的是产品如何组织、呈现、推荐这些内容的，以及背后的逻辑。\n\n产品元素：产品元素指的是产品内部可拆分出来了独立的单元，这个产品里有多少种？分别起的什么作用？元素分类一般按照用户需求（意图）来分类\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189010-a619b932-5eb3-4337-9c0f-3079fed957c0.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n如PMCAFF的展示推荐逻辑：\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189104-c8c13a16-4581-4851-8b74-e55e596e522c.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.5.3 商业逻辑\n商业变现层面指的是产品的盈利方式和盈利依托，及他们与产品业务或提供的服务之间的关系。\n\n一般盈利模式包括广告、电商、收费增值服务、佣金等方式，背后依托的产品优势各不相同。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189189-54b84d4d-84bc-4df0-aa76-951fa5aaa685.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n### 3.6 战略层\n#### 3.6.1 产品定位与产品发展\n这里要明确产品的定位是什么？产品有哪些里程碑发展和迭代路径？产品的数据变化是怎么样？产品目前的生命周期又是如何？\n\n产品定位及产品里程碑发展一般直接百度就可以发现，产品数据变化与迭代路径需要通过蝉大师、APP Annie等工具进行获取，并整理编辑；产品的生命周期可以通过产品的数据分析得出处于哪一阶段，并指导现阶段的产品和运营工作，具体分析祥见下一篇分析。下附YY小视频迭代路径和产品生命周期。\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189159-176114e3-ace2-44be-8962-4782b158afad.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189521-544e2d20-2736-4b3e-a52f-238650edffcf.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.6.2 SWOT分析\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729596189605-5406b479-477e-4bbb-8742-93abbe59cc13.jpeg)\n<!-- 语雀导入的图片，可能需要手动下载并替换 -->\n\n#### 3.6.3 未来的发展趋势\n要结合目前市场发展趋势和产品生命周期情况结合分析。\n\n## 3.7 总结\n总结全文分析结果，产品亮点是什么？有哪些需要改进的点？对于个人有什么启示？','\n',char(10)),NULL,'分析的产品是什么？分析产品哪些功能？为什么分析？',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T17:42:57.357Z','2025-05-08T19:29:37.261Z','2025-05-08T19:29:20.456Z');
INSERT INTO posts VALUES(174,'chong-fu-tou-bao-neng-li-jian-she-19891ye5','重复投保能力建设',replace('# 变更记录\n> 记录每次修订的内容，方便追溯。\n>\n\n[此处为语雀卡片，点击链接查看](https://www.yuque.com/docs/217792385#wTz7A)\n\n# 文档说明\n> 文档中涉及的缩略语或术语的定义与解释。尽量不要自己定义缩略语，如果文档中涉及公司内部的缩略语，请明确其定义。\n>\n\n重复投保\n\n# 需求背景\n1. 重复投保属于中央和地方政府要求的政策，涉及三大类型：\n    - 精准承保\n    - 标的重复投保\n    - 财政补贴优先\n2. 既往已上线新疆、内蒙古机构的针对奶牛标的的重复投保校验，当前湖南、四川机构明确提出该要求。\n3. 政策性保险发生重复投保后，相关财政部门会要求退保，导致无效作业；农险 25 年截止当前已经退保保费 5 千万，其中很多都是重复投保导致。\n\n# 需求目标&收益\n> 具体的需要量化的项目目标（符合SMART原则），包含验收和成功的标准，以及收益预期。\n>\n\n1. 建设统一的重复投保能力，满足合规要求\n2. 前置拦截重复投保，避免造成业务员录单后又被退保行为，提升效率。\n\n# 需求范围\n## 需求功能列表\n> 项目涉及哪些系统、产品和接口，以及影响范围。\n>\n> 梳理项目范围，提前确认项目关联方、影响方，确保项目启动时能准确覆盖所有责任方，避免遗漏。\n>\n\n| 业务端 | 功能模块 | 功能点 | 涉及协同方 | 需求优先级 | 备注 |\n| --- | --- | --- | --- | --- | --- |\n| M 端/B 端 | 重复投保服务 | 规则配置 |  | P0 | 1. 规则配置是否需要放开给业务，调整频次高否？<br/>2. 规则配置一期通过高数据库/阿波罗等实现，考虑最小化 |\n| B 端 | 承保投保流程 | 1. 调用规则配置判断走重复投保流程<br/>2. 重复投保校验<br/>3. 重复投保标识入库 | 平台、承保域、保单域 | P0 | |\n| B 端 | 批改投保流程 | 同上 | 平台、批改域、保单域 | P0 | |\n\n## 需求关联方\n| 需求关联方 | 对接人 | PRD | 说明 |\n| --- | --- | --- | --- |\n|  |  |  | PMS编号待定 |\n|  |  |  |  |\n\n# 需求方案概述\n> 对需求方案的整体框架概述，比如如果涉及到复杂的功能模块时，需要设计<u>产品架构、状态机以及单据模型</u>等。\n>\n\n## 需求方案调研\n### 机构/监管规则调研\n:::warning\n农险的重复投保涉及三个维度，其中本次需求主要涉及<u><font style="color:#DF2A3F;">标的重复投保</font></u>能力的建设。\n\n:::\n\n [农险重复投保规则梳理](https://cic_irc.yuque.com/mp3lqs/bw53ow/gd9arwvraseg9exa)\n\n![画板](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fjpeg%2F40701240%2F1746525464112-19bb42dd-438c-466f-a6df-11cfb95600a0.jpeg)\n\n| 三大原则 | <font style="color:#000000;">政府要求</font> | <font style="color:#000000;">规则描述</font> |\n| --- | --- | --- |\n| <font style="color:#000000;">标的重复投保</font> | <font style="color:#000000;">禁止同一标的重复投保；自2024年起，全国范围内种植三大主粮作物（水稻、玉米、小麦）的农户和经营主体，只能在物化成本保险、完全成本保险或种植收入保险中选择一种投保，禁止跨险种重复投保</font> | 1. <font style="color:#000000;">机构</font><br/>2. <font style="color:#000000;">产品编码>条款>标的重复，整单校验</font><br/>3. <font style="color:#000000;">保险期间交叉校验，整单校验</font><br/>4. <font style="color:#000000;">投保区域/</font>**<font style="color:rgba(0, 0, 0, 0.85);background-color:rgb(250, 250, 250);">标的地址</font>**<font style="color:#000000;">重复</font><br/>5. <font style="color:#000000;">农户信息重复：农户姓名、证件类型、证件号码重复</font> |\n| <font style="color:#000000;">财政补贴险种优先</font> | <font style="color:#000000;">财政补贴险种优先性；享受中央及地方财政补贴的险种（如完全成本保险、收入保险）具有优先性，投保人不得在同一标的上叠加投保其他市场化险种</font> | 1. <font style="color:#000000;">政策性补贴优先，若存在同商业性的条款+标的+保险责任时，不允许商业性投保</font> |\n| <font style="color:#000000;">精准承保</font> | <font style="color:#000000;">精准投保管理；要求保险公司对集体投保业务审核分户清单，规模经营主体需单独出单，保险标的需精准到地块或养殖单元，并通过土地确权数据核验权属唯一性‌</font> | 1. <font style="color:#000000;">种植险：验标地块重叠/验标影像</font><br/>2. <font style="color:#000000;">养殖险：</font><br/>    1. <font style="color:#000000;">养殖方式&规模养殖：</font><br/>        1. <font style="color:#000000;">养殖方式=散养</font><br/>        2. <font style="color:#000000;">养殖方式=圈养</font><br/>    2. <font style="color:#000000;">真实耳标号：标的名称+标的识别码-起/标的识别码-止</font><br/>    3. <font style="color:#000000;">验标地块重叠/验标影像</font><br/>3. <font style="color:#000000;">林业险</font> |\n\n### 现状调研\n#### 新疆机构\n1. 承保平台：\n2. 承保域/保单域：\n    1. prd：[https://cic_irc.yuque.com/gy8h6f/yuuvr9/lb1canzp5ihnnbbu](https://cic_irc.yuque.com/gy8h6f/yuuvr9/lb1canzp5ihnnbbu)\n3. 标的域：\n    1. prd：[https://cic_irc.yuque.com/ntdngp/ky2h7h/vhqrcyztrd3q6n7x](https://cic_irc.yuque.com/ntdngp/ky2h7h/vhqrcyztrd3q6n7x)\n    2. 系分文档：[https://cic_irc.yuque.com/ntdngp/ky2h7h/ksckf3rvkzwofdmc](https://cic_irc.yuque.com/ntdngp/ky2h7h/ksckf3rvkzwofdmc)\n\n#### 内蒙古机构（仅养殖业）\n1. **需求背景：**\n    1. 内蒙古财政厅文件要求养殖业保险期间不能重叠，养殖业保单上传财政平台时要限制耳标号重复，如果牛类，猪类，保险耳标号重复，则平台部接受数据。\n2. 满足核心业务系统针对牛类，猪类业务增加校验重复耳标号功能\n3. **需求价值：**\n    1. 满足内蒙古农险平台对牛类、猪类保险进行了耳标号重复校验的监管要求\n4. **业务规则：**\n    1. **保单范围：**非退保、非注销的保单（含已过保险期间的保单），不考虑在途的历史投保单、批改申请单。保单是指最新版本的保单。\n    2. **清单范围：**本投保单的清单，以及符合校验规则的历史保单的清单\n    3. **校验规则：**在保险期间有重叠（保单属性）、标的相同（分户清单属性）、农户相同时（分户清单属性），如果耳标号相同（分户清单属性），则认为重复投保，阻断校验。\n5. **交互域：**\n    1. 承保平台：（提供需要校验标的、耳标号重复的范围、农户给标的域，得到标的域返回的重复耳标、历史保单号、历史保单版本号号。（2）承保平台使用历史保单号、当前投保单的保险期间，调用保单域接口查询保险期间重叠的历史保单。\n    2. 标的域：根据农户、标的细类、耳标号段（耳标号）重复校验，返回重复的清单序号、耳标号段（耳标号）、历史保单号、历史保单版本号\n    3. 保单域：支持查询保险期间重叠的保单。\n    4. 批改域：配合联调测试\n    5. 兴农保：调用承保平台的清单保存接口进行耳标号（段）重复性校验\n\n### 系统现状整理\n目前农险的承保域/保单域/批改域存在两个农户条款标的表和农户表，保单域还存了裂变表。\n\n#### 数据库流转\n:::warning\n三张表：t_agr_agricultural_inventory（清单表）、t_agr_agricultural（农户表）、裂变表\n\n:::\n\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F__puml%2F2bf6d36f82336592223cf1f9c13d0531.svg)\n\n#### 重复投保校验\n新疆重复投保的校验环节：提核异步任务\n\n内蒙古重复投保的校验环节：分户清单导入/保存时触发\n\n## 需求方案设计\n### 概要设计\n:::warning\n1. 承保板块封装重复投保的能力，提核接口里面封装\n2. 标的重复校验：\n    1. 保单域封装统一接口，给承保域/批改域调用\n    2. 存在标的重复时，在保单上打标【重复投保】，在农户级别打标【重复投保】\n3. 精准承保/养殖险耳标号校验：\n    1. 投保单的耳标号区间和历史保单的耳标号区间对比，存在重复则在清单级别打标【耳标号重复】\n4. 待讨论点：\n    1. 清单量很大，重复投保的数据提前清洗？\n    2. 针对于耳标号区间的校验？\n\n:::\n\n![画板](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fjpeg%2F40701240%2F1746612132893-3c6693a2-fdf0-4b10-b5eb-2deccebbc7a2.jpeg)\n\n# 需求方案详细说明\n> 产品需求及功能讲解，要具备逻辑清晰的特点，尽量采用提炼总结以及分段的陈述式描述，避免大段大段的论述性描述。\n>\n\n## 前端原型\n1. 规则配置的原型，待定；前期可以放到阿波罗之类的也可以，或者通过数据表实现\n2. 前端提示文案\n\n## 后端产品流程图\n![语雀图片](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F__puml%2Fdc145b3f86110454c669b2cb6f50bdd5.svg)\n\n## 功能说明\n| **序号** | **模块** | **功能** | **功能详细说明** |\n| --- | --- | --- | --- |\n| 1 | 资料编辑 | + 更换头像 | |\n| | | | |\n| | | | |\n| | | | |\n\n## 投保单/保单/批单模型调整\n> 新增哪些关键业务字段\n>\n\n# 非功能需求\n> 接口响应时长、并发量、安全性等\n>\n\n# 埋点\n> 服务端埋点，做数据分析和统计分析\n>\n\n| **参数名** | **参数说明** | **参数值** |\n| --- | --- | --- |\n| | | |\n| | | |\n| | | |\n\n# 运营计划\n\n# 附录：\n## 数据类型及格式规范\n定义PRD文档中各界面要素对应的数据类别、数据格式遵循的规范，具体如下：\n\n**【数据类别】**\n\n| **数据类型** | **说明** | **示例** |\n| --- | --- | --- |\n| 编号类 | 指数据项被赋予具有一定规律、易于计算机和人识别处理的符号，形成编号元素，每个编号均对应特定的业务对象，适用于具有特定编号规则的数据项； | 例如：保单编号、批单编号和产品编号等 |\n| 代码类 | 指数据项以对各取值范围进行结构化处理的方式体现，每个代码取值只代表业务对象的一种可能性，适用于有明确分类、分组或多取值的数据项； | 例如：行业代码、业务性质代码等 |\n| 指示器类 | 指数据项仅包括“是”、“否”两种结果，1 表示是， 0 表示否； | 例如：分保标志，家庭单标志等 |\n| 文本类 | 指数据项以纯文本的形式体现，适用于很难结构化的说明描述类信息； | 例如：投保人名称、被保险人名称 |\n| 金额类 | 指数据项以货币金额的形式体现，适用于各类财务信息； | 例如：总累计保费、资产总额、保险金额等 |\n| 数值类 | 指数据项以整数或小数的形式体现，适用于各类以数量反映的信息； | 例如：身高、体重、建筑面积等 |\n| 比例类 | 指数据项以比值的形式体现，适用于各类比率信息； | 例如：结算利率、保险费率等 |\n| 日期类 | 指数据项以特定日历日的形式体现，适用于各类日期信息； | 例如：保单终止日期、投保人出生日期等 |\n| 日期时间类 | 指数据项以特定日历日加上特定时分秒的形式体现，适用于各类需同时记录日期和时间的信息。 | 例如：起保时间、终保时间、签单时间等 |\n\n**【数据格式】**\n\n| **数据类型** | **说明** |\n| --- | --- |\n| a | 字母字符 |\n| n | 数字字符 |\n| c | 汉字字符 |\n| an | 字母数字字符 |\n| anc | 字母数字汉字字符 |\n| a3 | 3位字母字符，定长 |\n| n3 | 3位数字字符，定长 |\n| an3 | 3位字母数字字符，定长 |\n| anc3 | 3位字母数字汉字字符，定长 |\n| a..3 | 最多为3位字母字符 |\n| n..3 | 最多为3位数字字符 |\n| an..3 | 最多为3位字母数字字符 |\n| anc..3 | 最多为3位字母数字汉字字符 |\n| a3.. | 最少为3位字母字符 |\n| n3.. | 最少为3位数字字符 |\n| an3.. | 最少为3位字母数字字符 |\n| anc3.. | 最少为3位字母数字汉字字符 |\n| number(18) | 最大长度为18位的整数 |\n| number(18,6) | 最大长度为18位的数字，保留6位有效小数 |\n| yyyy-MM-dd  | 年月日 |\n| yyyy-MM-dd HH:mm:ss | 年月日时分秒 |\n\n## 待办事项和沟通记录\n### 沟通记录 1\n| 沟通日期 | 2025 年 1 月 15 日 |\n| --- | --- |\n| 与会人 |  |\n| 会议主题 |  |\n| 会议纪要&总结 |  |\n\n### 沟通记录 2\n| 沟通日期 | 2025 年 1 月 15 日 |\n| --- | --- |\n| 与会人 |  |\n| 会议主题 |  |\n| 会议纪要&总结 |  |\n\n','\n',char(10)),NULL,replace('> 记录每次修订的内容，方便追溯。\n>','\n',char(10)),NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T19:39:22.574Z','2025-05-08T19:39:22.600Z','2025-05-08T19:39:22.600Z');
INSERT INTO posts VALUES(175,'di-fang-shui-dian-fei-9908ov4t','地方水电费','测试内容API更新',NULL,NULL,NULL,0,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T19:46:59.601Z','2025-05-08T20:20:09.908Z',NULL);
INSERT INTO posts VALUES(177,'chan-pin-jing-li-ru-he-zuo-xiang-mu-guan-li-41636zvj','产品经理如何做项目管理？',replace('---\n\n## 一、what 什么是项目管理？\n了解项目管理之前，我们得先明白，每个PM天天挂口头上的“项目”到底是什么？项目是为了创造独特的产品，服务，成果而进行的临时性工作。而项目管理是指在项目活动中运用专门的知识、技能、工具和方法，使项目能够在有限资源限定条件下，实现或超过设定的需求和期望的过程。\n\n## 二、why 为什么要进行项目管理？\nPMBOK上对于项目管理的重要性这么描述的。\n\n1. 项目管理就是将知识、技能、工具与技术应用于项目活动，以满足项目的要求。\n2. 项目管理通过合理运用与整合特定项目所需的项目管理过程得以实现。\n3. 项目管理使组织能够有效且高效地开展项目。\n\n通过自己的实践经验，可以理解为以下几点。\n\n### 2.1 目标管理，确保所有人对目标理解一致。\n一个项目涉及多个部门甚至是多个组织/公司，项目管理需要通过对目标的管理，确保大家对目标的理解一致。\n\n### 2.2 整合资源，协同增效\n一个项目涉及多个部门甚至是多个组织/公司进行协同，确保能够有足够和资源保证项目的正常运转。\n\n### 2.3 过程管理\n制定有效的过程管理，确保进度控制没有问题，从而实现项目的保质保量如期上线。\n\n## 三、怎样进行项目管理？\n### 3.1 项目管理的五个阶段\n项目管理可以分为五大阶段：启动、规划、执行、监控、收尾。\n\n1、启动：设定项目目标，让项目团队有事可做；\n\n2、规划：制定工作路线，让项目团队“有法可依”；\n\n3、执行：“按图索骥”，让项目团队“有法必依”；\n\n4、监控：测量项目绩效，让项目团队“违法必究”，并且尽量做到“防患于未然”；\n\n5、收尾：验收成果，了结项目（阶段）“恩怨”，让一切圆满。\n\n下面对项目管理进行详细的解答。\n\n### 3.2 项目启动阶段\n项目的启动和需求的启动一致，需要对项目进行挖掘和分析，从而确认项目的背景、目标、相关人员、运营计划等等。\n\n**（1）项目的背景是什么？为什么要启动项目？**\n\n产品经理如果作为项目经理时，需要第一时间搞清楚项目的来龙去脉，搞清楚为什么启动项目，同时需要快速评估是否是“伪需求”。\n\n**（2）项目目标是什么？**\n\n假设产品经理作为项目的负责人，是一定要明白整个项目的目标是什么，然后在里面找出最核心的目标，目标一般是具象可衡量的，通常需要包含时间和具体内容，比如12月31日在kutta上线一款短险产品新契约流程。\n\n**（3）项目的相关人员都有哪些？**\n\n项目相关人员，主要考虑该如哪些人或部门会受到项目结果的影响，哪些人可为项目提供资源（人、财、物）等。当然，在互联网公司，常见的相关人员也就是老板、产品经理、项目经理、项目团队（包含设计、开发、测试、运维等）及用户等。\n\n找到了项目的相关人员后，现在你要做的就是把团队成员绑到自己的船上。你需要去了解团队里每个成员的核心KPI，也就是他们于这个项目的需求是什么，做这个项目可以给他们带来什么。如果这个项目没被囊括在这个成员的工作评价 list 里面，你需要去找他的老板沟通。根据我的经验，85%出工不出力的情况都是因为你的项目根本不会对这个成员的KPI有什么正向的帮助。当然，如果找他的老板沟通无效，还有最后一招，感情投资，请那个成员撸串、吃饭，利用感情让他帮你做好这个项目。\n\n总体来讲，会涉及以下干系人\n\n+ 项目负责人是谁？\n+ 项目经理是谁？（通常来讲是项目负责人）\n+ 项目管理层团队成员：大型项目必须要得到管理层的支持，确保项目的资源是充足的。\n+ 项目执行团队成员：具体落地的产研团队。\n+ 业务团队成员：项目上线后，相关业务团队成员。\n\n**（4）项目预估资源**\n\n项目目标和干系人确认后，项目负责人需要对项目的整体资源进行评估和预判，同时给到老板们进行决策。通常来讲，在确认项目负责人以后，我们需要产出项目整体范围和资源，可借鉴：[项目整体节奏文档](https://merlinwu330387414.wordpress.com/2021/10/18/%e9%a1%b9%e7%9b%ae%e6%95%b4%e4%bd%93%e8%8a%82%e5%a5%8f%e6%96%87%e6%a1%a3/)\n\n大概输出内容如下\n\n+ 项目里程碑\n+ 项目任务拆解&工作量拆解\n+ 项目资源盘点&人员安排\n\n**（5）项目立项会**\n\n通常来说，这个时候需要开一个项目启动大会。这个启动大会的目的是召集项目团队成员，成员之间初步认识一下，项目负责人主持会议，然后清楚地传达项目要做什么，目标是什么，为什么要做，怎么做，谁来做等等。另外，跟所有的启动大会一样，项目的启动大会，也需要给团队成员来点鸡汤、打点鸡血。产品经理需要去统一团队的思想，明确团队的管理和运作方式，以及团队的沟通机制等，产品经理需要动员团队成员积极参与项目，并高质量地完成项目。\n\n### 3.3 项目规划阶段\n在进行项目启动之后，并不是立即的进行投入开发，产品同学更多的是先将项目理清需求，进行需求文档的制作，接着进行开发资源的排期安排等，也就是项目计划阶段。\n\n**（1）工作任务分解**\n\n工作任务分解就是将任务不断地进行去分解到不可细分为止，然后根据任务来估算工期及成本，同时责任到人，每个人在固定的节点给到固定的文档及完成自身相应的工作任务。通常我们也称之为WBS（Work Breakdown Structure），工作分解结构。当任务不断细分，则整个项目的抗风险能力也越强。对于工作任务，可以分为两个类型的项目来看：一个是大项目（从0到1/从1到100）一个是小需求（产品迭代）不论是项目的体型大或者小，都是由数量不等的需求组成的，也就是我们说的需求池。定好项目目标及功能之后，需求池也基本有了大概的框架。我们要做的，就是将需求池里面的需求，筛选一部分需求放到项目的1.0开发计划中，接着将这些按照既定的顺序进行排列（不可能一次性完成所有需求）。\n\n+ 分解方式\n\n工作分解的方式有：按照产品的功能模块分解、按照产品的平台类型分解、按照实施过程来分解，将多种分解方式结合等方法。\n\n+ 工具\n\n工作任务分解的话，可借助excel、Xmind等工具进行梳理分解，因个人喜好来选择合适的即可。工作任务分解是比较重要的一步，只有分解清楚，后面的优先级安排及任务计划排期才能做的准确。\n\n**（2）任务优先级安排**\n\n在前面的工作任务分解完成之后，接着就是将这些杂乱的进行优先级安排。先开发哪个功能，再开发哪个功能。划分优先级的方式也有多种：按产品功能划分，按紧急程度划分等。\n\n+ 按照产品功能划分\n\n按照产品功能划分的前提，一般是在项目时间充裕的前提下，按照功能的优先级进行排序。\n\n+ 按照紧急程度来划分\n\n按照紧急程度来划分的话，按照时间管理四象限法来看，依次的排序是：紧急且重要＞紧急不重要＞重要不紧急＞不重要不紧急，但前提也是保证功能划分可行的前提下。\n\n（3） 任务计划排期\n\n完成了任务分解跟任务优先级安排，接着就是任务排期（一个项目不可能无休止的进行下去），上文提到，可利用excel、project等工具进行罗列项目功能点跟优先级，接着跟开发人员进行沟通，进行各功能点的项目排期。\n\n（4）风险控制\n\n在项目管理当中，要尽量将风险前置，尽量保证风险可控。不管项目管理做得再好，项目风险总是存在的，有的风险可以杜绝，有的风险可以防范，项目风险可以划分如下几大类：\n\n+ 需求提出方对项目过程没有监控\n\n在项目需求对接的前期，需求提出方只给了一份需求文档，然后产品同学就开始进行项目的规划，在项目规划的阶段跟设计、开发的阶段，需求提出方并没有完全参与进来（没有一步步确认），那么就有可能造成，等项目完全做好之后，提给需求提出方之后，需求提出方指出项目并不是他想要的，需要进行重大改版，甚至是推翻重来。那么这个时候的问题就大了，不论是在成本上还是项目影响范围上，无疑都是晴天霹雳。所以在项目的每个步骤（对接需求、设计稿、程序后端建表、测试等）都最好跟需求提出方进行沟通确认，才不会造成后期返工项目大改的情况。\n\n+ 需求不明确\n\n明确项目需求是产品同学的工作内容之一，深入挖需求是必要的。只有明确了全部的需求之后，设计同学跟开发同学才能够顺利地进行设计跟开发，自然对于需求文档的改动也会比较少。需求不明确同样会造成返工调整，虽然可能在短时间内可以调整，但也容易降低设计跟开发同学的工作积极性（不断的返工容易让人疲倦）。所以产品同学提高自己的挖掘需求的能力也是很有必要的，有的需求提出方并不能够完整的描述他的需求，特别是对于传统行业的需求提出方，所以这个时候产品同学的作用就很重要了。\n\n+ 项目计划不合理\n\n项目计划包括任务分解、优先级安排、任务排期。项目计划不合理的原因在于这三个部分其中的一个或者多个出了问题。举一些计划不合理的例子：项目预估工期为五个月，给开发同学三个月的时间，在任务时间安排上已然不合理，若此时PM不进行任务优先级安排，或者是优先级安排失误，那么项目铁定延期无疑了。\n\n+ 需求提出方变更需求\n\n需求提出方通常有以下几个角色：领导、运营、市场（用户）、销售、甲方、PM等。可能由于各种不可控的因素，导致了需求变动，也会造成开发难度的增长、工期的延长。部分需求的改动，可能是PM在最初时期没有考虑清楚，当框架搭建好了之后，再去新增需求的话，开发人员改起来就会比较伤筋动骨。\n\n+ 目标变更\n\n项目目标发生了变更，这种时候一般是致命的，需要尽快拉齐项目的目标认知，确保团队成员理解一致。\n\n+ 资源风险\n\n项目一般周期比较长，在长周期项目里面，不可避免的会出现相关成员的变动甚至流失，这些风险需要及时关注到，同时补充相应的资源确保项目的正常运转。\n\n+ 技术风险\n\n技术风险主要在于开发人员身上。在项目立项的时候，往往会进行技术评估，在立项会中，参与项目的技术人员在了解了项目情况之后，会进行技术选型，以及技术难点的探讨，若涉及对接第三方接口，则会进行第三方接口文档的查看，这个时候会综合判断第三方接口提供的功能是否能够符合预期功能。在技术阶段评定之后，在后续的开发，可能会推翻前面的技术评定，也可能由于前期的判断失误，在实现某个功能的时候遇到了瓶颈，也可能在技术层面上的拖延，导致工期的延长。\n\n### 3.4 项目执行阶段\n**（1）各细分过程跟踪**\n\n在开发的过程当中，项目经理往往要根据前期所制定的排期计划（包括之前提过的任务计划排期、工作任务分解、优先级排期）来进行设计过程、开发过程、测试过程的跟踪，也就是项目管控。一个项目，少则一两个月，多则一年半载。\n\n同时，往往在真实的项目开发过程当中，并不是只有单一的项目在运行，可能会有多条产品线，多个项目并行开发的情况（也可能涉及到不同的开发人员），也就是说，一个开发/设计/测试人员，手头可能同时负责多个项目的情况，A项目完成到15%，B项目完成到35%……所以，项目的多、乱、杂，需要科学合理的过程跟踪。\n\n若没有进行项目的过程跟踪，可能造成未能按照预期完成项目计划，项目延期。项目如期完成，质量却不尽人意，最终造成项目返工修改。产品、开发、设计等对于PRD的功能理解有偏差，模块的完成与预期不符合，最终也造成返工。（此点更偏向于在开发过程当中多沟通方面）由此可见，项目过程跟踪是否得当，对于最终项目产出的质量也是至关重要的一点。\n\n**（2）阶段性产出文档审核**\n\n在整个项目的生命历程当中：产品经理需要输出PRD（产品需求文档），其中包括功能框架、泳道图、业务流程图、原型图、其余说明等等。项目经理需要输出排期表，任务优先级表，人物分工表等等。设计师需要输出设计选型，配色方案，风格定位，设计稿等等。开发工程师需要输出开发选型、数据库结构设计、接口文档、开发操作文档等等。测试工程师需要输出测试用例、测试方案、测试结果报告等。目前太多PM会局限于各类文档模板，追求文档的完整度美观度等。\n\n文档在这当中只是一个传达信息的介质，之所以选择文档来代替口头，是因为文档能够更好地留存及记录。而只要能够达到目的，明确了这点，文档具体的展现形式，样式就不那么重要了。最适合自身公司及业务需求的文档，才是好文档。\n\n### 3.5 项目监控阶段\n项目的监控主要通过流程制度+工具进行监控，下面进行详细描述。\n\n| 具体 | 说明 |\n| --- | --- |\n| 项目主R机制 | 涉及多个项目管理时，拆分整体主r&模块主r定义主r工作内容，进行分布式项目管理 |\n| 沟通机制 | 相关主r人每天晚上12点前同步当前的进度&风险点早上站会勾兑整体进度（拉齐、同步信息）当日To do（待确认），当日完成，并及时同步信息；To do项明确主R，由主R牵头跟进并对结果及时同步；团队成员请假需告知PM&相关主R，由2方评估项目进度进行批准。 |\n| 进度管理 | 里程碑拆解（根据功能模块进行拆解）；[项目排期模版](http://wiki.shuiditech.com/pages/viewpage.action?pageId=888804874)研发人员可分步提测，测试人员提前介入，缩短测试周期；周报：由PM发送项目进度报告至相关方（业务、PM、项目成员、依赖部门、各leader）保司同步项目进展 |\n| 里程碑庆祝 | 项目重要里程碑上线后，可以进行小规模的庆祝，鼓舞团队士气。 |\n| 日站会制度 | 举例比如每天上午10:15召开站会，同步任务进度及阻碍如有特殊情况需要在群中请假并同步任务进度；迟到者自己选择惩罚措施（发红包/俯卧撑） |\n| 周站会制度 | 同步每周的进度的风险阻碍，以及需要管理层支持的内容 |\n| 项目管理工具 | tower、jira、excel、omniplan、tapd这些项目管理工具都可以 |\n\n### 3.6 项目收尾阶段\n项目的收尾阶段，需要确保在项目的质量没问题的前提下， 项目能够如期交付出来，因此项目收尾阶段主要着重于对项目结果物的交付，主要包括质量交付、文档交付。\n\n（1）质量交付\n\n| 交付人 | 产出物 |\n| --- | --- |\n| 系统架构师 | 系统整体架构和后续演进架构 |\n| ui | ui高保真原型图 |\n| 研发 | 研发自测完成，且代码质量没有问题 |\n| 测试 | 测试工程师需要进行功能测试、性能测试、兼容性测试、压力测试、回归测试等等 |\n| 产品经理 | 产品经理进行验收是对整体系统流程的一个把关，也是对当前系统一次总的检查，在验收过程中需要综合UI验证以及测试时的一个结果来确认在产品经理在验收后是否可以交付该系统。 |\n\n（2）文档交付\n\n在一个项目结束之后，必然要进行项目文件的留档记录、包括但不限于项目需求文档（PRD）、验收文档、测试报告、数据库设计文档、项目实施总结报告、产品使用说明手册等文档。原则上，文档涉及到项目生命周期当中的所有文件，PM在项目过程当中需要合理地进行分类及保管，以便后续项目迭代、复盘使用。具体需要到什么程度的文档，各公司要求各异，作为产品，寻求一个平衡点即可。\n\n## 四、项目管理中的几个注意点\n### 4.1 项目成员的把控\n项目管理由人来管理，那么，“人”在项目这个过程当中，尤为重要。“水能载舟，亦能覆舟。”项目比作船，那么人便是水。人促使了项目的推进，但在某些情况下，也能够导致项目的失败。作为项目管理者，不仅仅是要关注项目本身状态进程，同时也要关注团队成员当中，每个人的状态，包括效率、情绪等方面。\n\n### 4.2 项目管理工具、方法论的合理使用\n项目管理工具市面上包含了TAPD、jira、禅道等等，项目因其体量不同，公司因其流程不同，人员因其性格不同，都造成了项目管理的差异。明确项目管理的目的才是项目管理者要关注的点：在规定的时间内保质保量的完成项目目标。那么，在这个结果之前，使用什么方法论，使用什么工具，就都较为次要了。切勿过于迷信工具以及方法论，他们存在的意义，是为了更好地帮助项目管理者完成项目，提高项目管理的效率。\n\n### 4.3 做好项目延期后的准备\n作为项目管理者，当然是希望项目能够如期、保质保量地完成。但往往因为各类原因，没办法如愿，那么在一开始的时候，就需要做好项目延期的准备，出现风险之后的预案，避免惊慌失措的情况。因为人员效率、外界原因导致的项目延期，那么可以适当调整需求，将较难的需求，换个方式实现。\n\n写在最后，“不想当将军的士兵不是好士兵，不想管项目的PM不是好PM。”一个好的PM，做好自己产品规划的同时，也需要兼顾部分项目管理的任务，即使团队中有项目经理这个角色。项目的运作是否能够顺利，在于是否有一个好的项目管理。而项目管理也并非流于理论，需要在实践当中去不断调整。由于项目所处的状态、个人所处的公司环境不同，每个项目的管理方法也有所区别。\n\n','\n',char(10)),NULL,'---',NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-08T19:57:38.323Z','2025-05-08T20:03:25.246Z','2025-05-08T19:57:38.344Z');
INSERT INTO posts VALUES(178,'chan-pin-jing-li-ru-men-pian-shen-me-shi-chan-pin-jing-li-xiang-guan-jue-se-you-na-xie','产品经理入门篇：什么是产品经理，相关角色有哪些？',replace('> 人人都是产品经理\n>\n\n## 一、产品经理<font style="color:rgb(6, 6, 7);">（Product Manager）</font>\n**产品经理**涉及产品策略和整体管理，关注产品的长远发展和市场表现。\n\n产品经理主要负责**用户调研、需求分析，确定开发何种产品，选择哪种商业模式等**，并推动相应产品的开发组织。\n\n产品经理还要**根据产品的生命周期，协调研发、营销、运营**等，确定和组织实施相应的产品策略，更多专注于通过互联网改变传统行业的商业模式与业务运作方式。\n\n以及其他一系列相关的产品管理活动。产品经理大多混迹于江湖上的互联网公司如美团、滴滴、抖音等。\n\n<font style="color:rgb(6, 6, 7);"></font>\n\n## <font style="color:rgb(6, 6, 7);">二、产品经理的职责和分类</font>\n<font style="color:rgb(6, 6, 7);">产品经理的分类可以根据多个维度进行，包括行业、产品形态、工作内容及方法等。以下是一些常见的产品经理分类：</font>\n\n![画板](/api/proxy?url=https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2024%2Fjpeg%2F40701240%2F1729600176857-6136dea4-d125-4650-8260-347ce51d9cd8.jpeg)\n\n## <font style="color:rgb(6, 6, 7);">三、产品经理的相关角色：BA 和 PMO</font>\n### 3.1 需求相关角色：BA 和 PMO\n#### 3.1.1 需求分析师(BA,Business Analyst)\n一个类似于技术翻译的工作，需求分析师们将**业务部门提出的需求进行技术分析**后，把这些需求翻译成开发工程师看得懂的语言，如常见的UML统一建模语言，需求规格说明书等。然后在遵守这些基本的项目流程要求的基础上，将需求通过软件工程师来得以实现，满足他们的需求。\n\n更多从事于传统行业（财务、供应链、物流、金融、航空、保险等）的信息化建设，都会通过系统化方式提升信息同步效率，让管理流程化规范化，以提高管理效率和降低运营成本。\n\n需求分析大量混迹于五百强企业，比如银行、航空公司、快递公司、保险公司等。\n\n#### 3.1.2 项目经理（<font style="color:rgb(6, 6, 7);">Project Management Office）</font>\n**项目经理**专注于项目执行和结果的交付，确保项目目标的实现。\n\n项目经理负责整个项目的规划、执行和交付。他们需要协调并管理不同团队之间的合作，确保项目按时、按质地交付。项目经理需要关注项目的进展、风险和问题管理，以确保项目的成功。\n\n项目经理更多出现在传统行业以及互联网行业的大型项目中，互联网行业的日常项目管理则是产品经理负责。\n\n### 3.2 需求分析师和产品经理的需求来源差异\n1. **需求分析师**\n\n以调研为主。\n\n通常需要长时间到甲方公司长期驻场，帮甲方理顺业务流程实现系统化，需求来源就是甲方和甲方的客户；需求方是行业的从业人员和甲公司干系人。线下频繁的走访调研需求反馈很必要。\n\n项目一般都有《行业规范书》，会对项目的整体框架，性能要求，功能列表有大致要求。\n\n需求分析师的产品是最大要求是公司战略或需求理解能力和推动能力，这类产品不侧重运营，所以需求分析师是运营能力使缺失的，虽然说缺失，但是在他们负责的产品也不需要。优秀的需求分析师具备做大公司IT系统咨询分析师岗位的。\n\n2. **产品经理**\n\n需求以挖掘痛点为主。\n\n需求来源大致分为内部和外部两大类，内部的来自BOSS和涉及部门的同事，外部的来自用户和竞品。\n\n普遍要求或期望产品本身就是“用户”，结合数据、竞品、人性、习惯、反馈，推测出目标用户群体的需求与喜好。\n\n### 3.3  需求分析师和产品经理的职位发展路径差异\n需求分析师通常在传统行业的信息化建设中，需求分析师的发展路径，通常要先转换成产品经理。\n\n产品经理的发展路径则通常从初级产品经理>>模块负责人>>方向负责人>>业务线负责人等多个维度发展。\n\n## <font style="color:rgb(6, 6, 7);">四、作为一名产品经理，你通常会和哪些人合作？</font>\n### 3.1 运营 or  业务\n都说产品是生孩子，运营是养孩子，运营会通过养孩子的反馈告诉产品如何更好的培育孩子。\n\n因此对于产品经理来讲，运营 or 业务是非常关键的角色，是需求反馈来源。\n\n### 3.2 研发团队\n产品经理自己并不会写代码，不会真的落地需求。\n\n如果把产品经理类比成房地产的房屋设计师，产出物是设计稿；那真正搭建房子的是研发，针对房子进行质量管理的是测试。\n\n产品经理往往需要协同研发和测试共同实现需求。\n\n','\n',char(10)),NULL,replace('> 人人都是产品经理\n>','\n',char(10)),NULL,1,0,1,0,NULL,NULL,NULL,NULL,'2025-05-09T04:48:21.522Z','2025-05-09T04:48:21.549Z','2025-05-09T04:48:21.549Z');
CREATE TABLE IF NOT EXISTS "categories" (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        slug TEXT UNIQUE NOT NULL,
        description TEXT,
      parent_id INTEGER,
      post_count INTEGER NOT NULL DEFAULT 0,
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (parent_id) REFERENCES categories(id)
    );
INSERT INTO categories VALUES(5,'保险','insurance','',NULL,1,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(6,'产品经理','product-management','',NULL,12,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(7,'读书笔记','reading','',NULL,4,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(8,'个人博客','personal-blog','',NULL,0,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(9,'家庭生活','family-life','',NULL,5,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(10,'投资理财','finance','',NULL,3,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(11,'开源项目','open-source','',NULL,2,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
INSERT INTO categories VALUES(12,'技术工具','tech-tools','',NULL,29,'2025-05-08T13:15:03.699Z','2025-05-08T13:15:03.699Z');
CREATE TABLE IF NOT EXISTS "tags" (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        slug TEXT UNIQUE NOT NULL,
      post_count INTEGER NOT NULL DEFAULT 0,
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
    );
INSERT INTO tags VALUES(10,'notion','notion',1,'2025-05-07T13:38:08.166Z','2025-05-07T13:38:08.166Z');
INSERT INTO tags VALUES(11,'cursor','cursor',1,'2025-05-07T13:38:08.166Z','2025-05-07T13:38:08.166Z');
INSERT INTO tags VALUES(12,'productivity','productivity',1,'2025-05-07T13:38:08.166Z','2025-05-07T13:38:08.166Z');
INSERT INTO tags VALUES(13,'语雀导入','yu-que-dao-ru-1750hbkw',12,'2025-05-08T13:30:21.743Z','2025-05-08T13:30:21.743Z');
INSERT INTO tags VALUES(14,'房地产','real-estate',1,'2025-05-08 14:37:41','2025-05-08 14:37:41');
INSERT INTO tags VALUES(15,'投资','investment',1,'2025-05-08 14:37:41','2025-05-08 14:37:41');
INSERT INTO tags VALUES(16,'理财','finance',1,'2025-05-08 14:37:41','2025-05-08 14:37:41');
CREATE TABLE IF NOT EXISTS "post_categories" (
      post_id INTEGER NOT NULL,
      category_id INTEGER NOT NULL,
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (post_id, category_id),
        FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
        FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE
    );
INSERT INTO post_categories VALUES(8,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(28,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(53,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(56,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(68,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(70,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(71,11,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(92,9,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(93,9,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(94,9,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(95,9,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(96,10,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(97,10,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(98,7,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(99,7,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(100,5,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(102,11,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(105,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(106,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(107,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(108,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(109,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(110,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(111,10,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(112,6,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(113,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(114,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(115,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(116,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(117,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(118,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(119,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(120,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(121,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(123,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(124,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(126,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(127,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(130,9,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(131,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(132,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(133,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(134,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(135,12,'2025-05-08 13:25:45');
INSERT INTO post_categories VALUES(159,10,'2025-05-08 14:37:41');
INSERT INTO post_categories VALUES(160,12,'2025-05-08 14:50:58');
INSERT INTO post_categories VALUES(161,12,'2025-05-08 16:17:44');
INSERT INTO post_categories VALUES(162,7,'2025-05-08 16:23:08');
INSERT INTO post_categories VALUES(163,7,'2025-05-08 16:23:20');
INSERT INTO post_categories VALUES(164,6,'2025-05-08 16:26:34');
INSERT INTO post_categories VALUES(165,12,'2025-05-08 16:51:51');
INSERT INTO post_categories VALUES(167,6,'2025-05-08 17:26:58');
INSERT INTO post_categories VALUES(169,6,'2025-05-08 17:37:12');
INSERT INTO post_categories VALUES(172,6,'2025-05-08 19:29:37');
INSERT INTO post_categories VALUES(174,6,'2025-05-08 19:39:51');
INSERT INTO post_categories VALUES(177,6,'2025-05-08 20:03:25');
INSERT INTO post_categories VALUES(175,6,'2025-05-08 20:09:57');
INSERT INTO post_categories VALUES(178,12,'2025-05-09 04:48:21');
CREATE TABLE IF NOT EXISTS "post_tags" (
      post_id INTEGER NOT NULL,
      tag_id INTEGER NOT NULL,
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (post_id, tag_id),
        FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE,
        FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE CASCADE
    );
INSERT INTO post_tags VALUES(8,10,'2025-05-08 10:21:32');
INSERT INTO post_tags VALUES(8,11,'2025-05-08 10:21:32');
INSERT INTO post_tags VALUES(8,12,'2025-05-08 10:21:32');
INSERT INTO post_tags VALUES(159,14,'2025-05-08 14:37:41');
INSERT INTO post_tags VALUES(159,15,'2025-05-08 14:37:41');
INSERT INTO post_tags VALUES(159,16,'2025-05-08 14:37:41');
INSERT INTO post_tags VALUES(160,13,'2025-05-08 14:50:58');
INSERT INTO post_tags VALUES(161,13,'2025-05-08 14:56:50');
INSERT INTO post_tags VALUES(162,13,'2025-05-08 16:23:08');
INSERT INTO post_tags VALUES(163,13,'2025-05-08 16:23:20');
INSERT INTO post_tags VALUES(164,13,'2025-05-08 16:26:34');
INSERT INTO post_tags VALUES(165,13,'2025-05-08 16:51:51');
INSERT INTO post_tags VALUES(167,13,'2025-05-08 17:26:58');
INSERT INTO post_tags VALUES(169,13,'2025-05-08 17:37:12');
INSERT INTO post_tags VALUES(172,13,'2025-05-08 19:29:37');
INSERT INTO post_tags VALUES(174,13,'2025-05-08 19:39:51');
INSERT INTO post_tags VALUES(175,13,'2025-05-08 19:46:59');
INSERT INTO post_tags VALUES(177,13,'2025-05-08 20:03:25');
INSERT INTO post_tags VALUES(178,13,'2025-05-09 04:48:21');
CREATE TABLE IF NOT EXISTS "slug_mapping" (
      slug TEXT PRIMARY KEY,
      post_id INTEGER NOT NULL,
      is_primary BOOLEAN NOT NULL DEFAULT 0,
      created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE
    );
INSERT INTO slug_mapping VALUES('2025-qing-ming-quan-zhou-san-ri-you-xiang-xi-xing-cheng-5676ewxf',92,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('Asset Tracker',113,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('Cursor rules',114,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('Notion API',119,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('R1  vs Claude 3.5 Sonnet',70,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('Sublime Text',120,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('ai-bang-wo-xie-sql-shi-bei-xiaolti-sheng-567732oc',112,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('asset',68,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('brd-ye-wu-xu-qiu-wen-dang-mu-ban',105,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('chan-pin-jia-gou-she-ji-zhi-chan-pin-shi-ti-she-ji-yi-er',108,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('chang-yong-gong-ju',133,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('cursor-jie-shao-5675frd3',115,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('cursor-man-xue-shi-yong-5674h30j',116,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('deepseek-ben-di-hua-bu-shu',123,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('deepseek-man-xue-fu-huo',124,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('dingtalkmonitor-da-zao-qi-ye-ji-ding-ding-jian-kong-li-qi',102,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('gang-bi-gou-mai-mei-zhai-xue-xi',97,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('ge-ren',95,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('github-cang-ku-san-zhong-ke-long-fang-shi',118,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('github-desktop-an-zhuang-yu-han-hua',117,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('gong-ji-ce-gai-ge-bei-jing-xia-zhong-guo-duo-ceng-ci-nong-ye-bao-xian-chan-pin-jie-gou-yan-jiu-du-shu-bi-ji',99,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('gong-zuo-chang-yong-mo-ban',109,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('hang-zhou-2024-nian-yuan-dan-zou-yun-ji-hua',93,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('hang-zhou-zhou-bian-zhou-mo-chu-xing-ji-hua',94,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('how-to-get-notion-database-fields-summary-5676nw9c',56,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('jiao-yi-chan-pin-jing-li',107,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('monitor',71,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('nong-ye-bao-xian-5675qgmm',100,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('notion+cursor',126,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('notion-plus-cursor-shi-yong-zhi-nan-5673uwrh',8,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('notioncursor-2',53,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('notionpluspushplus-gong-zhong-hao-ren-wu-ti-xing-5674w990',127,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('ru-he-huo-qu-notion-shu-ju-ku-zi-duan-xin-xi',132,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('shu-ju-ku-biao-jie-gou',134,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('vs-code-zhong-shi-yong-drawio-wan-quan-zhi-nan',121,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('vscode-drawio-usage-5676juqi',28,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('xin-ji-jian-shi-dai-nong-ye-bao-xian-shu-zhi-hua-zhuan-xing-du-shu-bi-ji',98,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('yi-xie-diao-yan',130,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('you-zhi-you-xing-zi-chan-mo-kuai-diao-yan',111,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('yu-que-wen-dang-neng-li-zhi-chi-zheng-li',135,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('zai-macos-shang-qing-song-bu-shu-docker-xiang-xi-an-zhuang-yu-pei-zhi-b-5674to9g',131,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('zhi-fu-bao-yi-liao-jian-kang-mo-kuai-chan-pin-ti-yan',110,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('zhu-liu-zhi-neng-ti-ping-tai-dui-bi',106,1,'2025-05-08 11:41:34','2025-05-08 11:41:34');
INSERT INTO slug_mapping VALUES('fang-di-chan-xi-lie',159,1,'2025-05-08 14:37:41','2025-05-08 14:37:41');
INSERT INTO slug_mapping VALUES('yi-wen-xiang-jie-fang-di-chan-tou-zi-1686cmce',159,0,'2025-05-08 14:37:41','2025-05-08 14:37:41');
CREATE TABLE IF NOT EXISTS "sync_status" (
      id INTEGER PRIMARY KEY CHECK (id = 1),
      last_sync_time DATETIME,
      is_sync_in_progress BOOLEAN NOT NULL DEFAULT 0,
      updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
    );
INSERT INTO sync_status VALUES(1,NULL,0,'2025-05-08 10:21:32');
ANALYZE sqlite_schema;
INSERT INTO sqlite_stat1 VALUES('posts','idx_posts_published_at','44 44');
INSERT INTO sqlite_stat1 VALUES('posts','idx_posts_updated_at','44 2');
INSERT INTO sqlite_stat1 VALUES('posts','idx_posts_created_at','44 5');
INSERT INTO sqlite_stat1 VALUES('posts','idx_posts_is_featured','44 44');
INSERT INTO sqlite_stat1 VALUES('posts','idx_posts_is_published','44 44');
INSERT INTO sqlite_stat1 VALUES('posts','sqlite_autoindex_posts_1','44 1');
INSERT INTO sqlite_stat1 VALUES('categories','idx_categories_parent_id','1 1');
INSERT INTO sqlite_stat1 VALUES('categories','idx_categories_slug','1 1');
INSERT INTO sqlite_stat1 VALUES('categories','sqlite_autoindex_categories_1','1 1');
INSERT INTO sqlite_stat1 VALUES('tags','idx_tags_slug','3 1');
INSERT INTO sqlite_stat1 VALUES('tags','sqlite_autoindex_tags_1','3 1');
INSERT INTO sqlite_stat1 VALUES('post_categories','sqlite_autoindex_post_categories_1','1 1 1');
INSERT INTO sqlite_stat1 VALUES('post_tags','sqlite_autoindex_post_tags_1','3 3 1');
INSERT INTO sqlite_stat1 VALUES('slug_mapping','sqlite_autoindex_slug_mapping_1','44 1');
INSERT INTO sqlite_stat1 VALUES('sync_status',NULL,'1');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('posts',179);
INSERT INTO sqlite_sequence VALUES('categories',15);
INSERT INTO sqlite_sequence VALUES('tags',16);
CREATE INDEX idx_posts_is_published ON posts(is_published);
CREATE INDEX idx_posts_is_featured ON posts(is_featured);
CREATE INDEX idx_posts_created_at ON posts(created_at);
CREATE INDEX idx_posts_updated_at ON posts(updated_at);
CREATE INDEX idx_posts_published_at ON posts(published_at);
CREATE INDEX idx_categories_slug ON categories(slug);
CREATE INDEX idx_categories_parent_id ON categories(parent_id);
CREATE INDEX idx_tags_slug ON tags(slug);
COMMIT;
